version = 4.2

//
// Saved by sw version: 2024.1
//

model "single_phase_microgrid" {
    configuration {
        hil_device = "VHIL+"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = .5e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = False
        reset_analog_outputs_on_sim_stop = True
        reset_analog_outputs_on_sim_stop_mode = Offset values
        reset_digital_outputs_on_sim_stop = True
        vhil_adio_loopback = False
        cpl_stb = True
        enb_dep_sw_detect = False
        code_section = "internal memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0001
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
        user_cpu_part_option = "default"
        matrix_based_reduction = True
        cpl_dynamics_analysis = False
        export_ss_to_pickle = False
        ground_scope_core = True
        dss_num_tol = 1e-15
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_directory = ""
        cce_custom_type_int = ""
        cce_custom_type_uint = ""
        cce_custom_type_real = ""
        tunable_params = "component defined"
        sp_compiler_type = "C compiler"
        sig_stim = "off"
        export_resource_list = ""
        export_dependency_list = ""
        excluded_resource_list = ""
        export_out_file = ""
        export_lock_top_level = True
        export_encrypt_library = True
        export_encrypt_resources = True
        dae_solver = "BDF"
        max_sim_step = 1e-4
        simulation_time = 1.0
        abs_tol = 1e-3
        rel_tol = 1e-3
        init_sim_step = 1e-6
        r_on_sw = 1e-3
        v_on_diode = 0.2
        data_sampling_rate = 0
        feedthrough_validation_error_level = error
    }

    component Subsystem Root {
        component "core/Ground" gnd3 {
        }
        [
            position = 8552, 8288
            hide_name = True
        ]

        component "core/Resistor" R_load {
            resistance = "LOAD_LINE_RESISTANCE"
        }
        [
            position = 8552, 8176
        ]

        component "core/Inductor" L_load {
            inductance = "LOAD_LINE_INDUCTANCE"
            signal_access = "Inherit"
        }
        [
            position = 8648, 8176
        ]

        component Subsystem MGCC {
            layout = dynamic
            component "core/Double Pole Single Throw Contactor" S1 {
                ctrl_src = "Model"
                enable_fb_out = "True"
                execution_rate = "TS_20KHZ"
                signal_access = "Inherit"
            }
            [
                position = 8176, 8064
                size = 64, 256
            ]

            component "core/Bus Join" "Bus Join1" {
                execution_rate = "TS_20KHZ"
                inputs = "4"
            }
            [
                position = 9056, 7824
                hide_name = True
            ]

            component "core/Voltage Measurement" Vpcc {
                execution_rate = "TS_20KHZ"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 8328, 8064
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vgrid {
                execution_rate = "TS_20KHZ"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 8024, 8064
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" i {
                execution_rate = "TS_20KHZ"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 8272, 7968
                scale = -1, 1
                size = 64, 32
            ]

            component "core/SCADA Input" Pref {
                execution_rate = "TS_20KHZ"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 8944, 7720
            ]

            component "core/SCADA Input" Qref {
                execution_rate = "TS_20KHZ"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 8944, 7784
            ]

            component "core/SCADA Input" STS {
                def_value = "1"
                execution_rate = "TS_20KHZ"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 8112, 7864
            ]

            component "core/Single phase PLL" "Single phase PLL1" {
            }
            [
                position = 8688, 7760
                hide_name = True
                size = 64, 98
            ]

            component "core/Probe" f_pcc {
            }
            [
                position = 8800, 7632
                rotation = left
                scale = -1, 1
            ]

            component "core/Termination" Termination1 {
            }
            [
                position = 8864, 7680
                rotation = left
                hide_name = True
            ]

            component "core/Termination" Termination2 {
            }
            [
                position = 8824, 7680
                rotation = left
                hide_name = True
            ]

            component "core/Termination" Termination6 {
            }
            [
                position = 8736, 7680
                rotation = left
                hide_name = True
            ]

            component "core/Termination" Termination7 {
            }
            [
                position = 8776, 7680
                rotation = left
                hide_name = True
            ]

            component "core/Single-phase Meter" Meter {
                enable_out = "False"
                execution_rate = "TS_20KHZ"
                fgrid = "60.0"
                n_cycles = "1"
            }
            [
                position = 8496, 7968
                size = 80, 80
            ]

            component "core/RMS value" "RMS value1" {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 8688, 7848
            ]

            port "Info out" {
                position = left:3
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9128, 7824
            ]

            port Lug {
                position = bottom:1
                kind = pe
            }
            [
                position = 7912, 7968
                rotation = down
                scale = -1, 1
            ]

            port Nug {
                position = bottom:2
                kind = pe
            }
            [
                position = 7912, 8160
                rotation = down
                scale = -1, 1
            ]

            port Lg {
                position = top:1
                kind = pe
            }
            [
                position = 8616, 7968
                scale = -1, 1
            ]

            port Ng {
                position = top:2
                kind = pe
            }
            [
                position = 8616, 8160
                scale = -1, 1
            ]

            tag Goto1 {
                value = "v_grid"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8104, 8064
                hide_name = True
                size = 60, 20
            ]

            tag Goto9 {
                value = "v_pcc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8408, 8064
                hide_name = True
                size = 60, 20
            ]

            tag Goto10 {
                value = "i"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8344, 7904
                hide_name = True
                size = 60, 20
            ]

            tag Goto11 {
                value = "STS_fb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8248, 7864
                hide_name = True
                size = 60, 20
            ]

            tag From20 {
                value = "STS_fb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8944, 7832
                hide_name = True
                size = 60, 20
            ]

            tag From21 {
                value = "v_pcc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8584, 7760
                hide_name = True
                size = 60, 20
            ]

            junction Junction7 pe
            [
                position = 8328, 8160
            ]

            junction Junction22 pe
            [
                position = 8328, 7968
            ]

            junction Junction23 pe
            [
                position = 8504, 8160
            ]

            junction Junction24 pe
            [
                position = 8016, 8160
            ]

            junction Junction25 pe
            [
                position = 8024, 7968
            ]

            junction Junction26 sp
            [
                position = 8632, 7760
            ]

            connect "Bus Join1.out" "Info out" as Connection21
            connect Junction7 S1.b_out as Connection563
            [
                breakpoints = 8256, 8160
            ]
            connect Vpcc.n_node Junction7 as Connection564
            connect Goto1 Vgrid.out as Connection571
            connect Goto9 Vpcc.out as Connection572
            connect i.n_node S1.a_out as Connection636
            connect Goto10 i.out as Connection640
            connect S1.feedback_out Goto11 as Connection641
            connect STS.out S1.ctrl_in as Connection651
            connect "Single phase PLL1.f" f_pcc.in as Connection653
            connect Termination1.in "Single phase PLL1.sin(wt)" as Connection654
            connect Termination2.in "Single phase PLL1.wt" as Connection655
            connect Termination6.in "Single phase PLL1.d" as Connection656
            connect Termination7.in "Single phase PLL1.q" as Connection657
            connect Vpcc.p_node Junction22 as Connection661
            connect Junction22 i.p_node as Connection662
            [
                breakpoints = 8328, 7968; 8328, 7968; 8328, 7968
            ]
            connect Meter.in Junction22 as Connection663
            connect Lg Meter.out as Connection685
            connect Junction7 Junction23 as Connection686
            [
                breakpoints = 8328, 8160; 8328, 8160
            ]
            connect Junction23 Meter.N as Connection687
            [
                breakpoints = 8496, 8160; 8496, 8160
            ]
            connect Ng Junction23 as Connection688
            connect S1.b_in Junction24 as Connection689
            connect Junction24 Vgrid.n_node as Connection690
            [
                breakpoints = 8024, 8160; 8024, 8160
            ]
            connect Nug Junction24 as Connection691
            connect Vgrid.p_node Junction25 as Connection692
            connect Junction25 S1.a_in as Connection693
            [
                breakpoints = 8024, 7968; 8024, 7968
            ]
            connect Lug Junction25 as Connection694
            connect From21 Junction26 as Connection695
            connect Junction26 "Single phase PLL1.In" as Connection696
            connect "RMS value1.in" Junction26 as Connection697
            connect "RMS value1.out" "Bus Join1.in3" as Connection698
            connect From20 "Bus Join1.in2" as Connection699
            connect Qref.out "Bus Join1.in1" as Connection700
            [
                breakpoints = 8984, 7784; 8984, 7816
            ]
            connect Pref.out "Bus Join1.in" as Connection701
            [
                breakpoints = 9000, 7720; 9000, 7800
            ]
        }
        [
            position = 8760, 8032
            rotation = right
            hide_name = True
            size = 120, 72
        ]

        component "core/Ground" gnd4 {
        }
        [
            position = 8552, 8104
            hide_name = True
        ]

        component Subsystem Grid {
            layout = dynamic
            component "core/SCADA Input" Vrms {
                def_value = "220"
                execution_rate = "TS_20KHZ"
                max = "250"
                min = "0"
                signal_access = "Inherit"
                unit = "V"
            }
            [
                position = 8264, 8144
            ]

            component "core/SCADA Input" Flag {
                execution_rate = "TS_20KHZ"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 7960, 8112
            ]

            component "core/Constant" Constant1 {
                execution_rate = "TS_20KHZ"
                value = "0"
            }
            [
                position = 8264, 8224
            ]

            component "core/Probe" freq_ref {
            }
            [
                position = 8224, 8056
                rotation = left
            ]

            component "core/SCADA Input" F_NADIR {
                def_value = "10"
                execution_rate = "TS_20KHZ"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 7960, 8160
            ]

            component "core/SCADA Input" ROCOF {
                def_value = "0.99995"
                execution_rate = "TS_20KHZ"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 7960, 8208
            ]

            component "core/Probe" flag {
            }
            [
                position = 8016, 8056
                rotation = left
            ]

            component "core/C function" "C function2" {
                arb_defs = "/*Begin code section*/

/*End code section*/"
                execution_rate = "TS_20KHZ"
                global_variables = "real count;real Ts;real k;real flag_a;real pi;real timer_a;real freq;real kf;real w1;real aux;"
                init_fnc = "/*Begin code section*/
count = 0;
Ts = 50e-6;
k = 10000000000;
flag_a = 0;
pi = 3.1415;
timer_a = 0;
freq = 0;
kf = 0;
w1 = 1;
aux = 0;
/*End code section*/"
                input_terminals = "real flag;real F_Nadir;real ROCOF;real f_nom;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True"
                input_terminals_show_labels = "True;True;True;True"
                output_fnc = "/*Begin code section*/
aux = f_nom-F_Nadir;

if(aux > 0)
{
    w1=ROCOF/aux;
}



kf=pi/w1/Ts;

if (flag>flag_a) k=0;

if ( k<kf  )
   {
     freq=f_nom-(f_nom-F_Nadir)*sin(w1*k*Ts);
     k=k+1;  
   }
else freq=f_nom;

flag_a=flag;

out_freq = freq;
/*End code section*/"
                output_terminals = "real out_freq;"
                output_terminals_dimensions = "inherit"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "True"
            }
            [
                position = 8120, 8184
                size = 120, 200
            ]

            component "core/SCADA Input" freq {
                def_value = "60"
                execution_rate = "TS_20KHZ"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 7960, 8256
            ]

            component "core/Signal Controlled Sinusoidal Voltage Source" Vsp_sin1 {
            }
            [
                position = 8360, 8184
                size = 64, 80
            ]

            port N {
                position = left:2
                kind = pe
            }
            [
                position = 8464, 8256
                rotation = down
            ]

            port L {
                position = left:1
                kind = pe
            }
            [
                position = 8464, 8104
                rotation = down
            ]

            junction Junction60 sp
            [
                position = 8016, 8112
            ]

            junction Junction61 sp
            [
                position = 8224, 8184
            ]

            connect Flag.out Junction60 as Connection455
            connect Junction60 flag.in as Connection456
            connect "C function2.flag" Junction60 as Connection457
            connect freq.out "C function2.f_nom" as Connection486
            connect ROCOF.out "C function2.ROCOF" as Connection487
            connect F_NADIR.out "C function2.F_Nadir" as Connection488
            connect Vsp_sin1.p L as Connection496
            connect Vsp_sin1.n N as Connection497
            connect Vsp_sin1.Ph Constant1.out as Connection498
            connect Vsp_sin1.Rms Vrms.out as Connection499
            connect freq_ref.in Junction61 as Connection501
            connect Junction61 "C function2.out_freq" as Connection502
            connect Vsp_sin1.f Junction61 as Connection503
        }
        [
            position = 9072, 8032
            hide_name = True
            size = 72, 120
        ]

        component "core/Resistor" R_grid {
            resistance = "GRID_LINE_RESISTANCE"
        }
        [
            position = 8872, 7992
        ]

        component "core/Inductor" L_grid {
            inductance = "GRID_LINE_INDUCTANCE"
            signal_access = "Inherit"
        }
        [
            position = 8968, 7992
        ]

        component Subsystem Load {
            layout = dynamic
            component "core/Single-phase Meter" Meter {
                enable_out = "False"
                execution_rate = "TS_20KHZ"
                fgrid = "60.0"
                n_cycles = "1"
            }
            [
                position = 7664, 7976
                size = 80, 80
            ]

            component "core/Single-phase Variable Load" "Single-phase Variable Load" {
                Snom = "S_NOMINAL"
                Vnom_rms = "V_RMS"
                execution_rate = "TS_20KHZ"
                fnom = "F_GRID"
                pf_nom = "0.8"
            }
            [
                position = 7808, 8176
                size = 184, 160
            ]

            port L {
                position = auto:auto
                kind = pe
            }
            [
                position = 7552, 7976
            ]

            port N {
                position = auto:auto
                kind = pe
            }
            [
                position = 7552, 8064
            ]

            junction Junction1 pe
            [
                position = 7664, 8064
            ]

            connect L Meter.in as Connection1
            connect Meter.out "Single-phase Variable Load.L" as Connection2
            connect N Junction1 as Connection4
            connect Junction1 "Single-phase Variable Load.N" as Connection5
            connect Meter.N Junction1 as Connection6
        }
        [
            position = 8760, 8216
            hide_name = True
            size = 72, 120
        ]

        component "core/Resistor" R_VSC2 {
            resistance = "VSC2_LINE_RESISTANCE"
        }
        [
            position = 8320, 8176
        ]

        component "core/Inductor" L_VSC2 {
            inductance = "VSC2_LINE_INDUCTANCE"
            signal_access = "Inherit"
        }
        [
            position = 8416, 8176
        ]

        component "core/Ground" gnd7 {
        }
        [
            position = 8416, 8288
            hide_name = True
        ]

        component Subsystem VSC_BACKUP0 {
            layout = dynamic
            component "core/Bus Split" "Bus Split1" {
                outputs = "4"
            }
            [
                position = 9568, 7648
                hide_name = True
            ]

            component "core/Resistor" R2 {
                resistance = "VSC1_RD"
            }
            [
                position = 10232, 7200
                rotation = right
                hide_name = True
            ]

            component "core/C function" DROOP {
                arb_defs = "/*Begin code section*/

/*End code section*/"
                execution_rate = "TS_20KHZ"
                global_variables = "real vo;real vab;real Ts;real theta;real L;real a1;real pi;real vL;real x;real w60;real va;real vb;real a;real p;real q;real m;real n;real ia;real ib;real XL;real V;real Eo;real wo;real pf;real qf;real E;real w;real e;"
                init_fnc = "/*Begin code section*/
// SOGI for voltage variables
va = 0;
vb = 0;

// SOGI for current variables
ia = 0;
ib = 0;

// Sampling time
Ts=50e-6;

// General
pi=3.14159265358979;
a1=2*pi*800;
w60=2*pi*60;
a=2.*pi*15;
m=2*pi*3./15e3;
n=22./15e3;
Eo=220;
wo=2*pi*60;
V=220;
theta=0;
pf=0;
qf=0;
E = 0;
w = 0;
e = 0;
/*End code section*/"
                input_terminals = "real IN_I;real IN_V;real IN_P0;real IN_Q0;real IN_V0;real IN_W0;"
                input_terminals_dimensions = "1;1;1;1;1;1"
                input_terminals_feedthrough = "True;True;True;True;True;True"
                input_terminals_show_labels = "True;True;True;True;True;True"
                output_fnc = "/*Begin code section*/
// SOGI for the voltage
vb = vb + Ts*w60*va;
va = va + Ts*w60*(-va-vb+IN_V);

// SOGI for the current
ib= ib + Ts*w60 * ia;
ia= ia + Ts*w60 * (-ia-ib+IN_I);

// active and reactive power
p=(va*ia+vb*ib)/2.;
q=(vb*ia-va*ib)/2.;

// low pass filter
pf = pf + Ts * (-a*pf + a*p);
qf = qf + Ts * (-a*qf + a*q);

/// droop Law
E = Eo - n * (qf - IN_Q0);
w = wo - m * (pf - IN_P0);

// inverter output voltage
e = sqrt(2) * E * sin(theta);

// theta integration
theta = theta + Ts * w;

// Output handling
OUT_PF = pf;
OUT_QF = qf;
OUT_W = w;
OUT_V_RMS = E;
OUT_V = e;
/*End code section*/"
                output_terminals = "real OUT_PF;real OUT_QF;real OUT_W;real OUT_V_RMS;real OUT_V;"
                output_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True;True;True"
                output_terminals_show_labels = "True;True;True;True;True"
            }
            [
                position = 10248, 7648
                size = 128, 320
            ]

            component "core/C function" "INNER LOOPS" {
                arb_defs = "/*Begin code section*/

/*End code section*/"
                execution_rate = "TS_20KHZ"
                global_variables = "real ki;real kv;real ku;real pi;real w60;real Ts;real u;real L;real Ilim;real theta;real Iref;real Kv1;real Kv2;real Kv3;real Kv4;real Kv5;real xc1;real xc2;real vL;real L2;real av;real xv;real xc1_a;real xc2_a;real kw;real ew;real ew2;real u_a;real kr;real uL;real Iref_L;real vref;real vc;"
                init_fnc = "/*Begin code section*/
// Virtual inductor variables
xv = 0;

// State feedback variables
xc1 = 0;
xc1_a = 0;
xc2 = 0;
xc2_a = 0;

// Control action variables
u = 0;

Ts=50e-6;
L2=2.e-3;
pi=3.14159265358979;
w60=2*pi*60;
av=2*pi*800;

//Inner current controller state feedback gain
// Curent Limiter
//Q=diag([10000 1 1])
///r=1
ki=4.4753 ;
kv=-0.9946 ;
ku=0.9946;
kr=6;
// three design gains for the voltage loop
// bw=1 slow
// bw= 2 medium
// bw=3 fast
// Voltage loop feedback gains 
//Voltage Controller
///Q=diag([1 1 1 1 1])
///r=2000000

Kv1=0.173699671106417 ;
Kv2=0.168748093394050 ;
Kv3=0.016999643012784;
Kv4=0.024445795550324;
Kv5=-0.025272466527808;
kw=6;

vref = 0;
vc = 0;
/*End code section*/"
                input_terminals = "real IN_IL1;real IN_VC;real IN_V_REF;real IN_IL2;"
                input_terminals_dimensions = "1;1;1;1"
                input_terminals_feedthrough = "True;True;True;True"
                input_terminals_show_labels = "True;True;True;True"
                output_fnc = "/*Begin code section*/
// virtual inductor drop;
vL=av * L2 * IN_IL2 - av * xv;
vref = IN_V_REF - vL;

// Voltage loop state feedback control action
Iref= -Kv1*IN_IL1 - Kv2*IN_VC - Kv3*u - Kv4*xc1 - Kv5*xc2;

//Current limit with anti-windup
Iref_L=Iref;
if (Iref*Iref/sqrt(Iref*Iref)>=300) 
    {
        Iref_L=300*Iref/sqrt(Iref*Iref);
    }    
ew=Iref_L-Iref;

// Current loop state feedback control action 
u=-ki*IN_IL1 - kv*IN_VC - ku*u + kr * IN_V_REF; //Iref_L

// Anti-windup for the saturation of the modulating signals
uL=u;
if (u*u/sqrt(u*u)>=400) 
{
    uL=400*u/sqrt(u*u);
}
ew=ew+(uL-u)/kr;

// Update of the controller and virtual inductor variables
xc1_a=xc1;
xc2_a=xc2;
xc1=xc2;
xc2=-xc1_a*exp(-2*0.1*Ts)+2.*xc2_a*exp(-0.1*Ts)*cos(w60*Ts)+ (vref-IN_VC) + kw*ew;
xv=(1-Ts*av)*xv+Ts*L2*av*IN_IL2;

// Output handling
OUT_ENABLE = 1;
OUT_PWM_A = uL*1.0/400.0;
OUT_PWM_B = -uL*1.0/400.0;
/*End code section*/"
                output_terminals = "real OUT_ENABLE;real OUT_PWM_A;real OUT_PWM_B;"
                output_terminals_dimensions = "1;1;1"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "True;True;True"
            }
            [
                position = 10800, 7576
                size = 128, 176
            ]

            component "core/Probe" V_DROOP {
            }
            [
                position = 10392, 7824
                rotation = down
                scale = -1, -1
            ]

            component "core/Voltage Measurement" VC {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10296, 7200
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" IL2 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10376, 7056
                size = 64, 32
            ]

            component "core/Probe" PF2 {
            }
            [
                position = 10392, 7520
                rotation = down
                scale = -1, 1
            ]

            component "core/Inductor" L6 {
                inductance = "VSC1_LF"
                signal_access = "Inherit"
            }
            [
                position = 9960, 7056
                hide_name = True
            ]

            component "core/Voltage Source" Vdc {
                init_const_value = "VSC1_VDC"
            }
            [
                position = 9688, 7176
                rotation = right
            ]

            component "core/Probe" V_RMS_DROOP {
            }
            [
                position = 10392, 7712
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" QF2 {
            }
            [
                position = 10392, 7584
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" W_DROOP {
            }
            [
                position = 10392, 7648
                rotation = down
                scale = -1, 1
            ]

            component "core/Capacitor" C2 {
                capacitance = "VSC1_C"
                signal_access = "Inherit"
            }
            [
                position = 10232, 7112
                rotation = right
                hide_name = True
            ]

            component "core/Current Measurement" IL1 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10160, 7056
                size = 64, 32
            ]

            component "core/Resistor" R3 {
                resistance = "1e-3"
            }
            [
                position = 9688, 7096
                rotation = right
                hide_name = True
            ]

            component "core/Product" Product1 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 9688, 7512
            ]

            component "core/Product" Product2 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 9688, 7584
            ]

            component "core/Signal switch" "Signal switch1" {
                criterion = "ctrl >= threshold"
                execution_rate = "TS_20KHZ"
            }
            [
                position = 10024, 7616
                hide_name = True
            ]

            component "core/Constant" Constant4 {
                execution_rate = "TS_20KHZ"
                value = "0"
            }
            [
                position = 9912, 7664
                hide_name = True
            ]

            component "core/Signal switch" "Signal switch3" {
                criterion = "ctrl >= threshold"
                execution_rate = "TS_20KHZ"
            }
            [
                position = 10024, 7720
                hide_name = True
            ]

            component "core/Constant" Constant9 {
                execution_rate = "TS_20KHZ"
                value = "VSC1_S"
            }
            [
                position = 9496, 7504
                hide_name = True
            ]

            component "core/Single-phase Meter" Meter {
                enable_out = "False"
                execution_rate = "TS_02KHZ"
                fgrid = "60.0"
                n_cycles = "1"
            }
            [
                position = 10568, 7056
                size = 80, 80
            ]

            component "core/Probe" VSC1_COM {
            }
            [
                position = 9992, 6944
                rotation = down
                scale = -1, 1
            ]

            component "core/Bus Join" "Bus Join1" {
                inputs = "3"
            }
            [
                position = 9904, 6944
            ]

            component "core/Single Phase Inverter" "GRID FORMING" {
                carr_ph_offset = "[0.0, 0.0]"
                carrier_freq = "10e3"
                ctrl_src = "Internal modulator"
                execution_rate = "TS_20KHZ"
                fvd_def_method = "LUT"
                load_mode = "on either"
                signal_access = "Inherit"
            }
            [
                position = 9824, 7152
                size = 127, 256
            ]

            component "core/Constant" Constant10 {
                execution_rate = "TS_20KHZ"
                value = "220"
            }
            [
                position = 10112, 7728
                hide_name = True
            ]

            component "core/Constant" Constant11 {
                execution_rate = "TS_20KHZ"
                value = "377"
            }
            [
                position = 10112, 7792
                hide_name = True
            ]

            component "core/C function" SOGI_QSG {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;

// Current SOGI
struct SOGIqsg i_sogi;
float i_alpha = 0;
float i_beta = 0;
float i_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\1phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.2, 0.02);

// Current SOGI Variables
i_alpha = 0;
i_beta = 0;
i_freq = 60;
// Current SOGI Initialization
SOGIInit(&i_sogi, i_freq, 0.6, 0.02);
/*End code section*/"
                input_terminals = "real IN_VGRID;real IN_IL2;"
                input_terminals_dimensions = "1;1"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
//Execução da Rotina do SOGI para a Tensão
executeSOGI(&v_sogi, IN_VGRID, &v_alpha, &v_beta, &v_freq);
//Execução da Rotina do SOGI para a Corrente
executeSOGI(&i_sogi, IN_IL2, &i_alpha, &i_beta, &i_freq);
//Atribuição dos valores as saídas do bloco
OUT_V = v_alpha;
OUT_V_QUAD = v_beta;
OUT_I = i_alpha;
OUT_I_QUAD = i_beta;
OUT_OMEGA = v_freq;
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_V_QUAD;real OUT_I;real OUT_I_QUAD;real OUT_OMEGA;"
                output_terminals_dimensions = "1;1;1;1;1"
                output_terminals_feedthrough = "True;True;True;True;True"
                output_terminals_show_labels = "False;False;False;False;False"
            }
            [
                position = 9680, 8096
                size = 120, 312
            ]

            component "core/C function" DROOP_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Constant definitions
const float V0 = 220;
const float W0 = 376.9911;
const float DELTA_V = 33;
const float DELTA_W = 18.8495559215;
const float TWOPI = 6.2831;

// Structs redefinition
struct Droop
{
    // droop variables
    float p_max;
    float q_max;
    float p_ref;
    float q_ref;
    float v0;
    float w0;
    float m;
    float n;
    float delta_v;
    float delta_w;
    // variables to implement butterworth second order low pass filter
    // for active power
    float p_kminus1;
    float p_kminus2;
    float pf_kminus1;
    float pf_kminus2;
    // for reactive power
    float q_kminus1;
    float q_kminus2;
    float qf_kminus1;
    float qf_kminus2;
};

// Structs declaration
struct Droop droop;

// Droop Controller variables
float p = 0;
float q = 0;
float p_ref = 0;
float q_ref = 0;
float v_ref = 0;
float w_ref = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_droop.dll"
                dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_droop.dll"
                execution_rate = "TS_02KHZ"
                h_file_path = "..\src\droop.h"
                h_file_path_full = "C:\projetos\1phase_microgrid\src\droop.h"
                init_fnc = "/*Begin code section*/
// Droop variables
p = 0;
q = 0;
p_ref = 0;
q_ref = 0;
v_ref = 0;
w_ref = 0;
// Controllers initialization
DroopControlInit(&droop, 15000, 15000, V0, W0, DELTA_V, DELTA_W);
/*End code section*/"
                input_terminals = "real IN_V_DIR;real IN_V_QUAD;real IN_I_DIR;real IN_I_QUAD;real IN_P0;real IN_Q0;real IN_MICROGRID_STATUS;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    if(IN_MICROGRID_STATUS == 1){
        // Active power ramp
        if(IN_P0 > p_ref) p_ref += 2;
        if(IN_P0 < p_ref) p_ref -= 2;
        // Reactive power ramp
        if(IN_Q0 > q_ref) q_ref += 2;
        if(IN_Q0 < q_ref) q_ref -= 2;
        // Set new power reference
        setDroopPQ(&droop, p_ref, q_ref);
    }else{
        setDroopPQ(&droop, 0.0, 0.0);
    }   
    // Droop controller execution
    calculateDroopPQ(&droop, IN_V_DIR, IN_V_QUAD, IN_I_DIR, IN_I_QUAD, &p, &q);
    executeDroopControl(&droop, &v_ref, &w_ref);
    // Output values
    OUT_V_REF = v_ref;
    OUT_OMEGA_REF = w_ref;
    OUT_P = p;
    OUT_Q = q;
}else{
    // Output values
    OUT_V_REF = 0;
    OUT_OMEGA_REF = 0;
    OUT_P = 0;
    OUT_Q = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V_REF;real OUT_OMEGA_REF;real OUT_P;real OUT_Q;"
                output_terminals_dimensions = "inherit;inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True;True"
                output_terminals_show_labels = "False;False;False;False"
            }
            [
                position = 10200, 8192
                size = 120, 488
            ]

            component "core/Rate Transition" RT31 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8032
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT32 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8096
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT34 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8352
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT35 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 7968
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT36 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8160
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT37 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8416
                hide_name = True
                size = 32, 32
            ]

            component "core/Constant" Constant12 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9944, 8416
                hide_name = True
            ]

            component "core/Rate Transition" RT38 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8224
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT39 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8288
                hide_name = True
                size = 32, 32
            ]

            component "core/C function" "INNER LOOPS1" {
                arb_defs = "/*Begin code section*/

/*End code section*/"
                execution_rate = "TS_20KHZ"
                global_variables = "real ki;real kv;real ku;real pi;real w60;real Ts;real u;real L;real Ilim;real theta;real Iref;real Kv1;real Kv2;real Kv3;real Kv4;real Kv5;real xc1;real xc2;real vL;real L2;real av;real xv;real xc1_a;real xc2_a;real kw;real ew;real ew2;real u_a;real kr;real uL;real Iref_L;real vref;real vc;real TWOPI;real SQRT2;real theta0;real IN_V_REF;"
                init_fnc = "/*Begin code section*/
// Virtual inductor variables
xv = 0;

// State feedback variables
xc1 = 0;
xc1_a = 0;
xc2 = 0;
xc2_a = 0;

// Control action variables
u = 0;

Ts=50e-6;
L2=2.e-3;
pi=3.14159265358979;
w60=2*pi*60;
av=2*pi*800;

//Inner current controller state feedback gain
// Curent Limiter
//Q=diag([10000 1 1])
///r=1
ki=4.4753 ;
kv=-0.9946 ;
ku=0.9946;
kr=6;
// three design gains for the voltage loop
// bw=1 slow
// bw= 2 medium
// bw=3 fast
// Voltage loop feedback gains 
//Voltage Controller
///Q=diag([1 1 1 1 1])
///r=2000000

Kv1=0.173699671106417 ;
Kv2=0.168748093394050 ;
Kv3=0.016999643012784;
Kv4=0.024445795550324;
Kv5=-0.025272466527808;
kw=6;

vref = 0;
vc = 0;

// VITOR:
TWOPI = 6.28318530718;
SQRT2 = 1.41421356237;
theta0 = 0;
IN_V_REF =0;
/*End code section*/"
                input_terminals = "real IN_IL1;real IN_VC;real IN_V_DROOP;real IN_W_DROOP;real IN_IL2;"
                input_terminals_dimensions = "1;1;1;1;inherit"
                input_terminals_feedthrough = "True;True;True;True;True"
                input_terminals_show_labels = "True;True;True;True;False"
                output_fnc = "/*Begin code section*/
// Angle generation for sin calculation
theta0 = Ts * IN_W_DROOP + theta0;
if (theta0 >= TWOPI)
    theta0 -= TWOPI;
// Reference for Voltage Control
IN_V_REF = SQRT2 * IN_V_DROOP * sin(theta0);

// virtual inductor drop;
vL=av * L2 * IN_IL2 - av * xv;
vref = IN_V_REF - vL;

// Voltage loop state feedback control action
Iref= -Kv1*IN_IL1 - Kv2*IN_VC - Kv3*u - Kv4*xc1 - Kv5*xc2;

//Current limit with anti-windup
Iref_L=Iref;
if (Iref*Iref/sqrt(Iref*Iref)>=300) 
    {
        Iref_L=300*Iref/sqrt(Iref*Iref);
    }    
ew=Iref_L-Iref;

// Current loop state feedback control action 
u=-ki*IN_IL1 - kv*IN_VC - ku*u + kr*Iref_L;

// Anti-windup for the saturation of the modulating signals
uL=u;
if (u*u/sqrt(u*u)>=400) 
{
    uL=400*u/sqrt(u*u);
}
ew=ew+(uL-u)/kr;

// Update of the controller and virtual inductor variables
xc1_a=xc1;
xc2_a=xc2;
xc1=xc2;
xc2=-xc1_a*exp(-2*0.1*Ts)+2.*xc2_a*exp(-0.1*Ts)*cos(w60*Ts)+ (vref-IN_VC) + kw*ew;
xv=(1-Ts*av)*xv+Ts*L2*av*IN_IL2;

// Output handling
OUT_ENABLE = 1;
OUT_PWM_A = uL*1.0/400.0;
OUT_PWM_B = -uL*1.0/400.0;
/*End code section*/"
                output_terminals = "real OUT_ENABLE;real OUT_PWM_A;real OUT_PWM_B;"
                output_terminals_dimensions = "1;1;1"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "True;True;True"
            }
            [
                position = 11312, 7608
                size = 128, 240
            ]

            component "core/Probe" PF {
            }
            [
                position = 10352, 8264
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" QF {
            }
            [
                position = 10352, 8408
                rotation = down
                scale = -1, 1
            ]

            component "core/Rate Transition" RT40 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11168, 7608
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT41 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11168, 7656
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT42 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9560, 8232
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT43 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9560, 7960
                hide_name = True
                size = 32, 32
            ]

            component "core/Resistor" R4 {
                resistance = "VSC1_RF"
            }
            [
                position = 10056, 7056
                hide_name = True
            ]

            component "core/C function" VOLTAGE_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Ressonant Controller Struct redeclaration
struct ResonantController {
  float sampling_time;
  float kp;
  float zero_dumping;
  float pole_dumping;
  float omega0;
  float aux_4ts;
  float aux_a;
  float k1;
  float k2;
  float k3;
  float k4;
  float k5;
  float err_kminus1;
  float err_kminus2;
  float u_kminus1;
  float u_kminus2;
};

// RessonantController general variables
float u_bounded = 0;
float u = 0;
float ref0 = 0;
float theta0 = 0;

// ResonantController variables (1*60Hz)
struct ResonantController rc0;
float u0 = 0;
float err0 = 0;

// ResonantController variables (3*60Hz)
struct ResonantController rc3;
float u3 = 0;
float err3 = 0;

// ResonantController variables (5*60Hz)
struct ResonantController rc5;
float u5 = 0;
float err5 = 0;

// Virtual Inductor
float vl2 = 0;
float il2_kminus2 = 0;
float il2_kminus1 = 0;
float vl2_kminus2 = 0;
float vl2_kminus1 = 0;

// All pass filter
float ils = 0;
float il2s_kminus2 = 0;
float il2s_kminus1 = 0;
float ils_kminus2 = 0;
float ils_kminus1 = 0;

// Constants declaration
float TWOPI = 0;
float omega0 = 0;
float TS_10KHZ = 0;
float SQRT2 = 0;
float U_BOUNDARY = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_resonant_control.dll"
                dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_resonant_control.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\resonant_control.h"
                h_file_path_full = "C:\projetos\1phase_microgrid\src\resonant_control.h"
                init_fnc = "/*Begin code section*/
// Auxiliary variables
TWOPI = 6.2831;
omega0 = TWOPI * 60;
TS_10KHZ = 0.0001;
SQRT2 = 1.41421356237;
U_BOUNDARY = 200;

// Virtual Inductor
vl2 = 0;
il2_kminus2 = 0;
il2_kminus1 = 0;
vl2_kminus2 = 0;
vl2_kminus1 = 0;

// All pass filter
ils = 0;
il2s_kminus2 = 0;
il2s_kminus1 = 0;
ils_kminus2 = 0;
ils_kminus1 = 0;

// RessonantController general variables
u_bounded = 0;
u = 0;
ref0 = 0;
theta0 = 0;

// ResonantController variables (1*60 Hz)
u0 = 0;
err0 = 0;

// ResonantController variables (3*60 Hz)
u3 = 0;
err3 = 0;

// ResonantController variables (5*60 Hz)
u5 = 0;
err5 = 0;

// ResonantController initialization
resonantControlInitMatlab(&rc0, 4.753711597365024e-01, -7.994286999974808e-01, 3.246258254171082e-01, -1.998571749993702e+00, 9.999924628840264e-01);
///resonantControlInitMatlab(&rc0, 4.942139496706280e-01, -7.994286999974809e-01, 3.057830354829826e-01, -1.998571749993702e+00, 9.999924628840264e-01);
/*End code section*/"
                input_terminals = "real IN_V_REF;real IN_OMEGA_REF;real IN_VC;real IN_IL2;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // Angle generation for sin calculation
    theta0 = TS_10KHZ * IN_OMEGA_REF + theta0;
    if (theta0 >= TWOPI)
        theta0 -= TWOPI;
    // Reference for Voltage Control
    ref0 = SQRT2 * IN_V_REF * sin(theta0);
    // All pass filter (phase shifter)
    ils = 9.939219697214810e-01*IN_IL2 - 1.993859823296669e+00*il2s_kminus1 + 9.999999999999999e-01*il2s_kminus2 + 1.993859823296669e+00*ils_kminus1 - 9.939219697214806e-01*ils_kminus2;
    il2s_kminus2 = il2s_kminus1;
    il2s_kminus1 = IN_IL2;
    ils_kminus2 = ils_kminus1;
    ils_kminus1 = ils;
    // Virtual Inductor
    vl2 = 4.837818868531209e+00*ils - 4.837818868531209e+00*il2_kminus2 + 2.403966140462295e-01*vl2_kminus1 - 1.444763301122296e-02*vl2_kminus2;
    il2_kminus2 = il2_kminus1;
    il2_kminus1 = ils;
    vl2_kminus2 = vl2_kminus1;
    vl2_kminus1 = vl2;
    // Voltage reference update
    ref0 = ref0 - vl2;
    // Resonant controller execution
    executeResonant(&rc0, ref0, IN_VC, &u0, &err0);
    // Sum of control actions
    u = u0;
    // Voltage control output limitation
    u_bounded = u;
    if( (u*u)/sqrt(u*u) >= U_BOUNDARY){
        u_bounded = U_BOUNDARY * u / sqrt(u*u);
    }
    // Output values
    OUT_V_CTRL = u_bounded;
    OUT_V_REF_CTRL = ref0;
    OUT_VL_DROP = vl2;
}else{
    // Output values
    OUT_V_CTRL = 0;
    OUT_V_REF_CTRL = 0;
    OUT_VL_DROP = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V_CTRL;real OUT_V_REF_CTRL;real OUT_VL_DROP;"
                output_terminals_dimensions = "inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "False;False;False"
            }
            [
                position = 10784, 8168
                size = 120, 440
            ]

            component "core/Rate Transition" RT18 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10672, 8072
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT19 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10672, 8168
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT24 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10672, 7976
                hide_name = True
                size = 32, 32
            ]

            component "core/C function" CURRENT_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Proportional Controller Variables
float err = 0;
float u = 0;
float u0 = 0;
float u_bounded = 0;

// Proportional Controller Constants
float KP = 0;
float U_BOUNDARY = 0;
/*End code section*/"
                execution_rate = "TS_20KHZ"
                init_fnc = "/*Begin code section*/
// Proportional Controller Variables
err = 0;
u = 0;
u0 = 0;
u_bounded = 0;

// Proportional Controller Constants
KP = 8;
U_BOUNDARY = 500;
/*End code section*/"
                input_terminals = "real IN_UV;real IN_IL1;real IN_MICROGRID_STATUS;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True"
                input_terminals_show_labels = "False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // Proportional Controller
    err = IN_UV - IN_IL1;
    u0 = KP * err + IN_MICROGRID_STATUS;
    // Control action
    u = u0;
    // Voltage control output limitation
    u_bounded = u;
    if( (u*u)/sqrt(u*u) >= U_BOUNDARY){
        u_bounded = U_BOUNDARY * u / sqrt(u*u);
    }
    // Output values
    OUT_PWMA = +u_bounded/U_BOUNDARY;
    OUT_PWMB = -u_bounded/U_BOUNDARY;
}else{
    // Output values
    OUT_PWMA = 0;
    OUT_PWMB = 0;
}
/*End code section*/"
                output_terminals = "real OUT_PWMA;real OUT_PWMB;"
                output_terminals_dimensions = "inherit;inherit"
                output_terminals_feedthrough = "True;True"
                output_terminals_show_labels = "False;False"
            }
            [
                position = 11352, 8168
                size = 120, 440
            ]

            component "core/Rate Transition" RT30 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11240, 7976
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT44 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10672, 8264
                hide_name = True
                size = 32, 32
            ]

            component "core/Constant" Constant13 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10528, 8360
                hide_name = True
            ]

            component "core/Constant" Constant14 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11096, 8360
                hide_name = True
            ]

            component "core/Constant" Constant15 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 9696, 6992
                hide_name = True
            ]

            component "core/Probe" UV {
            }
            [
                position = 10976, 8040
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" REF_VC {
            }
            [
                position = 10976, 8232
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" VL_DROP {
            }
            [
                position = 10976, 8368
                rotation = down
                scale = -1, -1
            ]

            component "core/Advanced Low-Pass Filter" "Advanced Low-Pass Filter1" {
                N = "2"
                apb = "3"
                execution_rate = "0.00005"
                fc = "300"
                type_combo = "Butterworth"
            }
            [
                position = 10496, 8296
                hide_name = True
                size = 48, 48
            ]

            component "core/Single Phase Core Coupling" "Core Coupling 2" {
                snb_type_i = "R1-C1"
            }
            [
                position = 10664, 7152
                hide_name = True
                size = 12, 256
            ]

            component "core/Probe" IL2_F {
            }
            [
                position = 10608, 8312
                rotation = down
                scale = -1, -1
            ]

            port L {
                position = right:auto
                kind = pe
            }
            [
                position = 10720, 7056
                scale = -1, 1
            ]

            port N {
                position = right:auto
                kind = pe
            }
            [
                position = 10720, 7248
                scale = -1, 1
            ]

            port "Info in" {
                position = left:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 9496, 7648
            ]

            tag From11 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9712, 6896
                hide_name = True
                size = 60, 20
            ]

            tag Goto11 {
                value = "ENABLE"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10936, 7512
                hide_name = True
                size = 60, 20
            ]

            tag From9 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10488, 7640
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "IL2"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10376, 6984
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From13 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10488, 7560
                hide_name = True
                size = 60, 20
            ]

            tag From10 {
                value = "IL1"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10488, 7512
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10112, 7568
                hide_name = True
                size = 60, 20
            ]

            tag From8 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9712, 6944
                hide_name = True
                size = 60, 20
            ]

            tag Goto13 {
                value = "VC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10376, 7200
                hide_name = True
                size = 60, 20
            ]

            tag Goto9 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10936, 7576
                hide_name = True
                size = 60, 20
            ]

            tag Goto10 {
                value = "IL1"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10160, 6984
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From15 {
                value = "Q0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9912, 7704
                hide_name = True
                size = 60, 20
            ]

            tag Goto6 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10936, 7640
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10112, 7504
                hide_name = True
                size = 60, 20
            ]

            tag Goto12 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10384, 7776
                hide_name = True
                size = 60, 20
            ]

            tag Goto14 {
                value = "P0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9792, 7512
                hide_name = True
                size = 60, 20
            ]

            tag Goto15 {
                value = "Q0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9792, 7584
                hide_name = True
                size = 60, 20
            ]

            tag From18 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10488, 7592
                hide_name = True
                size = 60, 20
            ]

            tag Goto18 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9792, 7648
                hide_name = True
                size = 60, 20
            ]

            tag From19 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9912, 7536
                hide_name = True
                size = 60, 20
            ]

            tag From14 {
                value = "P0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9912, 7600
                hide_name = True
                size = 60, 20
            ]

            tag From95 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9448, 7960
                hide_name = True
                size = 108, 20
            ]

            tag From96 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9448, 8232
                hide_name = True
                size = 108, 20
            ]

            tag Goto107 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9832, 7968
                hide_name = True
                size = 108, 20
            ]

            tag Goto108 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9832, 8032
                hide_name = True
                size = 108, 20
            ]

            tag Goto109 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9832, 8096
                hide_name = True
                size = 108, 20
            ]

            tag Goto110 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9832, 8160
                hide_name = True
                size = 108, 20
            ]

            tag Goto111 {
                value = "OMEGA_VSC1"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9832, 8224
                hide_name = True
                size = 108, 20
            ]

            tag Goto125 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10352, 7976
                size = 108, 20
            ]

            tag Goto126 {
                value = "OMEGA_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10352, 8120
                size = 108, 20
            ]

            tag From129 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9984, 7968
                hide_name = True
                size = 108, 20
            ]

            tag From130 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9984, 8032
                hide_name = True
                size = 108, 20
            ]

            tag From131 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9984, 8096
                hide_name = True
                size = 108, 20
            ]

            tag From132 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9984, 8160
                hide_name = True
                size = 108, 20
            ]

            tag From133 {
                value = "Q0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9960, 8288
                hide_name = True
                size = 60, 20
            ]

            tag From134 {
                value = "P0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9960, 8224
                hide_name = True
                size = 60, 20
            ]

            tag From135 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9960, 8352
                hide_name = True
                size = 60, 20
            ]

            tag Goto129 {
                value = "ENABLE"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11448, 7512
                hide_name = True
                size = 60, 20
            ]

            tag From136 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11056, 7704
                hide_name = True
                size = 60, 20
            ]

            tag From137 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11056, 7560
                hide_name = True
                size = 60, 20
            ]

            tag From138 {
                value = "IL1"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11056, 7512
                hide_name = True
                size = 60, 20
            ]

            tag Goto130 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11448, 7608
                hide_name = True
                size = 60, 20
            ]

            tag Goto131 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11448, 7704
                hide_name = True
                size = 60, 20
            ]

            tag From139 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11056, 7608
                hide_name = True
                size = 60, 20
            ]

            tag From140 {
                value = "OMEGA_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11056, 7656
                hide_name = True
                size = 60, 20
            ]

            tag Goto117 {
                value = "UV"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10936, 7968
                hide_name = True
                size = 108, 20
            ]

            tag Goto118 {
                value = "VREF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10936, 8168
                hide_name = True
                size = 108, 20
            ]

            tag Goto121 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11504, 7968
                hide_name = True
                size = 108, 20
            ]

            tag Goto122 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11504, 8368
                hide_name = True
                size = 108, 20
            ]

            tag From113 {
                value = "IL1"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11136, 8104
                hide_name = True
                size = 108, 20
            ]

            tag From115 {
                value = "UV"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11136, 7976
                hide_name = True
                size = 108, 20
            ]

            tag From141 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10568, 7976
                hide_name = True
                size = 108, 20
            ]

            tag From142 {
                value = "OMEGA_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10568, 8072
                hide_name = True
                size = 108, 20
            ]

            tag From143 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10352, 8296
                hide_name = True
                size = 108, 20
            ]

            tag From108 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10568, 8168
                hide_name = True
                size = 108, 20
            ]

            tag From144 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11136, 8232
                hide_name = True
                size = 108, 20
            ]

            tag Goto132 {
                value = "VRMS_VPCC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9792, 7680
                hide_name = True
                size = 60, 20
            ]

            junction Junction81 sp
            [
                position = 9640, 7504
            ]

            junction Junction82 sp
            [
                position = 9968, 7664
            ]

            junction Junction83 sp
            [
                position = 9984, 7536
            ]

            junction Junction84 sp
            [
                position = 10336, 7776
            ]

            junction Junction87 pe
            [
                position = 10232, 7056
            ]

            junction Junction88 pe
            [
                position = 10296, 7056
            ]

            junction Junction95 sp
            [
                position = 9824, 6944
            ]

            junction Junction96 sp
            [
                position = 9840, 6960
            ]

            junction Junction97 pe
            [
                position = 10232, 7248
            ]

            junction Junction100 sp
            [
                position = 9808, 6992
            ]

            junction Junction101 sp
            [
                position = 10864, 7968
            ]

            junction Junction104 pe
            [
                position = 10296, 7248
            ]

            junction Junction105 pe
            [
                position = 10568, 7248
            ]

            junction Junction107 sp
            [
                position = 10864, 8168
            ]

            junction Junction108 sp
            [
                position = 10576, 8264
            ]

            comment Comment23 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[0] = P0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[1] = Q0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[2] = STS_STATUS   </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[3] = VRMS_PCC   </p></body></html> ENDCOMMENT 
            [
                position = 9560, 7720
            ]

            comment Comment24 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">HANDLE INFO INPUT</p></body></html> ENDCOMMENT 
            [
                position = 9568, 7440
            ]

            comment Comment25 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER</p></body></html> ENDCOMMENT 
            [
                position = 10152, 7440
            ]

            comment Comment26 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">INNER LOOPS</p></body></html> ENDCOMMENT 
            [
                position = 10736, 7440
            ]

            comment Comment27 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">CONTROL </span></p></body></html> ENDCOMMENT 
            [
                position = 9952, 7352
            ]

            comment Comment28 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">POWER SYSTEM</span> </p></body></html> ENDCOMMENT 
            [
                position = 9912, 6784
            ]

            comment Comment16 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">PHASE LOCKED LOOP</p></body></html> ENDCOMMENT 
            [
                position = 9584, 7904
            ]

            comment Comment22 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 10104, 7904
            ]

            comment Comment29 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">INNER LOOPS</p></body></html> ENDCOMMENT 
            [
                position = 11248, 7440
            ]

            comment Comment19 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VOLTAGE CONTROLLER </p></body></html> ENDCOMMENT 
            [
                position = 10688, 7904
            ]

            comment Comment20 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">CURRENT CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 11240, 7896
            ]

            connect DROOP.OUT_V_RMS V_RMS_DROOP.in as Connection490
            connect DROOP.OUT_W W_DROOP.in as Connection489
            connect DROOP.OUT_PF PF2.in as Connection491
            connect R2.p_node C2.n_node as Connection553
            connect DROOP.OUT_QF QF2.in as Connection492
            connect From10 "INNER LOOPS.IN_IL1" as Connection376
            connect VC.out Goto13 as Connection499
            connect From9 "INNER LOOPS.IN_IL2" as Connection417
            connect From13 "INNER LOOPS.IN_VC" as Connection500
            connect Goto11 "INNER LOOPS.OUT_ENABLE" as Connection393
            connect Vdc.p_node R3.n_node as Connection569
            connect Goto18 "Bus Split1.out2" as Connection622
            [
                breakpoints = 9760, 7648; 9744, 7648; 9760, 7648; 9680, 7648; 9680, 7656; 9608, 7656
            ]
            connect Goto14 Product1.out as Connection632
            connect Product2.out Goto15 as Connection633
            connect Product1.in Junction81 as Connection684
            connect Junction81 Product2.in as Connection685
            [
                breakpoints = 9640, 7504; 9640, 7576
            ]
            connect Constant9.out Junction81 as Connection686
            connect From14 "Signal switch1.in" as Connection687
            connect From15 "Signal switch3.in" as Connection688
            connect Constant4.out Junction82 as Connection690
            [
                breakpoints = 9944, 7664; 9968, 7664
            ]
            connect Junction82 "Signal switch1.in1" as Connection691
            [
                breakpoints = 9968, 7656; 9968, 7632
            ]
            connect "Signal switch3.in1" Junction82 as Connection692
            connect "Signal switch1.in2" Junction83 as Connection698
            connect Junction83 From19 as Connection699
            [
                breakpoints = 9984, 7536
            ]
            connect "Signal switch3.in2" Junction83 as Connection700
            [
                breakpoints = 10024, 7664; 9984, 7664
            ]
            connect "Signal switch1.out" DROOP.IN_P0 as Connection701
            connect "Signal switch3.out" DROOP.IN_Q0 as Connection702
            [
                breakpoints = 10072, 7720; 10072, 7680
            ]
            connect From2 DROOP.IN_V as Connection705
            connect From1 DROOP.IN_I as Connection706
            connect Goto12 Junction84 as Connection708
            connect Junction84 DROOP.OUT_V as Connection709
            connect V_DROOP.in Junction84 as Connection710
            connect IL1.out Goto10 as Connection713
            connect IL2.out Goto1 as Connection721
            connect IL1.n_node Junction87 as Connection726
            connect Junction87 C2.p_node as Connection727
            [
                breakpoints = 10232, 7056
            ]
            connect VC.p_node Junction88 as Connection729
            connect Junction88 Junction87 as Connection730
            connect IL2.p_node Junction88 as Connection731
            connect "Bus Join1.out" VSC1_COM.in as Connection749
            connect "GRID FORMING.neg_out" Vdc.n_node as Connection757
            connect R3.p_node "GRID FORMING.pos_out" as Connection758
            connect Goto6 "INNER LOOPS.OUT_PWM_B" as Connection766
            [
                breakpoints = 10880, 7640
            ]
            connect "INNER LOOPS.OUT_PWM_A" Goto9 as Connection767
            [
                breakpoints = 10888, 7576
            ]
            connect From8 Junction95 as Connection773
            [
                breakpoints = 9816, 6944; 9816, 6944
            ]
            connect Junction95 "Bus Join1.in1" as Connection775
            connect From11 Junction96 as Connection776
            [
                breakpoints = 9832, 6896; 9840, 6896
            ]
            connect "Bus Join1.in2" Junction96 as Connection778
            connect Constant10.out DROOP.IN_V0 as Connection779
            connect Constant11.out DROOP.IN_W0 as Connection780
            connect L6.p_node "GRID FORMING.a_in" as Connection788
            connect R2.n_node Junction97 as Connection789
            connect "GRID FORMING.b_in" Junction97 as Connection791
            connect Junction95 "GRID FORMING.InA" as Connection794
            connect Junction96 "GRID FORMING.InB" as Connection795
            connect Goto107 SOGI_QSG.OUT_V as Connection6532
            connect Goto108 SOGI_QSG.OUT_V_QUAD as Connection6533
            connect Goto109 SOGI_QSG.OUT_I as Connection6534
            connect SOGI_QSG.OUT_I_QUAD Goto110 as Connection6535
            connect Goto111 SOGI_QSG.OUT_OMEGA as Connection6536
            connect Goto125 DROOP_CONTROLLER.OUT_V_REF as Connection6712
            connect Goto126 DROOP_CONTROLLER.OUT_OMEGA_REF as Connection6713
            connect RT31.out DROOP_CONTROLLER.IN_V_QUAD as Connection6714
            [
                hide_name = True
            ]
            connect RT32.out DROOP_CONTROLLER.IN_I_DIR as Connection6716
            [
                hide_name = True
            ]
            connect RT35.out DROOP_CONTROLLER.IN_V_DIR as Connection6720
            [
                hide_name = True
            ]
            connect From129 RT35.in as Connection6724
            [
                hide_name = True
            ]
            connect From130 RT31.in as Connection6725
            [
                hide_name = True
            ]
            connect RT36.out DROOP_CONTROLLER.IN_I_QUAD as Connection6726
            [
                hide_name = True
            ]
            connect From132 RT36.in as Connection6727
            [
                hide_name = True
            ]
            connect From131 RT32.in as Connection6728
            [
                hide_name = True
            ]
            connect Constant12.out RT37.in as Connection6736
            connect From133 RT39.in as Connection6738
            connect From134 RT38.in as Connection6739
            connect RT38.out DROOP_CONTROLLER.IN_P0 as Connection6740
            [
                hide_name = True
            ]
            connect RT39.out DROOP_CONTROLLER.IN_Q0 as Connection6741
            [
                hide_name = True
            ]
            connect RT37.out DROOP_CONTROLLER.IN_ENABLE as Connection6742
            [
                hide_name = True
            ]
            connect RT34.out DROOP_CONTROLLER.IN_MICROGRID_STATUS as Connection6743
            [
                hide_name = True
            ]
            connect From135 RT34.in as Connection6744
            connect From136 "INNER LOOPS1.IN_IL2" as Connection6746
            connect Goto129 "INNER LOOPS1.OUT_ENABLE" as Connection6748
            connect From137 "INNER LOOPS1.IN_VC" as Connection6753
            connect From138 "INNER LOOPS1.IN_IL1" as Connection6754
            connect Goto130 "INNER LOOPS1.OUT_PWM_A" as Connection6756
            connect Goto131 "INNER LOOPS1.OUT_PWM_B" as Connection6757
            connect PF.in DROOP_CONTROLLER.OUT_P as Connection6758
            connect QF.in DROOP_CONTROLLER.OUT_Q as Connection6759
            connect RT40.out "INNER LOOPS1.IN_V_DROOP" as Connection6760
            connect RT40.in From139 as Connection6761
            connect RT41.out "INNER LOOPS1.IN_W_DROOP" as Connection6762
            connect RT41.in From140 as Connection6763
            connect RT42.out SOGI_QSG.IN_IL2 as Connection6764
            connect RT42.in From96 as Connection6765
            connect From95 RT43.in as Connection6766
            connect RT43.out SOGI_QSG.IN_VGRID as Connection6767
            connect L6.n_node R4.p_node as Connection6768
            connect IL1.p_node R4.n_node as Connection6769
            connect RT18.out VOLTAGE_CONTROLLER.IN_OMEGA_REF as Connection6549
            connect RT19.out VOLTAGE_CONTROLLER.IN_VC as Connection6551
            connect RT24.out VOLTAGE_CONTROLLER.IN_V_REF as Connection6560
            connect Goto122 CURRENT_CONTROLLER.OUT_PWMB as Connection6568
            connect RT30.out CURRENT_CONTROLLER.IN_UV as Connection6585
            connect From141 RT24.in as Connection6732
            [
                hide_name = True
            ]
            connect From142 RT18.in as Connection6733
            [
                hide_name = True
            ]
            connect RT44.out VOLTAGE_CONTROLLER.IN_IL2 as Connection6770
            connect "Bus Join1.in" Junction100 as Connection6779
            connect Junction100 "GRID FORMING.En" as Connection6780
            [
                breakpoints = 9808, 6992
            ]
            connect Constant15.out Junction100 as Connection6781
            connect Constant14.out CURRENT_CONTROLLER.IN_ENABLE as Connection6784
            connect Goto117 Junction101 as Connection6785
            connect Junction101 VOLTAGE_CONTROLLER.OUT_V_CTRL as Connection6786
            connect UV.in Junction101 as Connection6787
            connect Constant13.out VOLTAGE_CONTROLLER.IN_ENABLE as Connection6798
            connect From108 RT19.in as Connection6807
            connect From113 CURRENT_CONTROLLER.IN_IL1 as Connection6808
            connect IL2.n_node Meter.in as Connection6811
            connect Junction97 Junction104 as Connection6812
            [
                breakpoints = 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248
            ]
            connect Junction104 VC.n_node as Connection6813
            [
                breakpoints = 10296, 7248; 10296, 7248; 10296, 7248; 10296, 7248; 10296, 7248
            ]
            connect Meter.N Junction105 as Connection6814
            connect Junction104 Junction105 as Connection6816
            connect From144 CURRENT_CONTROLLER.IN_MICROGRID_STATUS as Connection6817
            connect RT30.in From115 as Connection6818
            connect VOLTAGE_CONTROLLER.OUT_V_REF_CTRL Junction107 as Connection6824
            connect Junction107 Goto118 as Connection6825
            connect REF_VC.in Junction107 as Connection6826
            connect VL_DROP.in VOLTAGE_CONTROLLER.OUT_VL_DROP as Connection6827
            connect "Advanced Low-Pass Filter1.in" From143 as Connection6829
            connect From18 "INNER LOOPS.IN_V_REF" as Connection6831
            connect Meter.out "Core Coupling 2.a_in" as Connection6832
            connect "Core Coupling 2.a_out" L as Connection6833
            connect Junction105 "Core Coupling 2.b_in" as Connection6834
            connect "Core Coupling 2.b_out" N as Connection6835
            connect Goto121 CURRENT_CONTROLLER.OUT_PWMA as Connection6836
            [
                breakpoints = 11432, 7968; 11432, 7968
            ]
            connect "Advanced Low-Pass Filter1.out" Junction108 as Connection6837
            [
                breakpoints = 10536, 8264
            ]
            connect Junction108 RT44.in as Connection6838
            [
                breakpoints = 10640, 8264
            ]
            connect IL2_F.in Junction108 as Connection6839
            connect "Bus Split1.out1" Product2.in1 as Connection6840
            [
                breakpoints = 9640, 7624; 9640, 7592
            ]
            connect "Bus Split1.out" Product1.in1 as Connection6841
            [
                breakpoints = 9624, 7608; 9624, 7520
            ]
            connect "Info in" "Bus Split1.in" as Connection6843
            connect Goto132 "Bus Split1.out3" as Connection6844
            [
                breakpoints = 9744, 7680; 9680, 7680; 9680, 7672
            ]
        }
        [
            position = 8224, 7768
            size = 72, 120
        ]

        component "core/Resistor" R_VSC1 {
            resistance = "VSC2_LINE_RESISTANCE"
        }
        [
            position = 8320, 7992
        ]

        component "core/Inductor" L_VSC1 {
            inductance = "VSC2_LINE_INDUCTANCE"
            signal_access = "Inherit"
        }
        [
            position = 8416, 7992
        ]

        component "core/Ground" gnd8 {
        }
        [
            position = 8416, 8104
            hide_name = True
        ]

        component Subsystem VSC_BACKUP1 {
            layout = dynamic
            component "core/Resistor" R2 {
                resistance = "VSC1_RD"
            }
            [
                position = 10232, 7200
                rotation = right
                hide_name = True
            ]

            component "core/C function" DROOP {
                arb_defs = "/*Begin code section*/

/*End code section*/"
                execution_rate = "TS_20KHZ"
                global_variables = "real vo;real vab;real Ts;real theta;real L;real a1;real pi;real vL;real x;real w60;real va;real vb;real a;real p;real q;real m;real n;real ia;real ib;real XL;real V;real Eo;real wo;real pf;real qf;real E;real w;real e;"
                init_fnc = "/*Begin code section*/
// SOGI for voltage variables
va = 0;
vb = 0;

// SOGI for current variables
ia = 0;
ib = 0;

// Sampling time
Ts=50e-6;

// General
pi=3.14159265358979;
a1=2*pi*800;
w60=2*pi*60;
a=2.*pi*15;
m=2*pi*3./15e3;
n=22./15e3;
Eo=220;
wo=2*pi*60;
V=220;
theta=0;
pf=0;
qf=0;
E = 0;
w = 0;
e = 0;
/*End code section*/"
                input_terminals = "real IN_I;real IN_V;real IN_P0;real IN_Q0;real IN_V0;real IN_W0;"
                input_terminals_dimensions = "1;1;1;1;1;1"
                input_terminals_feedthrough = "True;True;True;True;True;True"
                input_terminals_show_labels = "True;True;True;True;True;True"
                output_fnc = "/*Begin code section*/
// SOGI for the voltage
vb = vb + Ts*w60*va;
va = va + Ts*w60*(-va-vb+IN_V);

// SOGI for the current
ib= ib + Ts*w60 * ia;
ia= ia + Ts*w60 * (-ia-ib+IN_I);

// active and reactive power
p=(va*ia+vb*ib)/2.;
q=(vb*ia-va*ib)/2.;

// low pass filter
pf = pf + Ts * (-a*pf + a*p);
qf = qf + Ts * (-a*qf + a*q);

/// droop Law
E = Eo - n * (qf - IN_Q0);
w = wo - m * (pf - IN_P0);

// inverter output voltage
e = sqrt(2) * E * sin(theta);

// theta integration
theta = theta + Ts * w;

// Output handling
OUT_PF = pf;
OUT_QF = qf;
OUT_W = w;
OUT_V_RMS = E;
OUT_V = e;
/*End code section*/"
                output_terminals = "real OUT_PF;real OUT_QF;real OUT_W;real OUT_V_RMS;real OUT_V;"
                output_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True;True;True"
                output_terminals_show_labels = "True;True;True;True;True"
            }
            [
                position = 10248, 7648
                size = 128, 320
            ]

            component "core/C function" "INNER LOOPS" {
                arb_defs = "/*Begin code section*/

/*End code section*/"
                execution_rate = "TS_20KHZ"
                global_variables = "real ki;real kv;real ku;real pi;real w60;real Ts;real u;real L;real Ilim;real theta;real Iref;real Kv1;real Kv2;real Kv3;real Kv4;real Kv5;real xc1;real xc2;real vL;real L2;real av;real xv;real xc1_a;real xc2_a;real kw;real ew;real ew2;real u_a;real kr;real uL;real Iref_L;real vref;real vc;"
                init_fnc = "/*Begin code section*/
// Virtual inductor variables
xv = 0;

// State feedback variables
xc1 = 0;
xc1_a = 0;
xc2 = 0;
xc2_a = 0;

// Control action variables
u = 0;

Ts=50e-6;
L2=2.e-3;
pi=3.14159265358979;
w60=2*pi*60;
av=2*pi*800;

//Inner current controller state feedback gain
// Curent Limiter
//Q=diag([10000 1 1])
///r=1
ki=4.4753 ;
kv=-0.9946 ;
ku=0.9946;
kr=6;
// three design gains for the voltage loop
// bw=1 slow
// bw= 2 medium
// bw=3 fast
// Voltage loop feedback gains 
//Voltage Controller
///Q=diag([1 1 1 1 1])
///r=2000000

Kv1=0.173699671106417 ;
Kv2=0.168748093394050 ;
Kv3=0.016999643012784;
Kv4=0.024445795550324;
Kv5=-0.025272466527808;
kw=6;

vref = 0;
vc = 0;
/*End code section*/"
                input_terminals = "real IN_IL1;real IN_VC;real IN_V_REF;real IN_IL2;"
                input_terminals_dimensions = "1;1;1;1"
                input_terminals_feedthrough = "True;True;True;True"
                input_terminals_show_labels = "True;True;True;True"
                output_fnc = "/*Begin code section*/
// virtual inductor drop;
vL=av * L2 * IN_IL2 - av * xv;
vref = IN_V_REF - vL;

// Voltage loop state feedback control action
Iref= -Kv1*IN_IL1 - Kv2*IN_VC - Kv3*u - Kv4*xc1 - Kv5*xc2;

//Current limit with anti-windup
Iref_L=Iref;
if (Iref*Iref/sqrt(Iref*Iref)>=300) 
    {
        Iref_L=300*Iref/sqrt(Iref*Iref);
    }    
ew=Iref_L-Iref;

// Current loop state feedback control action 
u=-ki*IN_IL1 - kv*IN_VC - ku*u + kr * IN_V_REF; //Iref_L

// Anti-windup for the saturation of the modulating signals
uL=u;
if (u*u/sqrt(u*u)>=400) 
{
    uL=400*u/sqrt(u*u);
}
ew=ew+(uL-u)/kr;

// Update of the controller and virtual inductor variables
xc1_a=xc1;
xc2_a=xc2;
xc1=xc2;
xc2=-xc1_a*exp(-2*0.1*Ts)+2.*xc2_a*exp(-0.1*Ts)*cos(w60*Ts)+ (vref-IN_VC) + kw*ew;
xv=(1-Ts*av)*xv+Ts*L2*av*IN_IL2;

// Output handling
OUT_ENABLE = 1;
OUT_PWM_A = uL*1.0/400.0;
OUT_PWM_B = -uL*1.0/400.0;
/*End code section*/"
                output_terminals = "real OUT_ENABLE;real OUT_PWM_A;real OUT_PWM_B;"
                output_terminals_dimensions = "1;1;1"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "True;True;True"
            }
            [
                position = 10800, 7576
                size = 128, 176
            ]

            component "core/Probe" V_DROOP {
            }
            [
                position = 10392, 7824
                rotation = down
                scale = -1, -1
            ]

            component "core/Voltage Measurement" VC {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10296, 7200
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" IL2 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10376, 7056
                size = 64, 32
            ]

            component "core/Probe" PF2 {
            }
            [
                position = 10392, 7520
                rotation = down
                scale = -1, 1
            ]

            component "core/Inductor" L6 {
                inductance = "VSC1_LF"
                signal_access = "Inherit"
            }
            [
                position = 9960, 7056
                hide_name = True
            ]

            component "core/Voltage Source" Vdc {
                init_const_value = "VSC1_VDC"
            }
            [
                position = 9688, 7176
                rotation = right
            ]

            component "core/Probe" V_RMS_DROOP {
            }
            [
                position = 10392, 7712
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" QF2 {
            }
            [
                position = 10392, 7584
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" W_DROOP {
            }
            [
                position = 10392, 7648
                rotation = down
                scale = -1, 1
            ]

            component "core/Capacitor" C2 {
                capacitance = "VSC1_C"
                signal_access = "Inherit"
            }
            [
                position = 10232, 7112
                rotation = right
                hide_name = True
            ]

            component "core/Current Measurement" IL1 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10160, 7056
                size = 64, 32
            ]

            component "core/Resistor" R3 {
                resistance = "1e-3"
            }
            [
                position = 9688, 7096
                rotation = right
                hide_name = True
            ]

            component "core/Signal switch" "Signal switch1" {
                criterion = "ctrl >= threshold"
                execution_rate = "TS_20KHZ"
            }
            [
                position = 10024, 7616
                hide_name = True
            ]

            component "core/Constant" Constant4 {
                execution_rate = "TS_20KHZ"
                value = "0"
            }
            [
                position = 9912, 7664
                hide_name = True
            ]

            component "core/Signal switch" "Signal switch3" {
                criterion = "ctrl >= threshold"
                execution_rate = "TS_20KHZ"
            }
            [
                position = 10024, 7720
                hide_name = True
            ]

            component "core/Single-phase Meter" Meter {
                enable_out = "False"
                execution_rate = "TS_20KHZ"
                fgrid = "60.0"
                n_cycles = "1"
            }
            [
                position = 10568, 7056
                size = 80, 80
            ]

            component "core/Probe" VSC1_COM {
            }
            [
                position = 9992, 6944
                rotation = down
                scale = -1, 1
            ]

            component "core/Bus Join" "Bus Join1" {
                inputs = "3"
            }
            [
                position = 9904, 6944
            ]

            component "core/Single Phase Inverter" "GRID FORMING" {
                carr_ph_offset = "[0.0, 0.0]"
                carrier_freq = "10e3"
                ctrl_src = "Internal modulator"
                execution_rate = "TS_01MHZ"
                fvd_def_method = "LUT"
                load_mode = "on either"
                signal_access = "Inherit"
            }
            [
                position = 9824, 7152
                size = 127, 256
            ]

            component "core/Constant" Constant10 {
                execution_rate = "TS_20KHZ"
                value = "220"
            }
            [
                position = 10112, 7728
                hide_name = True
            ]

            component "core/Constant" Constant11 {
                execution_rate = "TS_20KHZ"
                value = "377"
            }
            [
                position = 10112, 7792
                hide_name = True
            ]

            component "core/C function" SOGI_QSG {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;

// Current SOGI
struct SOGIqsg i_sogi;
float i_alpha = 0;
float i_beta = 0;
float i_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\1phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.2, 0.02);

// Current SOGI Variables
i_alpha = 0;
i_beta = 0;
i_freq = 60;
// Current SOGI Initialization
SOGIInit(&i_sogi, i_freq, 0.6, 0.02);
/*End code section*/"
                input_terminals = "real IN_VGRID;real IN_IL2;"
                input_terminals_dimensions = "1;1"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
//Execução da Rotina do SOGI para a Tensão
executeSOGI(&v_sogi, IN_VGRID, &v_alpha, &v_beta, &v_freq);
//Execução da Rotina do SOGI para a Corrente
executeSOGI(&i_sogi, IN_IL2, &i_alpha, &i_beta, &i_freq);
//Atribuição dos valores as saídas do bloco
OUT_V = v_alpha;
OUT_V_QUAD = v_beta;
OUT_I = i_alpha;
OUT_I_QUAD = i_beta;
OUT_OMEGA = v_freq;
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_V_QUAD;real OUT_I;real OUT_I_QUAD;real OUT_OMEGA;"
                output_terminals_dimensions = "1;1;1;1;1"
                output_terminals_feedthrough = "True;True;True;True;True"
                output_terminals_show_labels = "False;False;False;False;False"
            }
            [
                position = 9680, 8096
                size = 120, 312
            ]

            component "core/C function" "INNER LOOPS1" {
                arb_defs = "/*Begin code section*/

/*End code section*/"
                execution_rate = "TS_20KHZ"
                global_variables = "real ki;real kv;real ku;real pi;real w60;real Ts;real u;real L;real Ilim;real theta;real Iref;real Kv1;real Kv2;real Kv3;real Kv4;real Kv5;real xc1;real xc2;real vL;real L2;real av;real xv;real xc1_a;real xc2_a;real kw;real ew;real ew2;real u_a;real kr;real uL;real Iref_L;real vref;real vc;real TWOPI;real SQRT2;real theta0;real IN_V_REF;"
                init_fnc = "/*Begin code section*/
// Virtual inductor variables
xv = 0;

// State feedback variables
xc1 = 0;
xc1_a = 0;
xc2 = 0;
xc2_a = 0;

// Control action variables
u = 0;

Ts=50e-6;
L2=2.e-3;
pi=3.14159265358979;
w60=2*pi*60;
av=2*pi*800;

//Inner current controller state feedback gain
// Curent Limiter
//Q=diag([10000 1 1])
///r=1
ki=4.4753 ;
kv=-0.9946 ;
ku=0.9946;
kr=6;
// three design gains for the voltage loop
// bw=1 slow
// bw= 2 medium
// bw=3 fast
// Voltage loop feedback gains 
//Voltage Controller
///Q=diag([1 1 1 1 1])
///r=2000000

Kv1=0.173699671106417 ;
Kv2=0.168748093394050 ;
Kv3=0.016999643012784;
Kv4=0.024445795550324;
Kv5=-0.025272466527808;
kw=6;

vref = 0;
vc = 0;

// VITOR:
TWOPI = 6.28318530718;
SQRT2 = 1.41421356237;
theta0 = 0;
IN_V_REF =0;
/*End code section*/"
                input_terminals = "real IN_IL1;real IN_VC;real IN_V_DROOP;real IN_W_DROOP;real IN_IL2;"
                input_terminals_dimensions = "1;1;1;1;inherit"
                input_terminals_feedthrough = "True;True;True;True;True"
                input_terminals_show_labels = "True;True;True;True;False"
                output_fnc = "/*Begin code section*/
// Angle generation for sin calculation
theta0 = Ts * IN_W_DROOP + theta0;
if (theta0 >= TWOPI)
    theta0 -= TWOPI;
// Reference for Voltage Control
IN_V_REF = SQRT2 * IN_V_DROOP * sin(theta0);

// virtual inductor drop;
vL=av * L2 * IN_IL2 - av * xv;
vref = IN_V_REF - vL;

// Voltage loop state feedback control action
Iref= -Kv1*IN_IL1 - Kv2*IN_VC - Kv3*u - Kv4*xc1 - Kv5*xc2;

//Current limit with anti-windup
Iref_L=Iref;
if (Iref*Iref/sqrt(Iref*Iref)>=300) 
    {
        Iref_L=300*Iref/sqrt(Iref*Iref);
    }    
ew=Iref_L-Iref;

// Current loop state feedback control action 
u=-ki*IN_IL1 - kv*IN_VC - ku*u + kr*Iref_L;

// Anti-windup for the saturation of the modulating signals
uL=u;
if (u*u/sqrt(u*u)>=400) 
{
    uL=400*u/sqrt(u*u);
}
ew=ew+(uL-u)/kr;

// Update of the controller and virtual inductor variables
xc1_a=xc1;
xc2_a=xc2;
xc1=xc2;
xc2=-xc1_a*exp(-2*0.1*Ts)+2.*xc2_a*exp(-0.1*Ts)*cos(w60*Ts)+ (vref-IN_VC) + kw*ew;
xv=(1-Ts*av)*xv+Ts*L2*av*IN_IL2;

// Output handling
OUT_ENABLE = 1;
OUT_PWM_A = uL*1.0/400.0;
OUT_PWM_B = -uL*1.0/400.0;
/*End code section*/"
                output_terminals = "real OUT_ENABLE;real OUT_PWM_A;real OUT_PWM_B;"
                output_terminals_dimensions = "1;1;1"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "True;True;True"
            }
            [
                position = 11312, 7608
                size = 128, 240
            ]

            component "core/Rate Transition" RT40 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11168, 7608
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT41 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11168, 7656
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT42 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9560, 8232
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT43 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9560, 7960
                hide_name = True
                size = 32, 32
            ]

            component "core/Resistor" R4 {
                resistance = "VSC1_RF"
            }
            [
                position = 10056, 7056
                hide_name = True
            ]

            component "core/C function" VOLTAGE_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Ressonant Controller Struct redeclaration
struct ResonantController {
  float sampling_time;
  float kp;
  float zero_dumping;
  float pole_dumping;
  float omega0;
  float aux_4ts;
  float aux_a;
  float k1;
  float k2;
  float k3;
  float k4;
  float k5;
  float err_kminus1;
  float err_kminus2;
  float u_kminus1;
  float u_kminus2;
};

// RessonantController general variables
float u_bounded = 0;
float u = 0;
float ref0 = 0;
float theta0 = 0;

// ResonantController variables (1*60Hz)
struct ResonantController rc0;
float u0 = 0;
float err0 = 0;

// ResonantController variables (3*60Hz)
struct ResonantController rc3;
float u3 = 0;
float err3 = 0;

// ResonantController variables (5*60Hz)
struct ResonantController rc5;
float u5 = 0;
float err5 = 0;

// Constants declaration
float TWOPI = 0;
float omega0 = 0;
float TS_10KHZ = 0;
float SQRT2 = 0;
float U_BOUNDARY = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_resonant_control.dll"
                dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_resonant_control.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\resonant_control.h"
                h_file_path_full = "C:\projetos\1phase_microgrid\src\resonant_control.h"
                init_fnc = "/*Begin code section*/
// Auxiliary variables
TWOPI = 6.2831;
omega0 = TWOPI * 60;
TS_10KHZ = 0.0001;
SQRT2 = 1.41421356237;
U_BOUNDARY = 200;

// RessonantController general variables
u_bounded = 0;
u = 0;
ref0 = 0;
theta0 = 0;

// ResonantController variables (1*60 Hz)
u0 = 0;
err0 = 0;

// ResonantController variables (3*60 Hz)
u3 = 0;
err3 = 0;

// ResonantController variables (5*60 Hz)
u5 = 0;
err5 = 0;

// ResonantController initialization
resonantControlInitMatlab(&rc0, 4.753711597365024e-01, -7.994286999974808e-01, 3.246258254171082e-01, -1.998571749993702e+00, 9.999924628840264e-01);
///resonantControlInitMatlab(&rc0, 4.942139496706280e-01, -7.994286999974809e-01, 3.057830354829826e-01, -1.998571749993702e+00, 9.999924628840264e-01);
/*End code section*/"
                input_terminals = "real IN_V_REF;real IN_OMEGA_REF;real IN_VC;real IN_VL_DROP;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // Angle generation for sin calculation
    theta0 = TS_10KHZ * IN_OMEGA_REF + theta0;
    if (theta0 >= TWOPI)
        theta0 -= TWOPI;
    // Reference for Voltage Control
    ref0 = SQRT2 * IN_V_REF * sin(theta0);
    // Voltage reference update
    ref0 = ref0 - IN_VL_DROP;
    // Resonant controller execution
    executeResonant(&rc0, ref0, IN_VC, &u0, &err0);
    // Sum of control actions
    u = u0;
    // Voltage control output limitation
    u_bounded = u;
    if( (u*u)/sqrt(u*u) >= U_BOUNDARY){
        u_bounded = U_BOUNDARY * u / sqrt(u*u);
    }
    // Output values
    OUT_V_CTRL = u_bounded;
    OUT_V_REF_CTRL = ref0;
    OUT_VL_DROP = IN_VL_DROP;
}else{
    // Output values
    OUT_V_CTRL = 0;
    OUT_V_REF_CTRL = 0;
    OUT_VL_DROP = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V_CTRL;real OUT_V_REF_CTRL;real OUT_VL_DROP;"
                output_terminals_dimensions = "inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "False;False;False"
            }
            [
                position = 11328, 8168
                size = 120, 440
            ]

            component "core/Rate Transition" RT18 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 11216, 8072
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT19 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 11216, 8168
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT24 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 11216, 7976
                hide_name = True
                size = 32, 32
            ]

            component "core/C function" CURRENT_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Proportional Controller Variables
float err = 0;
float u = 0;
float u0 = 0;
float u_bounded = 0;

// Proportional Controller Constants
float KP = 0;
float U_BOUNDARY = 0;
/*End code section*/"
                execution_rate = "TS_20KHZ"
                init_fnc = "/*Begin code section*/
// Proportional Controller Variables
err = 0;
u = 0;
u0 = 0;
u_bounded = 0;

// Proportional Controller Constants
KP = 8;
U_BOUNDARY = 500;
/*End code section*/"
                input_terminals = "real IN_UV;real IN_IL1;real IN_MICROGRID_STATUS;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True"
                input_terminals_show_labels = "False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // Proportional Controller
    err = IN_UV - IN_IL1;
    u0 = KP * err + IN_MICROGRID_STATUS;
    // Control action
    u = u0;
    // Voltage control output limitation
    u_bounded = u;
    if( (u*u)/sqrt(u*u) >= U_BOUNDARY){
        u_bounded = U_BOUNDARY * u / sqrt(u*u);
    }
    // Output values
    OUT_PWMA = +u_bounded/U_BOUNDARY;
    OUT_PWMB = -u_bounded/U_BOUNDARY;
}else{
    // Output values
    OUT_PWMA = 0;
    OUT_PWMB = 0;
}
/*End code section*/"
                output_terminals = "real OUT_PWMA;real OUT_PWMB;"
                output_terminals_dimensions = "inherit;inherit"
                output_terminals_feedthrough = "True;True"
                output_terminals_show_labels = "False;False"
            }
            [
                position = 11896, 8168
                size = 120, 440
            ]

            component "core/Rate Transition" RT30 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11784, 7976
                hide_name = True
                size = 32, 32
            ]

            component "core/Constant" Constant13 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 11072, 8360
                hide_name = True
            ]

            component "core/Constant" Constant14 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11640, 8360
                hide_name = True
            ]

            component "core/Constant" Constant15 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 9696, 6992
                hide_name = True
            ]

            component "core/Probe" UV {
            }
            [
                position = 11520, 8040
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" REF_VC {
            }
            [
                position = 11520, 8232
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" AAAA {
            }
            [
                position = 11520, 8368
                rotation = down
                scale = -1, -1
            ]

            component "core/Single Phase Core Coupling" "Core Coupling 2" {
                snb_type_i = "R1-C1"
            }
            [
                position = 10664, 7152
                hide_name = True
                size = 12, 256
            ]

            component "core/Bus Split" "Bus Split1" {
                outputs = "4"
            }
            [
                position = 9568, 7648
                hide_name = True
            ]

            component "core/Product" Product1 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 9688, 7512
            ]

            component "core/Product" Product2 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 9688, 7584
            ]

            component "core/Constant" Constant9 {
                execution_rate = "TS_20KHZ"
                value = "VSC1_S"
            }
            [
                position = 9496, 7504
                hide_name = True
            ]

            component "core/C function" DROOP_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Constant definitions
const float V0 = 220;
const float W0 = 376.9911;
const float DELTA_V = 33;
const float DELTA_W = 18.8495559215;
const float TWOPI = 6.2831;

// Structs redefinition
struct Droop
{
    // droop variables
    float p_max;
    float q_max;
    float p_ref;
    float q_ref;
    float v0;
    float w0;
    float m;
    float n;
    float delta_v;
    float delta_w;
    // variables to implement butterworth second order low pass filter
    // for active power
    float p_kminus1;
    float p_kminus2;
    float pf_kminus1;
    float pf_kminus2;
    // for reactive power
    float q_kminus1;
    float q_kminus2;
    float qf_kminus1;
    float qf_kminus2;
};

// Structs declaration
struct Droop droop;

// Droop Controller variables
float p = 0;
float q = 0;
float p_ref = 0;
float q_ref = 0;
float v_ref = 0;
float w_ref = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_droop.dll"
                dll_file_path_full = "C:\projetos\single_phase_microgrid\output\VHIL\lib_droop.dll"
                execution_rate = "TS_02KHZ"
                h_file_path = "..\src\droop.h"
                h_file_path_full = "C:\projetos\single_phase_microgrid\src\droop.h"
                init_fnc = "/*Begin code section*/
// Droop variables
p = 0;
q = 0;
p_ref = 0;
q_ref = 0;
v_ref = 0;
w_ref = 0;
// Controllers initialization
DroopControlInit(&droop, 20000, 20000, V0, W0, DELTA_V, DELTA_W);
/*End code section*/"
                input_terminals = "real IN_V_DIR;real IN_V_QUAD;real IN_I_DIR;real IN_I_QUAD;real IN_P0;real IN_Q0;real IN_MICROGRID_STATUS;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    if(IN_MICROGRID_STATUS == 1){
        // Active power ramp
        if(IN_P0 > p_ref) p_ref += 2;
        if(IN_P0 < p_ref) p_ref -= 2;
        // Reactive power ramp
        if(IN_Q0 > q_ref) q_ref += 2;
        if(IN_Q0 < q_ref) q_ref -= 2;
        // Set new power reference
        setDroopPQ(&droop, p_ref, q_ref);
    }else{
        setDroopPQ(&droop, 0.0, 0.0);
    }   
    // Droop controller execution
    calculateDroopPQ(&droop, IN_V_DIR, IN_V_QUAD, IN_I_DIR, IN_I_QUAD, &p, &q);
    executeDroopControl(&droop, &v_ref, &w_ref);
    // Output values
    OUT_V_REF = 220+v_ref;
    OUT_OMEGA_REF = w_ref;
    OUT_P = p;
    OUT_Q = q;
}else{
    // Output values
    OUT_V_REF = 0;
    OUT_OMEGA_REF = 0;
    OUT_P = 0;
    OUT_Q = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V_REF;real OUT_OMEGA_REF;real OUT_P;real OUT_Q;"
                output_terminals_dimensions = "inherit;inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True;True"
                output_terminals_show_labels = "False;False;False;False"
            }
            [
                position = 10200, 8192
                size = 120, 488
            ]

            component "core/Rate Transition" RT53 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8032
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT54 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8096
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT55 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8352
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT56 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 7968
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT57 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8160
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT58 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8416
                hide_name = True
                size = 32, 32
            ]

            component "core/Constant" Constant17 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9944, 8416
                hide_name = True
            ]

            component "core/Rate Transition" RT59 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8224
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT60 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8288
                hide_name = True
                size = 32, 32
            ]

            component "core/Probe" PF {
            }
            [
                position = 10352, 8264
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" QF {
            }
            [
                position = 10352, 8408
                rotation = down
                scale = -1, 1
            ]

            component "core/C function" APF {
                arb_defs = "/*Begin code section*/
// All Pass Filter Struct definition
struct AllPassFilter
{
    // general
    float sampling_time;
    float phase_shift;
    float omega;
    float tau;
    // recurrence equation gains
    float phi1;
    float phi2;
    float phi3;
    float phi4;
    float phi5;
    // previous interest variables
    float input_kminus1;
    float input_kminus2;
    float output_kminus1;
    float output_kminus2;
};

// All Pass Filter Constants
const float TS = 0.0001;
const float PHI = 3.351032163829113e-01;
const float OMEGA = 3.769911184307752e+02;
const float TAU = 9.523809523809524e-04;

// Struct declaration
struct AllPassFilter apf;

// All Pass Filter Variables
float output = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_all_pass_filter.dll"
                dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_all_pass_filter.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\all_pass_filter.h"
                h_file_path_full = "C:\projetos\1phase_microgrid\src\all_pass_filter.h"
                init_fnc = "/*Begin code section*/
// Struct declaration
initAllPassFilter(&apf, TS, PHI, OMEGA, TAU);
// All Pass Filter Variables
output = 0;
/*End code section*/"
                input_terminals = "real IN_IL2_F;"
                input_terminals_dimensions = "inherit"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "False"
                output_fnc = "/*Begin code section*/
// All Pass Filter execution
executeAllPassFilter(&apf, IN_IL2_F, &output);

// Handle Output
OUT_IL2_PC = output;
/*End code section*/"
                output_terminals = "real OUT_IL2_PC;"
                output_terminals_dimensions = "inherit"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10800, 8072
                hide_name = True
                size = 48, 48
            ]

            component "core/Probe" IL2_F {
            }
            [
                position = 10744, 8136
                rotation = left
                scale = -1, -1
            ]

            component "core/Probe" IL2_PC {
            }
            [
                position = 10856, 8136
                rotation = left
                scale = -1, -1
            ]

            component "core/C function" VIRTUAL_IMPEDANCE {
                add_src_path = "..\src"
                add_src_path_full = "C:\projetos\1phase_microgrid\src"
                arb_defs = "/*Begin code section*/
// Virtual Impedance Struct definition
struct VirtualImpedance
{
  // general
  float sampling_time;
  float inductance;
  float zeta;
  float omega_pole;
  // recurrence equation gains
  float phi1;
  float phi2;
  float phi3;
  float phi4;
  // previous interest variables
  float current_kminus1;
  float current_kminus2;
  float voltage_kminus1;
  float voltage_kminus2;
};

// Virtual Impedance Constants
const float TS = 0.0001;
const float INDUCTANCE = 1.25e-3;
const float ZETA = 1.0;
const float POLE = 1.570796326794897e4;

// Struct declaration
struct VirtualImpedance vz;

// Virtual Impedance  Variables
float output = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_virtual_impedance.dll"
                dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_virtual_impedance.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\virtual_impedance.h"
                h_file_path_full = "C:\projetos\1phase_microgrid\src\virtual_impedance.h"
                init_fnc = "/*Begin code section*/
// Struct initialization
initVirtualImpedance(&vz, TS, INDUCTANCE, ZETA, POLE);
// Virtual Impedance Variables
output = 0;
/*End code section*/"
                input_terminals = "real IN_IL2_PC;real IN_VIRTUAL_INDUCTANCE;"
                input_terminals_dimensions = "inherit;inherit"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
// Set inductance according to SCADA input
setInductance(&vz, 1e-3*IN_VIRTUAL_INDUCTANCE);
// Virtual Impedance execution
executeVirtualImpedance(&vz, IN_IL2_PC, &output);
// Handle Output
OUT_VL_DROP = output;
/*End code section*/"
                output_terminals = "real OUT_VL_DROP;"
                output_terminals_dimensions = "inherit"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10800, 8264
                hide_name = True
                size = 48, 48
            ]

            component "core/Probe" VL_DROP {
            }
            [
                position = 10856, 8328
                rotation = left
                scale = -1, -1
            ]

            component "core/SCADA Input" VZ {
                def_value = "1.25"
                execution_rate = "TS_10KHZ"
                max = "3"
                min = "0"
                signal_access = "Inherit"
                unit = "mH"
            }
            [
                position = 10472, 8312
            ]

            component "core/Advanced Low-Pass Filter" LPF {
                N = "2"
                apb = "3"
                execution_rate = "TS_10KHZ"
                fc = "300"
                fc_combo = "External"
                type_combo = "Butterworth"
            }
            [
                position = 10688, 8072
                size = 48, 48
            ]

            component "core/Rate Transition" RT61 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10616, 8064
                hide_name = True
                size = 32, 32
            ]

            component "core/SCADA Input" FC {
                def_value = "300"
                execution_rate = "TS_10KHZ"
                max = "1000"
                min = "120"
                signal_access = "Inherit"
                unit = "Hz"
            }
            [
                position = 10472, 8120
            ]

            component "core/C function" DROOP_CONTROLLER1 {
                arb_defs = "/*Begin code section*/
// Constant definitions
const float V0 = 220;
const float W0 = 376.9911;
const float DELTA_V = 22;
const float DELTA_W = 18.8495559215;
const float TWOPI = 6.2831;

// Structs redefinition
struct Droop
{
    // droop variables
    float p_max;
    float q_max;
    float p_ref;
    float q_ref;
    float v0;
    float w0;
    float m;
    float n;
    float delta_v;
    float delta_w;
    // variables to implement butterworth second order low pass filter
    // for active power
    float p_kminus1;
    float p_kminus2;
    float pf_kminus1;
    float pf_kminus2;
    // for reactive power
    float q_kminus1;
    float q_kminus2;
    float qf_kminus1;
    float qf_kminus2;
};

// Structs declaration
struct Droop droop;

// Droop Controller variables
float p = 0;
float q = 0;
float p_ref = 0;
float q_ref = 0;
float v_ref = 0;
float w_ref = 0;

// TEST
float ONE_BY_SQRT2 = 0;
float TS_02KHZ = 0;
float mod_V_alphaBeta = 0;
float v_line = 0;
// ADDITION OF AN INTEGRATOR TO VOLTAGE LOOP
float v0 = 0;
// ADDITION OF AN INTEGRATOR TO FREQUENCY LOOP
float w0 = 0;
float pcc = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_droop.dll"
                dll_file_path_full = "C:\projetos\single_phase_microgrid\output\VHIL\lib_droop.dll"
                execution_rate = "TS_02KHZ"
                h_file_path = "..\src\droop.h"
                h_file_path_full = "C:\projetos\single_phase_microgrid\src\droop.h"
                init_fnc = "/*Begin code section*/
// Droop variables
p = 0;
q = 0;
p_ref = 0;
q_ref = 0;
v_ref = 0;
w_ref = 0;
// Controllers initialization
DroopControlInit(&droop, 15000, 15000, V0, W0, DELTA_V, DELTA_W);

// TEST
ONE_BY_SQRT2 = 0.70710678118;
TS_02KHZ = 0.0005;
mod_V_alphaBeta = 0;
v_line = 0;
// ADDITION OF AN INTEGRATOR TO VOLTAGE LOOP
v0 = 220;
// ADDITION OF AN INTEGRATOR TO FREQUENCY LOOP
w0 = 0;
pcc = 0;
/*End code section*/"
                input_terminals = "real IN_V_DIR;real IN_V_QUAD;real IN_I_DIR;real IN_I_QUAD;real IN_P0;real IN_Q0;real IN_MICROGRID_STATUS;real IN_ENABLE;real IN_V_PCC;real IN_KV;inherit IN_KP;inherit IN_KI;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True;True;True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False;False;False;False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    if(IN_MICROGRID_STATUS == 1){
        // Active power ramp
        if(IN_P0 > p_ref) p_ref += 10;
        if(IN_P0 < p_ref) p_ref -= 10;
        // Reactive power ramp
        if(IN_Q0 > q_ref) q_ref += 10;
        if(IN_Q0 < q_ref) q_ref -= 10;
        // Set new power reference
        setDroopPQ(&droop, p_ref, q_ref);
    }else{
        setDroopPQ(&droop, 0.0, 0.0);
    }
    // Droop controller execution
    calculateDroopPQ(&droop, IN_V_DIR, IN_V_QUAD, IN_I_DIR, IN_I_QUAD, &p, &q);
    executeDroopControl(&droop, &v_ref, &w_ref);
    // ADDITION OF NEW GAINS
    mod_V_alphaBeta = ONE_BY_SQRT2 * sqrt(IN_V_DIR*IN_V_DIR + IN_V_QUAD*IN_V_QUAD);
    v_line = v_ref + IN_KV * (220 - mod_V_alphaBeta);
    // ADDITION OF AN INTEGRATOR TO VOLTAGE LOOP
    v0 = v0 + v_line * IN_KI * TS_02KHZ;
    // Output values
    OUT_V_REF = v0;
    OUT_OMEGA_REF = w_ref;
    OUT_V0 = v0;
    OUT_VRMS = mod_V_alphaBeta;
}else{
    // Output values
    OUT_V_REF = 0;
    OUT_OMEGA_REF = 0;
    OUT_V0 = 0;
    OUT_VRMS = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V_REF;real OUT_OMEGA_REF;real OUT_V0;real OUT_VRMS;"
                output_terminals_dimensions = "inherit;inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True;True"
                output_terminals_show_labels = "False;False;False;False"
            }
            [
                position = 10208, 8960
                hide_name = True
                size = 120, 768
            ]

            component "core/Rate Transition" RT62 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10096, 8672
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT63 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10096, 8736
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT64 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10096, 8992
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT65 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10096, 8608
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT66 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10096, 8800
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT67 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10096, 9056
                hide_name = True
                size = 32, 32
            ]

            component "core/Constant" Constant18 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9952, 9056
                hide_name = True
            ]

            component "core/Rate Transition" RT68 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10096, 8864
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT69 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10096, 8928
                hide_name = True
                size = 32, 32
            ]

            component "core/Probe" VZERO {
            }
            [
                position = 10360, 9080
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" VRMS {
            }
            [
                position = 10360, 9320
                rotation = down
                scale = -1, 1
            ]

            component "core/Rate Transition" RT70 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10096, 9120
                hide_name = True
                size = 32, 32
            ]

            component "core/SCADA Input" KV {
                unit = ""
            }
            [
                position = 9952, 9184
            ]

            component "core/Rate Transition" RT71 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10096, 9184
                hide_name = True
                size = 32, 32
            ]

            component "core/SCADA Input" V0 {
                def_value = "220"
                execution_rate = "TS_10KHZ"
                max = "240"
                min = "180"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 9952, 9120
            ]

            component "core/SCADA Input" KP {
                unit = ""
            }
            [
                position = 9952, 9248
            ]

            component "core/Rate Transition" RT72 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10096, 9248
                hide_name = True
                size = 32, 32
            ]

            component "core/SCADA Input" KI {
                unit = ""
            }
            [
                position = 9952, 9312
            ]

            component "core/Rate Transition" RT73 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10096, 9312
                hide_name = True
                size = 32, 32
            ]

            port L {
                position = right:auto
                kind = pe
            }
            [
                position = 10720, 7056
                scale = -1, 1
            ]

            port N {
                position = right:auto
                kind = pe
            }
            [
                position = 10720, 7248
                scale = -1, 1
            ]

            port "Info in" {
                position = left:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 9496, 7648
            ]

            tag From11 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9712, 6896
                hide_name = True
                size = 60, 20
            ]

            tag Goto11 {
                value = "ENABLE"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10936, 7512
                hide_name = True
                size = 60, 20
            ]

            tag From9 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10488, 7640
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "IL2"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10376, 6984
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From13 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10488, 7560
                hide_name = True
                size = 60, 20
            ]

            tag From10 {
                value = "IL1"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10488, 7512
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10112, 7568
                hide_name = True
                size = 60, 20
            ]

            tag From8 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9712, 6944
                hide_name = True
                size = 60, 20
            ]

            tag Goto13 {
                value = "VC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10376, 7200
                hide_name = True
                size = 60, 20
            ]

            tag Goto9 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10936, 7576
                hide_name = True
                size = 60, 20
            ]

            tag Goto10 {
                value = "IL1"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10160, 6984
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From15 {
                value = "Q0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9912, 7704
                hide_name = True
                size = 60, 20
            ]

            tag Goto6 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10936, 7640
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10112, 7504
                hide_name = True
                size = 60, 20
            ]

            tag Goto12 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10384, 7776
                hide_name = True
                size = 60, 20
            ]

            tag From18 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10488, 7592
                hide_name = True
                size = 60, 20
            ]

            tag From19 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9912, 7536
                hide_name = True
                size = 60, 20
            ]

            tag From14 {
                value = "P0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9912, 7600
                hide_name = True
                size = 60, 20
            ]

            tag From95 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9448, 7960
                hide_name = True
                size = 108, 20
            ]

            tag From96 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9448, 8232
                hide_name = True
                size = 108, 20
            ]

            tag Goto107 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9832, 7968
                hide_name = True
                size = 108, 20
            ]

            tag Goto108 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9832, 8032
                hide_name = True
                size = 108, 20
            ]

            tag Goto109 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9832, 8096
                hide_name = True
                size = 108, 20
            ]

            tag Goto110 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9832, 8160
                hide_name = True
                size = 108, 20
            ]

            tag Goto111 {
                value = "OMEGA_VSC1"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9832, 8224
                hide_name = True
                size = 108, 20
            ]

            tag Goto129 {
                value = "ENABLE"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11448, 7512
                hide_name = True
                size = 60, 20
            ]

            tag From136 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11056, 7704
                hide_name = True
                size = 60, 20
            ]

            tag From137 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11056, 7560
                hide_name = True
                size = 60, 20
            ]

            tag From138 {
                value = "IL1"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11056, 7512
                hide_name = True
                size = 60, 20
            ]

            tag Goto130 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11448, 7608
                hide_name = True
                size = 60, 20
            ]

            tag Goto131 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11448, 7704
                hide_name = True
                size = 60, 20
            ]

            tag From139 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11056, 7608
                hide_name = True
                size = 60, 20
            ]

            tag From140 {
                value = "OMEGA_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11056, 7656
                hide_name = True
                size = 60, 20
            ]

            tag Goto117 {
                value = "UV"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11480, 7968
                hide_name = True
                size = 108, 20
            ]

            tag Goto118 {
                value = "VREF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11480, 8168
                hide_name = True
                size = 108, 20
            ]

            tag Goto121 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 12048, 7968
                hide_name = True
                size = 108, 20
            ]

            tag Goto122 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 12048, 8368
                hide_name = True
                size = 108, 20
            ]

            tag From113 {
                value = "IL1"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11680, 8104
                hide_name = True
                size = 108, 20
            ]

            tag From115 {
                value = "UV"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11680, 7976
                hide_name = True
                size = 108, 20
            ]

            tag From141 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11112, 7976
                hide_name = True
                size = 108, 20
            ]

            tag From142 {
                value = "OMEGA_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11112, 8072
                hide_name = True
                size = 108, 20
            ]

            tag From108 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11112, 8168
                hide_name = True
                size = 108, 20
            ]

            tag From144 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11680, 8232
                hide_name = True
                size = 108, 20
            ]

            tag Goto14 {
                value = "P0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9792, 7512
                hide_name = True
                size = 60, 20
            ]

            tag Goto15 {
                value = "Q0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9792, 7584
                hide_name = True
                size = 60, 20
            ]

            tag Goto18 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9792, 7648
                hide_name = True
                size = 60, 20
            ]

            tag Goto132 {
                value = "VRMS_VPCC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9792, 7680
                hide_name = True
                size = 60, 20
            ]

            tag Goto140 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10352, 7976
                hide_name = True
                size = 108, 20
            ]

            tag Goto141 {
                value = "OMEGA_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10352, 8120
                hide_name = True
                size = 108, 20
            ]

            tag From153 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9984, 7968
                hide_name = True
                size = 108, 20
            ]

            tag From154 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9984, 8032
                hide_name = True
                size = 108, 20
            ]

            tag From155 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9984, 8096
                hide_name = True
                size = 108, 20
            ]

            tag From156 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9984, 8160
                hide_name = True
                size = 108, 20
            ]

            tag From157 {
                value = "Q0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9960, 8288
                hide_name = True
                size = 60, 20
            ]

            tag From158 {
                value = "P0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9960, 8224
                hide_name = True
                size = 60, 20
            ]

            tag From159 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9960, 8352
                hide_name = True
                size = 60, 20
            ]

            tag Goto142 {
                value = "IL2_PC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10944, 8072
                hide_name = True
                size = 108, 20
            ]

            tag From160 {
                value = "VL_DROP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11112, 8264
                hide_name = True
                size = 108, 20
            ]

            tag Goto143 {
                value = "VL_DROP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10944, 8264
                hide_name = True
                size = 108, 20
            ]

            tag From161 {
                value = "IL2_PC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8256
                hide_name = True
                size = 108, 20
            ]

            tag From143 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8064
                hide_name = True
                size = 108, 20
            ]

            tag Goto144 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10360, 8600
                hide_name = True
                size = 108, 20
            ]

            tag Goto145 {
                value = "OMEGA_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10360, 8840
                hide_name = True
                size = 108, 20
            ]

            tag From162 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9992, 8608
                hide_name = True
                size = 108, 20
            ]

            tag From163 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9992, 8672
                hide_name = True
                size = 108, 20
            ]

            tag From164 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9992, 8736
                hide_name = True
                size = 108, 20
            ]

            tag From165 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9992, 8800
                hide_name = True
                size = 108, 20
            ]

            tag From166 {
                value = "Q0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9968, 8928
                hide_name = True
                size = 60, 20
            ]

            tag From167 {
                value = "P0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9968, 8864
                hide_name = True
                size = 60, 20
            ]

            tag From168 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9968, 8992
                hide_name = True
                size = 60, 20
            ]

            junction Junction82 sp
            [
                position = 9968, 7664
            ]

            junction Junction83 sp
            [
                position = 9984, 7536
            ]

            junction Junction84 sp
            [
                position = 10336, 7776
            ]

            junction Junction87 pe
            [
                position = 10232, 7056
            ]

            junction Junction88 pe
            [
                position = 10296, 7056
            ]

            junction Junction95 sp
            [
                position = 9824, 6944
            ]

            junction Junction96 sp
            [
                position = 9840, 6960
            ]

            junction Junction97 pe
            [
                position = 10232, 7248
            ]

            junction Junction100 sp
            [
                position = 9808, 6992
            ]

            junction Junction101 sp
            [
                position = 11408, 7968
            ]

            junction Junction104 pe
            [
                position = 10296, 7248
            ]

            junction Junction105 pe
            [
                position = 10568, 7248
            ]

            junction Junction107 sp
            [
                position = 11408, 8168
            ]

            junction Junction81 sp
            [
                position = 9640, 7504
            ]

            junction Junction109 sp
            [
                position = 10856, 8072
            ]

            junction Junction111 sp
            [
                position = 10856, 8264
            ]

            junction Junction112 sp
            [
                position = 10744, 8072
            ]

            comment Comment25 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER</p></body></html> ENDCOMMENT 
            [
                position = 10152, 7440
            ]

            comment Comment26 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">INNER LOOPS</p></body></html> ENDCOMMENT 
            [
                position = 10736, 7440
            ]

            comment Comment27 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">CONTROL </span></p></body></html> ENDCOMMENT 
            [
                position = 9952, 7352
            ]

            comment Comment28 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">POWER SYSTEM</span> </p></body></html> ENDCOMMENT 
            [
                position = 9912, 6784
            ]

            comment Comment16 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">PHASE LOCKED LOOP</p></body></html> ENDCOMMENT 
            [
                position = 9584, 7904
            ]

            comment Comment29 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">INNER LOOPS</p></body></html> ENDCOMMENT 
            [
                position = 11248, 7440
            ]

            comment Comment19 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VOLTAGE CONTROLLER </p></body></html> ENDCOMMENT 
            [
                position = 11232, 7904
            ]

            comment Comment20 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">CURRENT CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 11784, 7896
            ]

            comment Comment23 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[0] = P0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[1] = Q0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[2] = STS_STATUS   </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[3] = VRMS_PCC   </p></body></html> ENDCOMMENT 
            [
                position = 9560, 7720
            ]

            comment Comment24 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">HANDLE INFO INPUT</p></body></html> ENDCOMMENT 
            [
                position = 9568, 7440
            ]

            comment Comment30 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">ALL PASS FILTER</p></body></html> ENDCOMMENT 
            [
                position = 10728, 8000
            ]

            comment Comment31 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 10104, 7904
            ]

            comment Comment32 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VIRTUAL IMPEDANCE</p></body></html> ENDCOMMENT 
            [
                position = 10712, 8184
            ]

            comment Comment33 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 10112, 8536
            ]

            connect DROOP.OUT_V_RMS V_RMS_DROOP.in as Connection490
            connect DROOP.OUT_W W_DROOP.in as Connection489
            connect DROOP.OUT_PF PF2.in as Connection491
            connect R2.p_node C2.n_node as Connection553
            connect DROOP.OUT_QF QF2.in as Connection492
            connect From10 "INNER LOOPS.IN_IL1" as Connection376
            connect VC.out Goto13 as Connection499
            connect From9 "INNER LOOPS.IN_IL2" as Connection417
            connect From13 "INNER LOOPS.IN_VC" as Connection500
            connect Goto11 "INNER LOOPS.OUT_ENABLE" as Connection393
            connect Vdc.p_node R3.n_node as Connection569
            connect From14 "Signal switch1.in" as Connection687
            connect From15 "Signal switch3.in" as Connection688
            connect Constant4.out Junction82 as Connection690
            [
                breakpoints = 9944, 7664; 9968, 7664
            ]
            connect Junction82 "Signal switch1.in1" as Connection691
            [
                breakpoints = 9968, 7656; 9968, 7632
            ]
            connect "Signal switch3.in1" Junction82 as Connection692
            connect "Signal switch1.in2" Junction83 as Connection698
            connect Junction83 From19 as Connection699
            [
                breakpoints = 9984, 7536
            ]
            connect "Signal switch3.in2" Junction83 as Connection700
            [
                breakpoints = 10024, 7664; 9984, 7664
            ]
            connect "Signal switch1.out" DROOP.IN_P0 as Connection701
            connect "Signal switch3.out" DROOP.IN_Q0 as Connection702
            [
                breakpoints = 10072, 7720; 10072, 7680
            ]
            connect From2 DROOP.IN_V as Connection705
            connect From1 DROOP.IN_I as Connection706
            connect Goto12 Junction84 as Connection708
            connect Junction84 DROOP.OUT_V as Connection709
            connect V_DROOP.in Junction84 as Connection710
            connect IL1.out Goto10 as Connection713
            connect IL2.out Goto1 as Connection721
            connect IL1.n_node Junction87 as Connection726
            connect Junction87 C2.p_node as Connection727
            [
                breakpoints = 10232, 7056
            ]
            connect VC.p_node Junction88 as Connection729
            connect Junction88 Junction87 as Connection730
            connect IL2.p_node Junction88 as Connection731
            connect "Bus Join1.out" VSC1_COM.in as Connection749
            connect "GRID FORMING.neg_out" Vdc.n_node as Connection757
            connect R3.p_node "GRID FORMING.pos_out" as Connection758
            connect Goto6 "INNER LOOPS.OUT_PWM_B" as Connection766
            [
                breakpoints = 10880, 7640
            ]
            connect "INNER LOOPS.OUT_PWM_A" Goto9 as Connection767
            [
                breakpoints = 10888, 7576
            ]
            connect From8 Junction95 as Connection773
            [
                breakpoints = 9816, 6944; 9816, 6944
            ]
            connect Junction95 "Bus Join1.in1" as Connection775
            connect From11 Junction96 as Connection776
            [
                breakpoints = 9832, 6896; 9840, 6896
            ]
            connect "Bus Join1.in2" Junction96 as Connection778
            connect Constant10.out DROOP.IN_V0 as Connection779
            connect Constant11.out DROOP.IN_W0 as Connection780
            connect L6.p_node "GRID FORMING.a_in" as Connection788
            connect R2.n_node Junction97 as Connection789
            connect "GRID FORMING.b_in" Junction97 as Connection791
            connect Junction95 "GRID FORMING.InA" as Connection794
            connect Junction96 "GRID FORMING.InB" as Connection795
            connect Goto107 SOGI_QSG.OUT_V as Connection6532
            connect Goto108 SOGI_QSG.OUT_V_QUAD as Connection6533
            connect Goto109 SOGI_QSG.OUT_I as Connection6534
            connect SOGI_QSG.OUT_I_QUAD Goto110 as Connection6535
            connect Goto111 SOGI_QSG.OUT_OMEGA as Connection6536
            connect From136 "INNER LOOPS1.IN_IL2" as Connection6746
            connect Goto129 "INNER LOOPS1.OUT_ENABLE" as Connection6748
            connect From137 "INNER LOOPS1.IN_VC" as Connection6753
            connect From138 "INNER LOOPS1.IN_IL1" as Connection6754
            connect Goto130 "INNER LOOPS1.OUT_PWM_A" as Connection6756
            connect Goto131 "INNER LOOPS1.OUT_PWM_B" as Connection6757
            connect RT40.out "INNER LOOPS1.IN_V_DROOP" as Connection6760
            connect RT40.in From139 as Connection6761
            connect RT41.out "INNER LOOPS1.IN_W_DROOP" as Connection6762
            connect RT41.in From140 as Connection6763
            connect RT42.out SOGI_QSG.IN_IL2 as Connection6764
            connect RT42.in From96 as Connection6765
            connect From95 RT43.in as Connection6766
            connect RT43.out SOGI_QSG.IN_VGRID as Connection6767
            connect L6.n_node R4.p_node as Connection6768
            connect IL1.p_node R4.n_node as Connection6769
            connect RT18.out VOLTAGE_CONTROLLER.IN_OMEGA_REF as Connection6549
            connect RT19.out VOLTAGE_CONTROLLER.IN_VC as Connection6551
            connect RT24.out VOLTAGE_CONTROLLER.IN_V_REF as Connection6560
            connect Goto122 CURRENT_CONTROLLER.OUT_PWMB as Connection6568
            connect RT30.out CURRENT_CONTROLLER.IN_UV as Connection6585
            connect From141 RT24.in as Connection6732
            [
                hide_name = True
            ]
            connect From142 RT18.in as Connection6733
            [
                hide_name = True
            ]
            connect "Bus Join1.in" Junction100 as Connection6779
            connect Junction100 "GRID FORMING.En" as Connection6780
            [
                breakpoints = 9808, 6992
            ]
            connect Constant15.out Junction100 as Connection6781
            connect Constant14.out CURRENT_CONTROLLER.IN_ENABLE as Connection6784
            connect Goto117 Junction101 as Connection6785
            connect Junction101 VOLTAGE_CONTROLLER.OUT_V_CTRL as Connection6786
            connect UV.in Junction101 as Connection6787
            connect Constant13.out VOLTAGE_CONTROLLER.IN_ENABLE as Connection6798
            connect From108 RT19.in as Connection6807
            connect From113 CURRENT_CONTROLLER.IN_IL1 as Connection6808
            connect IL2.n_node Meter.in as Connection6811
            connect Junction97 Junction104 as Connection6812
            [
                breakpoints = 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248
            ]
            connect Junction104 VC.n_node as Connection6813
            [
                breakpoints = 10296, 7248; 10296, 7248; 10296, 7248; 10296, 7248; 10296, 7248
            ]
            connect Meter.N Junction105 as Connection6814
            connect Junction104 Junction105 as Connection6816
            connect From144 CURRENT_CONTROLLER.IN_MICROGRID_STATUS as Connection6817
            connect RT30.in From115 as Connection6818
            connect VOLTAGE_CONTROLLER.OUT_V_REF_CTRL Junction107 as Connection6824
            connect Junction107 Goto118 as Connection6825
            connect REF_VC.in Junction107 as Connection6826
            connect AAAA.in VOLTAGE_CONTROLLER.OUT_VL_DROP as Connection6827
            connect From18 "INNER LOOPS.IN_V_REF" as Connection6831
            connect Meter.out "Core Coupling 2.a_in" as Connection6832
            connect "Core Coupling 2.a_out" L as Connection6833
            connect Junction105 "Core Coupling 2.b_in" as Connection6834
            connect "Core Coupling 2.b_out" N as Connection6835
            connect Goto121 CURRENT_CONTROLLER.OUT_PWMA as Connection6836
            [
                breakpoints = 11976, 7968; 11976, 7968
            ]
            connect Goto18 "Bus Split1.out2" as Connection622
            [
                breakpoints = 9760, 7648; 9744, 7648; 9760, 7648; 9680, 7648; 9680, 7656; 9608, 7656
            ]
            connect Goto14 Product1.out as Connection632
            connect Product2.out Goto15 as Connection633
            connect Product1.in Junction81 as Connection684
            connect Junction81 Product2.in as Connection685
            [
                breakpoints = 9640, 7504; 9640, 7576
            ]
            connect Constant9.out Junction81 as Connection686
            connect "Bus Split1.out1" Product2.in1 as Connection6840
            [
                breakpoints = 9640, 7624; 9640, 7592
            ]
            connect "Bus Split1.out" Product1.in1 as Connection6841
            [
                breakpoints = 9624, 7608; 9624, 7520
            ]
            connect "Info in" "Bus Split1.in" as Connection6843
            connect Goto132 "Bus Split1.out3" as Connection6844
            [
                breakpoints = 9744, 7680; 9680, 7680; 9680, 7672
            ]
            connect Goto140 DROOP_CONTROLLER.OUT_V_REF as Connection6865
            connect Goto141 DROOP_CONTROLLER.OUT_OMEGA_REF as Connection6866
            connect RT53.out DROOP_CONTROLLER.IN_V_QUAD as Connection6867
            [
                hide_name = True
            ]
            connect RT54.out DROOP_CONTROLLER.IN_I_DIR as Connection6868
            [
                hide_name = True
            ]
            connect RT56.out DROOP_CONTROLLER.IN_V_DIR as Connection6869
            [
                hide_name = True
            ]
            connect From153 RT56.in as Connection6870
            [
                hide_name = True
            ]
            connect From154 RT53.in as Connection6871
            [
                hide_name = True
            ]
            connect RT57.out DROOP_CONTROLLER.IN_I_QUAD as Connection6872
            [
                hide_name = True
            ]
            connect From156 RT57.in as Connection6873
            [
                hide_name = True
            ]
            connect From155 RT54.in as Connection6874
            [
                hide_name = True
            ]
            connect Constant17.out RT58.in as Connection6875
            connect From157 RT60.in as Connection6876
            connect From158 RT59.in as Connection6877
            connect RT59.out DROOP_CONTROLLER.IN_P0 as Connection6878
            [
                hide_name = True
            ]
            connect RT60.out DROOP_CONTROLLER.IN_Q0 as Connection6879
            [
                hide_name = True
            ]
            connect RT58.out DROOP_CONTROLLER.IN_ENABLE as Connection6880
            [
                hide_name = True
            ]
            connect RT55.out DROOP_CONTROLLER.IN_MICROGRID_STATUS as Connection6881
            [
                hide_name = True
            ]
            connect From159 RT55.in as Connection6882
            connect PF.in DROOP_CONTROLLER.OUT_P as Connection6883
            connect QF.in DROOP_CONTROLLER.OUT_Q as Connection6884
            connect APF.OUT_IL2_PC Junction109 as Connection6891
            connect Junction109 Goto142 as Connection6892
            connect IL2_PC.in Junction109 as Connection6893
            connect VIRTUAL_IMPEDANCE.OUT_VL_DROP Junction111 as Connection6899
            connect Junction111 Goto143 as Connection6900
            connect VL_DROP.in Junction111 as Connection6901
            connect From160 VOLTAGE_CONTROLLER.IN_VL_DROP as Connection6904
            connect From161 VIRTUAL_IMPEDANCE.IN_IL2_PC as Connection6905
            connect VZ.out VIRTUAL_IMPEDANCE.IN_VIRTUAL_INDUCTANCE as Connection6906
            [
                breakpoints = 10664, 8312; 10664, 8272
            ]
            connect RT61.out LPF.in as Connection6895
            connect RT61.in From143 as Connection6896
            connect APF.IN_IL2_F Junction112 as Connection6909
            connect Junction112 IL2_F.in as Connection6910
            [
                breakpoints = 10744, 8072
            ]
            connect LPF.out Junction112 as Connection6911
            connect FC.out LPF.fc_input as Connection6912
            connect Goto144 DROOP_CONTROLLER1.OUT_V_REF as Connection6913
            connect Goto145 DROOP_CONTROLLER1.OUT_OMEGA_REF as Connection6914
            connect RT62.out DROOP_CONTROLLER1.IN_V_QUAD as Connection6915
            [
                hide_name = True
            ]
            connect RT63.out DROOP_CONTROLLER1.IN_I_DIR as Connection6916
            [
                hide_name = True
            ]
            connect RT65.out DROOP_CONTROLLER1.IN_V_DIR as Connection6917
            [
                hide_name = True
            ]
            connect From162 RT65.in as Connection6918
            [
                hide_name = True
            ]
            connect From163 RT62.in as Connection6919
            [
                hide_name = True
            ]
            connect RT66.out DROOP_CONTROLLER1.IN_I_QUAD as Connection6920
            [
                hide_name = True
            ]
            connect From165 RT66.in as Connection6921
            [
                hide_name = True
            ]
            connect From164 RT63.in as Connection6922
            [
                hide_name = True
            ]
            connect Constant18.out RT67.in as Connection6923
            connect From166 RT69.in as Connection6924
            connect From167 RT68.in as Connection6925
            connect RT68.out DROOP_CONTROLLER1.IN_P0 as Connection6926
            [
                hide_name = True
            ]
            connect RT69.out DROOP_CONTROLLER1.IN_Q0 as Connection6927
            [
                hide_name = True
            ]
            connect RT67.out DROOP_CONTROLLER1.IN_ENABLE as Connection6928
            [
                hide_name = True
            ]
            connect RT64.out DROOP_CONTROLLER1.IN_MICROGRID_STATUS as Connection6929
            [
                hide_name = True
            ]
            connect From168 RT64.in as Connection6930
            connect VZERO.in DROOP_CONTROLLER1.OUT_V0 as Connection6931
            connect VRMS.in DROOP_CONTROLLER1.OUT_VRMS as Connection6932
            connect KV.out RT71.in as Connection6936
            connect V0.out RT70.in as Connection6937
            connect KP.out RT72.in as Connection6938
            connect KI.out RT73.in as Connection6939
            connect RT73.out DROOP_CONTROLLER1.IN_KI as Connection6940
            connect RT72.out DROOP_CONTROLLER1.IN_KP as Connection6941
            connect RT71.out DROOP_CONTROLLER1.IN_KV as Connection6942
            connect RT70.out DROOP_CONTROLLER1.IN_V_PCC as Connection6943
        }
        [
            position = 8336, 7768
            size = 72, 120
        ]

        component Subsystem VSC_BACKUP2 {
            layout = dynamic
            component "core/Resistor" R2 {
                resistance = "VSC1_RD"
            }
            [
                position = 10232, 7200
                rotation = right
                hide_name = True
            ]

            component "core/C function" DROOP {
                arb_defs = "/*Begin code section*/

/*End code section*/"
                execution_rate = "TS_20KHZ"
                global_variables = "real vo;real vab;real Ts;real theta;real L;real a1;real pi;real vL;real x;real w60;real va;real vb;real a;real p;real q;real m;real n;real ia;real ib;real XL;real V;real Eo;real wo;real pf;real qf;real E;real w;real e;"
                init_fnc = "/*Begin code section*/
// SOGI for voltage variables
va = 0;
vb = 0;

// SOGI for current variables
ia = 0;
ib = 0;

// Sampling time
Ts=50e-6;

// General
pi=3.14159265358979;
a1=2*pi*800;
w60=2*pi*60;
a=2.*pi*15;
m=2*pi*3./15e3;
n=22./15e3;
Eo=220;
wo=2*pi*60;
V=220;
theta=0;
pf=0;
qf=0;
E = 0;
w = 0;
e = 0;
/*End code section*/"
                input_terminals = "real IN_I;real IN_V;real IN_P0;real IN_Q0;real IN_V0;real IN_W0;"
                input_terminals_dimensions = "1;1;1;1;1;1"
                input_terminals_feedthrough = "True;True;True;True;True;True"
                input_terminals_show_labels = "True;True;True;True;True;True"
                output_fnc = "/*Begin code section*/
// SOGI for the voltage
vb = vb + Ts*w60*va;
va = va + Ts*w60*(-va-vb+IN_V);

// SOGI for the current
ib= ib + Ts*w60 * ia;
ia= ia + Ts*w60 * (-ia-ib+IN_I);

// active and reactive power
p=(va*ia+vb*ib)/2.;
q=(vb*ia-va*ib)/2.;

// low pass filter
pf = pf + Ts * (-a*pf + a*p);
qf = qf + Ts * (-a*qf + a*q);

/// droop Law
E = Eo - n * (qf - IN_Q0);
w = wo - m * (pf - IN_P0);

// inverter output voltage
e = sqrt(2) * E * sin(theta);

// theta integration
theta = theta + Ts * w;

// Output handling
OUT_PF = pf;
OUT_QF = qf;
OUT_W = w;
OUT_V_RMS = E;
OUT_V = e;
/*End code section*/"
                output_terminals = "real OUT_PF;real OUT_QF;real OUT_W;real OUT_V_RMS;real OUT_V;"
                output_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True;True;True"
                output_terminals_show_labels = "True;True;True;True;True"
            }
            [
                position = 10248, 7648
                size = 128, 320
            ]

            component "core/C function" "INNER LOOPS" {
                arb_defs = "/*Begin code section*/

/*End code section*/"
                execution_rate = "TS_20KHZ"
                global_variables = "real ki;real kv;real ku;real pi;real w60;real Ts;real u;real L;real Ilim;real theta;real Iref;real Kv1;real Kv2;real Kv3;real Kv4;real Kv5;real xc1;real xc2;real vL;real L2;real av;real xv;real xc1_a;real xc2_a;real kw;real ew;real ew2;real u_a;real kr;real uL;real Iref_L;real vref;real vc;"
                init_fnc = "/*Begin code section*/
// Virtual inductor variables
xv = 0;

// State feedback variables
xc1 = 0;
xc1_a = 0;
xc2 = 0;
xc2_a = 0;

// Control action variables
u = 0;

Ts=50e-6;
L2=2.e-3;
pi=3.14159265358979;
w60=2*pi*60;
av=2*pi*800;

//Inner current controller state feedback gain
// Curent Limiter
//Q=diag([10000 1 1])
///r=1
ki=4.4753 ;
kv=-0.9946 ;
ku=0.9946;
kr=6;
// three design gains for the voltage loop
// bw=1 slow
// bw= 2 medium
// bw=3 fast
// Voltage loop feedback gains 
//Voltage Controller
///Q=diag([1 1 1 1 1])
///r=2000000

Kv1=0.173699671106417 ;
Kv2=0.168748093394050 ;
Kv3=0.016999643012784;
Kv4=0.024445795550324;
Kv5=-0.025272466527808;
kw=6;

vref = 0;
vc = 0;
/*End code section*/"
                input_terminals = "real IN_IL1;real IN_VC;real IN_V_REF;real IN_IL2;"
                input_terminals_dimensions = "1;1;1;1"
                input_terminals_feedthrough = "True;True;True;True"
                input_terminals_show_labels = "True;True;True;True"
                output_fnc = "/*Begin code section*/
// virtual inductor drop;
vL=av * L2 * IN_IL2 - av * xv;
vref = IN_V_REF - vL;

// Voltage loop state feedback control action
Iref= -Kv1*IN_IL1 - Kv2*IN_VC - Kv3*u - Kv4*xc1 - Kv5*xc2;

//Current limit with anti-windup
Iref_L=Iref;
if (Iref*Iref/sqrt(Iref*Iref)>=300) 
    {
        Iref_L=300*Iref/sqrt(Iref*Iref);
    }    
ew=Iref_L-Iref;

// Current loop state feedback control action 
u=-ki*IN_IL1 - kv*IN_VC - ku*u + kr * IN_V_REF; //Iref_L

// Anti-windup for the saturation of the modulating signals
uL=u;
if (u*u/sqrt(u*u)>=400) 
{
    uL=400*u/sqrt(u*u);
}
ew=ew+(uL-u)/kr;

// Update of the controller and virtual inductor variables
xc1_a=xc1;
xc2_a=xc2;
xc1=xc2;
xc2=-xc1_a*exp(-2*0.1*Ts)+2.*xc2_a*exp(-0.1*Ts)*cos(w60*Ts)+ (vref-IN_VC) + kw*ew;
xv=(1-Ts*av)*xv+Ts*L2*av*IN_IL2;

// Output handling
OUT_ENABLE = 1;
OUT_PWM_A = uL*1.0/400.0;
OUT_PWM_B = -uL*1.0/400.0;
/*End code section*/"
                output_terminals = "real OUT_ENABLE;real OUT_PWM_A;real OUT_PWM_B;"
                output_terminals_dimensions = "1;1;1"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "True;True;True"
            }
            [
                position = 10800, 7576
                size = 128, 176
            ]

            component "core/Probe" V_DROOP {
            }
            [
                position = 10392, 7824
                rotation = down
                scale = -1, -1
            ]

            component "core/Voltage Measurement" VC {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10296, 7200
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" IL2 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10376, 7056
                size = 64, 32
            ]

            component "core/Probe" PF2 {
            }
            [
                position = 10392, 7520
                rotation = down
                scale = -1, 1
            ]

            component "core/Inductor" L6 {
                inductance = "VSC1_LF"
                signal_access = "Inherit"
            }
            [
                position = 9960, 7056
                hide_name = True
            ]

            component "core/Voltage Source" Vdc {
                init_const_value = "VSC1_VDC"
            }
            [
                position = 9688, 7176
                rotation = right
            ]

            component "core/Probe" V_RMS_DROOP {
            }
            [
                position = 10392, 7712
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" QF2 {
            }
            [
                position = 10392, 7584
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" W_DROOP {
            }
            [
                position = 10392, 7648
                rotation = down
                scale = -1, 1
            ]

            component "core/Capacitor" C2 {
                capacitance = "VSC1_C"
                signal_access = "Inherit"
            }
            [
                position = 10232, 7112
                rotation = right
                hide_name = True
            ]

            component "core/Current Measurement" IL1 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10160, 7056
                size = 64, 32
            ]

            component "core/Resistor" R3 {
                resistance = "1e-3"
            }
            [
                position = 9688, 7096
                rotation = right
                hide_name = True
            ]

            component "core/Signal switch" "Signal switch1" {
                criterion = "ctrl >= threshold"
                execution_rate = "TS_20KHZ"
            }
            [
                position = 10024, 7616
                hide_name = True
            ]

            component "core/Constant" Constant4 {
                execution_rate = "TS_20KHZ"
                value = "0"
            }
            [
                position = 9912, 7664
                hide_name = True
            ]

            component "core/Signal switch" "Signal switch3" {
                criterion = "ctrl >= threshold"
                execution_rate = "TS_20KHZ"
            }
            [
                position = 10024, 7720
                hide_name = True
            ]

            component "core/Single-phase Meter" Meter {
                enable_out = "False"
                execution_rate = "TS_20KHZ"
                fgrid = "60.0"
                n_cycles = "1"
            }
            [
                position = 10568, 7056
                size = 80, 80
            ]

            component "core/Probe" VSC1_COM {
            }
            [
                position = 9992, 6944
                rotation = down
                scale = -1, 1
            ]

            component "core/Bus Join" "Bus Join1" {
                inputs = "3"
            }
            [
                position = 9904, 6944
            ]

            component "core/Single Phase Inverter" "GRID FORMING" {
                carr_ph_offset = "[0.0, 0.0]"
                carrier_freq = "10e3"
                ctrl_src = "Internal modulator"
                execution_rate = "TS_01MHZ"
                fvd_def_method = "LUT"
                load_mode = "on either"
                signal_access = "Inherit"
            }
            [
                position = 9824, 7152
                size = 127, 256
            ]

            component "core/Constant" Constant10 {
                execution_rate = "TS_20KHZ"
                value = "220"
            }
            [
                position = 10112, 7728
                hide_name = True
            ]

            component "core/Constant" Constant11 {
                execution_rate = "TS_20KHZ"
                value = "377"
            }
            [
                position = 10112, 7792
                hide_name = True
            ]

            component "core/C function" SOGI_QSG {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;

// Current SOGI
struct SOGIqsg i_sogi;
float i_alpha = 0;
float i_beta = 0;
float i_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\1phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.2, 0.02);

// Current SOGI Variables
i_alpha = 0;
i_beta = 0;
i_freq = 60;
// Current SOGI Initialization
SOGIInit(&i_sogi, i_freq, 0.6, 0.02);
/*End code section*/"
                input_terminals = "real IN_VGRID;real IN_IL2;"
                input_terminals_dimensions = "1;1"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
//Execução da Rotina do SOGI para a Tensão
executeSOGI(&v_sogi, IN_VGRID, &v_alpha, &v_beta, &v_freq);
//Execução da Rotina do SOGI para a Corrente
executeSOGI(&i_sogi, IN_IL2, &i_alpha, &i_beta, &i_freq);
//Atribuição dos valores as saídas do bloco
OUT_V = v_alpha;
OUT_V_QUAD = v_beta;
OUT_I = i_alpha;
OUT_I_QUAD = i_beta;
OUT_OMEGA = v_freq;
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_V_QUAD;real OUT_I;real OUT_I_QUAD;real OUT_OMEGA;"
                output_terminals_dimensions = "1;1;1;1;1"
                output_terminals_feedthrough = "True;True;True;True;True"
                output_terminals_show_labels = "False;False;False;False;False"
            }
            [
                position = 9680, 8096
                size = 120, 312
            ]

            component "core/C function" "INNER LOOPS1" {
                arb_defs = "/*Begin code section*/

/*End code section*/"
                execution_rate = "TS_20KHZ"
                global_variables = "real ki;real kv;real ku;real pi;real w60;real Ts;real u;real L;real Ilim;real theta;real Iref;real Kv1;real Kv2;real Kv3;real Kv4;real Kv5;real xc1;real xc2;real vL;real L2;real av;real xv;real xc1_a;real xc2_a;real kw;real ew;real ew2;real u_a;real kr;real uL;real Iref_L;real vref;real vc;real TWOPI;real SQRT2;real theta0;real IN_V_REF;"
                init_fnc = "/*Begin code section*/
// Virtual inductor variables
xv = 0;

// State feedback variables
xc1 = 0;
xc1_a = 0;
xc2 = 0;
xc2_a = 0;

// Control action variables
u = 0;

Ts=50e-6;
L2=2.e-3;
pi=3.14159265358979;
w60=2*pi*60;
av=2*pi*800;

//Inner current controller state feedback gain
// Curent Limiter
//Q=diag([10000 1 1])
///r=1
ki=4.4753 ;
kv=-0.9946 ;
ku=0.9946;
kr=6;
// three design gains for the voltage loop
// bw=1 slow
// bw= 2 medium
// bw=3 fast
// Voltage loop feedback gains 
//Voltage Controller
///Q=diag([1 1 1 1 1])
///r=2000000

Kv1=0.173699671106417 ;
Kv2=0.168748093394050 ;
Kv3=0.016999643012784;
Kv4=0.024445795550324;
Kv5=-0.025272466527808;
kw=6;

vref = 0;
vc = 0;

// VITOR:
TWOPI = 6.28318530718;
SQRT2 = 1.41421356237;
theta0 = 0;
IN_V_REF =0;
/*End code section*/"
                input_terminals = "real IN_IL1;real IN_VC;real IN_V_DROOP;real IN_W_DROOP;real IN_IL2;"
                input_terminals_dimensions = "1;1;1;1;inherit"
                input_terminals_feedthrough = "True;True;True;True;True"
                input_terminals_show_labels = "True;True;True;True;False"
                output_fnc = "/*Begin code section*/
// Angle generation for sin calculation
theta0 = Ts * IN_W_DROOP + theta0;
if (theta0 >= TWOPI)
    theta0 -= TWOPI;
// Reference for Voltage Control
IN_V_REF = SQRT2 * IN_V_DROOP * sin(theta0);

// virtual inductor drop;
vL=av * L2 * IN_IL2 - av * xv;
vref = IN_V_REF - vL;

// Voltage loop state feedback control action
Iref= -Kv1*IN_IL1 - Kv2*IN_VC - Kv3*u - Kv4*xc1 - Kv5*xc2;

//Current limit with anti-windup
Iref_L=Iref;
if (Iref*Iref/sqrt(Iref*Iref)>=300) 
    {
        Iref_L=300*Iref/sqrt(Iref*Iref);
    }    
ew=Iref_L-Iref;

// Current loop state feedback control action 
u=-ki*IN_IL1 - kv*IN_VC - ku*u + kr*Iref_L;

// Anti-windup for the saturation of the modulating signals
uL=u;
if (u*u/sqrt(u*u)>=400) 
{
    uL=400*u/sqrt(u*u);
}
ew=ew+(uL-u)/kr;

// Update of the controller and virtual inductor variables
xc1_a=xc1;
xc2_a=xc2;
xc1=xc2;
xc2=-xc1_a*exp(-2*0.1*Ts)+2.*xc2_a*exp(-0.1*Ts)*cos(w60*Ts)+ (vref-IN_VC) + kw*ew;
xv=(1-Ts*av)*xv+Ts*L2*av*IN_IL2;

// Output handling
OUT_ENABLE = 1;
OUT_PWM_A = uL*1.0/400.0;
OUT_PWM_B = -uL*1.0/400.0;
/*End code section*/"
                output_terminals = "real OUT_ENABLE;real OUT_PWM_A;real OUT_PWM_B;"
                output_terminals_dimensions = "1;1;1"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "True;True;True"
            }
            [
                position = 11312, 7608
                size = 128, 240
            ]

            component "core/Rate Transition" RT40 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11168, 7608
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT41 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11168, 7656
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT42 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9560, 8232
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT43 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9560, 7960
                hide_name = True
                size = 32, 32
            ]

            component "core/Resistor" R4 {
                resistance = "VSC1_RF"
            }
            [
                position = 10056, 7056
                hide_name = True
            ]

            component "core/C function" VOLTAGE_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Ressonant Controller Struct redeclaration
struct ResonantController {
  float sampling_time;
  float kp;
  float zero_dumping;
  float pole_dumping;
  float omega0;
  float aux_4ts;
  float aux_a;
  float k1;
  float k2;
  float k3;
  float k4;
  float k5;
  float err_kminus1;
  float err_kminus2;
  float u_kminus1;
  float u_kminus2;
};

// RessonantController general variables
float u_bounded = 0;
float u = 0;
float ref0 = 0;
float theta0 = 0;

// ResonantController variables (1*60Hz)
struct ResonantController rc0;
float u0 = 0;
float err0 = 0;

// ResonantController variables (3*60Hz)
struct ResonantController rc3;
float u3 = 0;
float err3 = 0;

// ResonantController variables (5*60Hz)
struct ResonantController rc5;
float u5 = 0;
float err5 = 0;

// Constants declaration
float TWOPI = 0;
float omega0 = 0;
float TS_10KHZ = 0;
float SQRT2 = 0;
float U_BOUNDARY = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_resonant_control.dll"
                dll_file_path_full = "C:\projetos\single_phase_microgrid\output\VHIL\lib_resonant_control.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\resonant_control.h"
                h_file_path_full = "C:\projetos\single_phase_microgrid\src\resonant_control.h"
                init_fnc = "/*Begin code section*/
// Auxiliary variables
TWOPI = 6.2831;
omega0 = TWOPI * 60;
TS_10KHZ = 0.0001;
SQRT2 = 1.41421356237;
U_BOUNDARY = 200;

// RessonantController general variables
u_bounded = 0;
u = 0;
ref0 = 0;
theta0 = 0;

// ResonantController variables (1*60 Hz)
u0 = 0;
err0 = 0;

// ResonantController variables (3*60 Hz)
u3 = 0;
err3 = 0;

// ResonantController variables (5*60 Hz)
u5 = 0;
err5 = 0;

// ResonantController initialization
resonantControlInitMatlab(&rc0, 4.753711597365024e-01, -7.994286999974808e-01, 3.246258254171082e-01, -1.998571749993702e+00, 9.999924628840264e-01);
///resonantControlInitMatlab(&rc0, 4.942139496706280e-01, -7.994286999974809e-01, 3.057830354829826e-01, -1.998571749993702e+00, 9.999924628840264e-01);
/*End code section*/"
                input_terminals = "real IN_V_REF;real IN_OMEGA_REF;real IN_VC;real IN_VL_DROP;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // Angle generation for sin calculation
    theta0 = TS_10KHZ * IN_OMEGA_REF + theta0;
    if (theta0 >= TWOPI)
        theta0 -= TWOPI;
    // Reference for Voltage Control
    ref0 = SQRT2 * IN_V_REF * sin(theta0);
    // Voltage reference update
    ref0 = IN_V_REF - IN_VL_DROP;
    // Resonant controller execution
    executeResonant(&rc0, ref0, IN_VC, &u0, &err0);
    // Sum of control actions
    u = u0;
    // Voltage control output limitation
    u_bounded = u;
    if( (u*u)/sqrt(u*u) >= U_BOUNDARY){
        u_bounded = U_BOUNDARY * u / sqrt(u*u);
    }
    // Output values
    OUT_V_CTRL = u_bounded;
    OUT_V_REF_CTRL = ref0;
    OUT_VL_DROP = IN_VL_DROP;
}else{
    // Output values
    OUT_V_CTRL = 0;
    OUT_V_REF_CTRL = 0;
    OUT_VL_DROP = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V_CTRL;real OUT_V_REF_CTRL;real OUT_VL_DROP;"
                output_terminals_dimensions = "inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "False;False;False"
            }
            [
                position = 11328, 8168
                size = 120, 440
            ]

            component "core/Rate Transition" RT19 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 11216, 8168
                hide_name = True
                size = 32, 32
            ]

            component "core/C function" CURRENT_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Proportional Controller Variables
float err = 0;
float u = 0;
float u0 = 0;
float u_bounded = 0;

// Proportional Controller Constants
float KP = 0;
float U_BOUNDARY = 0;
/*End code section*/"
                execution_rate = "TS_20KHZ"
                init_fnc = "/*Begin code section*/
// Proportional Controller Variables
err = 0;
u = 0;
u0 = 0;
u_bounded = 0;

// Proportional Controller Constants
KP = 8;
U_BOUNDARY = 500;
/*End code section*/"
                input_terminals = "real IN_UV;real IN_IL1;real IN_MICROGRID_STATUS;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True"
                input_terminals_show_labels = "False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // Proportional Controller
    err = IN_UV - IN_IL1;
    u0 = KP * err + IN_MICROGRID_STATUS;
    // Control action
    u = u0;
    // Voltage control output limitation
    u_bounded = u;
    if( (u*u)/sqrt(u*u) >= U_BOUNDARY){
        u_bounded = U_BOUNDARY * u / sqrt(u*u);
    }
    // Output values
    OUT_PWMA = +u_bounded/U_BOUNDARY;
    OUT_PWMB = -u_bounded/U_BOUNDARY;
}else{
    // Output values
    OUT_PWMA = 0;
    OUT_PWMB = 0;
}
/*End code section*/"
                output_terminals = "real OUT_PWMA;real OUT_PWMB;"
                output_terminals_dimensions = "inherit;inherit"
                output_terminals_feedthrough = "True;True"
                output_terminals_show_labels = "False;False"
            }
            [
                position = 11896, 8168
                size = 120, 440
            ]

            component "core/Rate Transition" RT30 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11784, 7976
                hide_name = True
                size = 32, 32
            ]

            component "core/Constant" Constant13 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 11072, 8360
                hide_name = True
            ]

            component "core/Constant" Constant14 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11640, 8360
                hide_name = True
            ]

            component "core/Constant" Constant15 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 9696, 6992
                hide_name = True
            ]

            component "core/Probe" UV {
            }
            [
                position = 11520, 8040
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" REF_VC {
            }
            [
                position = 11520, 8232
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" AAAA {
            }
            [
                position = 11520, 8368
                rotation = down
                scale = -1, -1
            ]

            component "core/Single Phase Core Coupling" "Core Coupling 2" {
                snb_type_i = "R1-C1"
            }
            [
                position = 10664, 7152
                hide_name = True
                size = 12, 256
            ]

            component "core/Bus Split" "Bus Split1" {
                outputs = "4"
            }
            [
                position = 9568, 7648
                hide_name = True
            ]

            component "core/Product" Product1 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 9688, 7512
            ]

            component "core/Product" Product2 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 9688, 7584
            ]

            component "core/Constant" Constant9 {
                execution_rate = "TS_20KHZ"
                value = "VSC1_S"
            }
            [
                position = 9496, 7504
                hide_name = True
            ]

            component "core/C function" DROOP_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Constant definitions
const float V0 = 220;
const float W0 = 376.9911;
const float DELTA_V = 33;
const float DELTA_W = 18.8495559215;
const float TWOPI = 6.2831;

// Structs redefinition
struct Droop
{
    // droop variables
    float p_max;
    float q_max;
    float p_ref;
    float q_ref;
    float v0;
    float w0;
    float m;
    float n;
    float delta_v;
    float delta_w;
    // variables to implement butterworth second order low pass filter
    // for active power
    float p_kminus1;
    float p_kminus2;
    float pf_kminus1;
    float pf_kminus2;
    // for reactive power
    float q_kminus1;
    float q_kminus2;
    float qf_kminus1;
    float qf_kminus2;
};

// Structs declaration
struct Droop droop;

// Droop Controller variables
float p = 0;
float q = 0;
float p_ref = 0;
float q_ref = 0;
float v_ref = 0;
float w_ref = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_droop.dll"
                dll_file_path_full = "C:\projetos\single_phase_microgrid\output\VHIL\lib_droop.dll"
                execution_rate = "TS_02KHZ"
                h_file_path = "..\src\droop.h"
                h_file_path_full = "C:\projetos\single_phase_microgrid\src\droop.h"
                init_fnc = "/*Begin code section*/
// Droop variables
p = 0;
q = 0;
p_ref = 0;
q_ref = 0;
v_ref = 0;
w_ref = 0;
// Controllers initialization
DroopControlInit(&droop, 10000, 10000, V0, W0, DELTA_V, DELTA_W);
/*End code section*/"
                input_terminals = "real IN_V_DIR;real IN_V_QUAD;real IN_I_DIR;real IN_I_QUAD;real IN_P0;real IN_Q0;real IN_MICROGRID_STATUS;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    if(IN_MICROGRID_STATUS == 1){
        // Active power ramp
        if(IN_P0 > p_ref) p_ref += 2;
        if(IN_P0 < p_ref) p_ref -= 2;
        // Reactive power ramp
        if(IN_Q0 > q_ref) q_ref += 2;
        if(IN_Q0 < q_ref) q_ref -= 2;
        // Set new power reference
        setDroopPQ(&droop, p_ref, q_ref);
    }else{
        setDroopPQ(&droop, 0.0, 0.0);
    }   
    // Droop controller execution
    calculateDroopPQ(&droop, IN_V_DIR, IN_V_QUAD, IN_I_DIR, IN_I_QUAD, &p, &q);
    executeDroopControl(&droop, &v_ref, &w_ref);
    // Output values
    OUT_V_REF = 220+v_ref;
    OUT_OMEGA_REF = w_ref;
    OUT_P = p;
    OUT_Q = q;
}else{
    // Output values
    OUT_V_REF = 0;
    OUT_OMEGA_REF = 0;
    OUT_P = 0;
    OUT_Q = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V_REF;real OUT_OMEGA_REF;real OUT_P;real OUT_Q;"
                output_terminals_dimensions = "inherit;inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True;True"
                output_terminals_show_labels = "False;False;False;False"
            }
            [
                position = 10200, 8192
                size = 120, 488
            ]

            component "core/Rate Transition" RT53 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8032
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT54 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8096
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT55 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8352
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT56 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 7968
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT57 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8160
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT58 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8416
                hide_name = True
                size = 32, 32
            ]

            component "core/Constant" Constant17 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9944, 8416
                hide_name = True
            ]

            component "core/Rate Transition" RT59 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8224
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT60 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8288
                hide_name = True
                size = 32, 32
            ]

            component "core/C function" APF {
                arb_defs = "/*Begin code section*/
// All Pass Filter Struct definition
struct AllPassFilter
{
    // general
    float sampling_time;
    float phase_shift;
    float omega;
    float tau;
    // recurrence equation gains
    float phi1;
    float phi2;
    float phi3;
    float phi4;
    float phi5;
    // previous interest variables
    float input_kminus1;
    float input_kminus2;
    float output_kminus1;
    float output_kminus2;
};

// All Pass Filter Constants
const float TS = 0.0001;
const float PHI = 3.351032163829113e-01;
const float OMEGA = 3.769911184307752e+02;
const float TAU = 9.523809523809524e-04;

// Struct declaration
struct AllPassFilter apf;

// All Pass Filter Variables
float output = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_all_pass_filter.dll"
                dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_all_pass_filter.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\all_pass_filter.h"
                h_file_path_full = "C:\projetos\1phase_microgrid\src\all_pass_filter.h"
                init_fnc = "/*Begin code section*/
// Struct declaration
initAllPassFilter(&apf, TS, PHI, OMEGA, TAU);
// All Pass Filter Variables
output = 0;
/*End code section*/"
                input_terminals = "real IN_IL2_F;"
                input_terminals_dimensions = "inherit"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "False"
                output_fnc = "/*Begin code section*/
// All Pass Filter execution
executeAllPassFilter(&apf, IN_IL2_F, &output);

// Handle Output
OUT_IL2_PC = output;
/*End code section*/"
                output_terminals = "real OUT_IL2_PC;"
                output_terminals_dimensions = "inherit"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10800, 8072
                hide_name = True
                size = 48, 48
            ]

            component "core/Probe" IL2_F {
            }
            [
                position = 10744, 8136
                rotation = left
                scale = -1, -1
            ]

            component "core/Probe" IL2_PC {
            }
            [
                position = 10856, 8136
                rotation = left
                scale = -1, -1
            ]

            component "core/C function" VIRTUAL_IMPEDANCE {
                add_src_path = "..\src"
                add_src_path_full = "C:\projetos\1phase_microgrid\src"
                arb_defs = "/*Begin code section*/
// Virtual Impedance Struct definition
struct VirtualImpedance
{
  // general
  float sampling_time;
  float inductance;
  float zeta;
  float omega_pole;
  // recurrence equation gains
  float phi1;
  float phi2;
  float phi3;
  float phi4;
  // previous interest variables
  float current_kminus1;
  float current_kminus2;
  float voltage_kminus1;
  float voltage_kminus2;
};

// Virtual Impedance Constants
const float TS = 0.0001;
const float INDUCTANCE = 1.25e-3;
const float ZETA = 1.0;
const float POLE = 1.570796326794897e4;

// Struct declaration
struct VirtualImpedance vz;

// Virtual Impedance  Variables
float output = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_virtual_impedance.dll"
                dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_virtual_impedance.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\virtual_impedance.h"
                h_file_path_full = "C:\projetos\1phase_microgrid\src\virtual_impedance.h"
                init_fnc = "/*Begin code section*/
// Struct initialization
initVirtualImpedance(&vz, TS, INDUCTANCE, ZETA, POLE);
// Virtual Impedance Variables
output = 0;
/*End code section*/"
                input_terminals = "real IN_IL2_PC;real IN_VIRTUAL_INDUCTANCE;"
                input_terminals_dimensions = "inherit;inherit"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
// Set inductance according to SCADA input
setInductance(&vz, 1e-3*IN_VIRTUAL_INDUCTANCE);
// Virtual Impedance execution
executeVirtualImpedance(&vz, IN_IL2_PC, &output);
// Handle Output
OUT_VL_DROP = output;
/*End code section*/"
                output_terminals = "real OUT_VL_DROP;"
                output_terminals_dimensions = "inherit"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10800, 8264
                hide_name = True
                size = 48, 48
            ]

            component "core/Probe" VL_DROP {
            }
            [
                position = 10856, 8328
                rotation = left
                scale = -1, -1
            ]

            component "core/SCADA Input" VZ {
                def_value = "1.25"
                execution_rate = "TS_10KHZ"
                max = "3"
                min = "0"
                signal_access = "Inherit"
                unit = "mH"
            }
            [
                position = 10472, 8312
            ]

            component "core/Advanced Low-Pass Filter" LPF {
                N = "2"
                apb = "3"
                execution_rate = "TS_10KHZ"
                fc = "300"
                fc_combo = "External"
                type_combo = "Butterworth"
            }
            [
                position = 10688, 8072
                size = 48, 48
            ]

            component "core/Rate Transition" RT61 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10616, 8064
                hide_name = True
                size = 32, 32
            ]

            component "core/SCADA Input" FC {
                def_value = "300"
                execution_rate = "TS_10KHZ"
                max = "1000"
                min = "120"
                signal_access = "Inherit"
                unit = "Hz"
            }
            [
                position = 10472, 8120
            ]

            component "core/C function" DROOP_CONTROLLER1 {
                arb_defs = "/*Begin code section*/
// Constant definitions
const float V0 = 220;
const float W0 = 376.9911;
const float DELTA_V = 22;
const float DELTA_W = 18.8495559215;
const float TWOPI = 6.2831;

// Structs redefinition
struct Droop
{
    // droop variables
    float p_max;
    float q_max;
    float p_ref;
    float q_ref;
    float v0;
    float w0;
    float m;
    float n;
    float delta_v;
    float delta_w;
    // variables to implement butterworth second order low pass filter
    // for active power
    float p_kminus1;
    float p_kminus2;
    float pf_kminus1;
    float pf_kminus2;
    // for reactive power
    float q_kminus1;
    float q_kminus2;
    float qf_kminus1;
    float qf_kminus2;
};

// Structs declaration
struct Droop droop;

// Droop Controller variables
float p = 0;
float q = 0;
float p_ref = 0;
float q_ref = 0;
float v_ref = 0;
float w_ref = 0;

// TEST
float ONE_BY_SQRT2 = 0;
float TS_02KHZ = 0;
float mod_V_alphaBeta = 0;
float v_line = 0;
// ADDITION OF AN INTEGRATOR TO VOLTAGE LOOP
float v0 = 0;
// ADDITION OF AN INTEGRATOR TO FREQUENCY LOOP
float w0 = 0;
float pcc = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_droop.dll"
                dll_file_path_full = "C:\projetos\single_phase_microgrid\output\VHIL\lib_droop.dll"
                execution_rate = "TS_02KHZ"
                h_file_path = "..\src\droop.h"
                h_file_path_full = "C:\projetos\single_phase_microgrid\src\droop.h"
                init_fnc = "/*Begin code section*/
// Droop variables
p = 0;
q = 0;
p_ref = 0;
q_ref = 0;
v_ref = 0;
w_ref = 0;
// Controllers initialization
DroopControlInit(&droop, 15000, 15000, V0, W0, DELTA_V, DELTA_W);

// TEST
ONE_BY_SQRT2 = 0.70710678118;
TS_02KHZ = 0.0005;
mod_V_alphaBeta = 0;
v_line = 0;
// ADDITION OF AN INTEGRATOR TO VOLTAGE LOOP
v0 = 220;
// ADDITION OF AN INTEGRATOR TO FREQUENCY LOOP
w0 = 0;
pcc = 0;
/*End code section*/"
                input_terminals = "real IN_V_DIR;real IN_V_QUAD;real IN_I_DIR;real IN_I_QUAD;real IN_P0;real IN_Q0;real IN_MICROGRID_STATUS;real IN_ENABLE;real IN_V_PCC;real IN_KV;inherit IN_KP;inherit IN_KI;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True;True;True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False;False;False;False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    if(IN_MICROGRID_STATUS == 1){
        // Active power ramp
        if(IN_P0 > p_ref) p_ref += 10;
        if(IN_P0 < p_ref) p_ref -= 10;
        // Reactive power ramp
        if(IN_Q0 > q_ref) q_ref += 10;
        if(IN_Q0 < q_ref) q_ref -= 10;
        // Set new power reference
        setDroopPQ(&droop, p_ref, q_ref);
    }else{
        setDroopPQ(&droop, 0.0, 0.0);
    }
    // Droop controller execution
    calculateDroopPQ(&droop, IN_V_DIR, IN_V_QUAD, IN_I_DIR, IN_I_QUAD, &p, &q);
    executeDroopControl(&droop, &v_ref, &w_ref);
    // ADDITION OF NEW GAINS
    mod_V_alphaBeta = ONE_BY_SQRT2 * sqrt(IN_V_DIR*IN_V_DIR + IN_V_QUAD*IN_V_QUAD);
    v_line = v_ref + IN_KV * (220 - mod_V_alphaBeta);
    // ADDITION OF AN INTEGRATOR TO VOLTAGE LOOP
    v0 = v0 + v_line * IN_KI * TS_02KHZ;
    // Output values
    OUT_V_REF = v0;
    OUT_OMEGA_REF = w_ref;
    OUT_V0 = v0;
    OUT_VRMS = mod_V_alphaBeta;
}else{
    // Output values
    OUT_V_REF = 0;
    OUT_OMEGA_REF = 0;
    OUT_V0 = 0;
    OUT_VRMS = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V_REF;real OUT_OMEGA_REF;real OUT_V0;real OUT_VRMS;"
                output_terminals_dimensions = "inherit;inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True;True"
                output_terminals_show_labels = "False;False;False;False"
            }
            [
                position = 10200, 8920
                hide_name = True
                size = 120, 768
            ]

            component "core/Rate Transition" RT62 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8632
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT63 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8696
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT64 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8952
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT65 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8568
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT66 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8760
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT67 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 9016
                hide_name = True
                size = 32, 32
            ]

            component "core/Constant" Constant18 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9944, 9016
                hide_name = True
            ]

            component "core/Rate Transition" RT68 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8824
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT69 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 8888
                hide_name = True
                size = 32, 32
            ]

            component "core/Probe" VZERO {
            }
            [
                position = 10352, 9040
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" VRMS {
            }
            [
                position = 10352, 9280
                rotation = down
                scale = -1, 1
            ]

            component "core/Rate Transition" RT70 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 9080
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT71 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 9144
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT72 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 9208
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT73 {
                execution_rate = "TS_02KHZ"
            }
            [
                position = 10088, 9272
                hide_name = True
                size = 32, 32
            ]

            component "core/Constant" Constant20 {
                value = "0"
            }
            [
                position = 11080, 8072
                hide_name = True
            ]

            component "core/C function" DROOP_CONTROLLER2 {
                arb_defs = "/*Begin code section*/
// Constant definitions
const float VZERO = 220;
const float WZERO = 376.9911;
const float DELTA_V = 22;
const float DELTA_W = 18.8495559215;
const float TWOPI = 6.2831;
const float TS_10KHZ = 0.0001;
const float WC = 37.6991118431;
const int ISLANDED = 1;
const int TIED = 0;

// Structs redefinition
struct ImprovedDroop
{
    // general
    float sampling_time;

    // variables to implement first order low pass filter
    float cutoff_frequency;
    float phi1;
    float phi2;
    float phi3;
    // for active power
    float p_kminus1;
    float pf_kminus1;
    // for reactive power
    float q_kminus1;
    float qf_kminus1;

    // classical droop variables
    float p_max;
    float q_max;
    float p0;
    float q0;
    float v0;
    float w0;
    float m;
    float n;

    // improved droop variables
    float ki;
    float kv;
    int is_islanded;

    // integrator variables
    float phi_integral;
    // for voltage integration
    float vin_kminus1;
    float vout_kminus1;
    // for frequency integration
    float w_kminus1;
    float theta_kminus1;
};

// Structs declaration
struct ImprovedDroop droop;

// Droop Controller variables
float v = 0;
float p = 0;
float q = 0;
float p_ref = 0;
float q_ref = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_improved_droop.dll"
                dll_file_path_full = "C:\projetos\single_phase_microgrid\output\VHIL\lib_improved_droop.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\improved_droop.h"
                h_file_path_full = "C:\projetos\single_phase_microgrid\src\improved_droop.h"
                init_fnc = "/*Begin code section*/
// Droop variables
v = 0;
p = 0;
q = 0;
p_ref = 0;
q_ref = 0;
// Controllers initialization
initDroop(&droop, TS_10KHZ, VZERO, WZERO, 15000, 15000, DELTA_V, DELTA_W, WC, 25, 0.01);
setStatus(&droop, TIED);
/*End code section*/"
                input_terminals = "real IN_V_DIR;real IN_V_QUAD;real IN_I_DIR;real IN_I_QUAD;real IN_P0;real IN_Q0;real IN_KV;real IN_KI;real IN_MICROGRID_STATUS;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False;False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    if(IN_MICROGRID_STATUS == 1){
        // Set status to tied
        setStatus(&droop, TIED);
        // Active power ramp
        if(IN_P0 > p_ref) p_ref += 10;
        if(IN_P0 < p_ref) p_ref -= 10;
            
        // Reactive power ramp
        if(IN_Q0 > q_ref) q_ref += 10;
        if(IN_Q0 < q_ref) q_ref -= 10;
            
        // Set new power reference
        setP0(&droop, p_ref);
        setQ0(&droop, q_ref);
        
    }else{
        // Set status to islanded
        setStatus(&droop, ISLANDED);
        
        // Set power reference to zero
        setP0(&droop, 0);
        setQ0(&droop, 0);
    }
    
    // Droop controller execution
    executeDroop(&droop, IN_V_DIR, IN_V_QUAD, IN_I_DIR, IN_I_QUAD, &v, &p, &q);
    
    // Set Ki
    setKi(&droop, IN_KI);
    
    // Set Kv
    setKv(&droop, IN_KV);
    
    // Output values
    OUT_V = v;
    OUT_PF = p;
    OUT_QF = q;
}else{
    // Output values
    OUT_V = 0;
    OUT_PF = 0;
    OUT_QF = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_PF;real OUT_QF;inherit OUT_VRMS;inherit OUT_THETA;"
                output_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True;True;True"
                output_terminals_show_labels = "False;False;False;False;False"
            }
            [
                position = 10208, 9784
                hide_name = True
                size = 120, 768
            ]

            component "core/Constant" Constant19 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9952, 10144
                hide_name = True
            ]

            component "core/Rate Transition" RT80 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10096, 9744
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT81 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10096, 9824
                hide_name = True
                size = 32, 32
            ]

            component "core/Probe" QF {
                signal_access = "Inherit"
                signal_type = "reactive power"
            }
            [
                position = 10352, 9784
                rotation = down
                scale = -1, 1
            ]

            component "core/SCADA Input" KV {
                unit = ""
            }
            [
                position = 9952, 9904
            ]

            component "core/Rate Transition" RT83 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10096, 10064
                hide_name = True
                size = 32, 32
            ]

            component "core/SCADA Input" KI {
                unit = ""
            }
            [
                position = 9952, 9984
            ]

            component "core/Probe" PF {
                signal_access = "Inherit"
                signal_type = "active power"
            }
            [
                position = 10352, 9608
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" VDROOP {
                signal_access = "Inherit"
                signal_type = "reactive power"
            }
            [
                position = 10352, 9496
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" VDRMS {
                signal_access = "Inherit"
                signal_type = "reactive power"
            }
            [
                position = 10352, 9960
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" THETA {
                signal_access = "Inherit"
                signal_type = "reactive power"
            }
            [
                position = 10352, 10136
                rotation = down
                scale = -1, 1
            ]

            port L {
                position = right:auto
                kind = pe
            }
            [
                position = 10720, 7056
                scale = -1, 1
            ]

            port N {
                position = right:auto
                kind = pe
            }
            [
                position = 10720, 7248
                scale = -1, 1
            ]

            port "Info in" {
                position = left:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 9496, 7648
            ]

            tag From11 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9712, 6896
                hide_name = True
                size = 60, 20
            ]

            tag Goto11 {
                value = "ENABLE"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10936, 7512
                hide_name = True
                size = 60, 20
            ]

            tag From9 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10488, 7640
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "IL2"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10376, 6984
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From13 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10488, 7560
                hide_name = True
                size = 60, 20
            ]

            tag From10 {
                value = "IL1"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10488, 7512
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10112, 7568
                hide_name = True
                size = 60, 20
            ]

            tag From8 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9712, 6944
                hide_name = True
                size = 60, 20
            ]

            tag Goto13 {
                value = "VC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10376, 7200
                hide_name = True
                size = 60, 20
            ]

            tag Goto9 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10936, 7576
                hide_name = True
                size = 60, 20
            ]

            tag Goto10 {
                value = "IL1"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10160, 6984
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From15 {
                value = "Q0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9912, 7704
                hide_name = True
                size = 60, 20
            ]

            tag Goto6 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10936, 7640
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10112, 7504
                hide_name = True
                size = 60, 20
            ]

            tag Goto12 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10384, 7776
                hide_name = True
                size = 60, 20
            ]

            tag From18 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10488, 7592
                hide_name = True
                size = 60, 20
            ]

            tag From19 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9912, 7536
                hide_name = True
                size = 60, 20
            ]

            tag From14 {
                value = "P0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9912, 7600
                hide_name = True
                size = 60, 20
            ]

            tag From95 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9448, 7960
                hide_name = True
                size = 108, 20
            ]

            tag From96 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9448, 8232
                hide_name = True
                size = 108, 20
            ]

            tag Goto107 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9832, 7968
                hide_name = True
                size = 108, 20
            ]

            tag Goto108 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9832, 8032
                hide_name = True
                size = 108, 20
            ]

            tag Goto109 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9832, 8096
                hide_name = True
                size = 108, 20
            ]

            tag Goto110 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9832, 8160
                hide_name = True
                size = 108, 20
            ]

            tag Goto111 {
                value = "OMEGA_VSC1"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9832, 8224
                hide_name = True
                size = 108, 20
            ]

            tag Goto129 {
                value = "ENABLE"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11448, 7512
                hide_name = True
                size = 60, 20
            ]

            tag From136 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11056, 7704
                hide_name = True
                size = 60, 20
            ]

            tag From137 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11056, 7560
                hide_name = True
                size = 60, 20
            ]

            tag From138 {
                value = "IL1"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11056, 7512
                hide_name = True
                size = 60, 20
            ]

            tag Goto130 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11448, 7608
                hide_name = True
                size = 60, 20
            ]

            tag Goto131 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11448, 7704
                hide_name = True
                size = 60, 20
            ]

            tag From139 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11056, 7608
                hide_name = True
                size = 60, 20
            ]

            tag From140 {
                value = "OMEGA_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11056, 7656
                hide_name = True
                size = 60, 20
            ]

            tag Goto117 {
                value = "UV"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11480, 7968
                hide_name = True
                size = 108, 20
            ]

            tag Goto118 {
                value = "VREF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11480, 8168
                hide_name = True
                size = 108, 20
            ]

            tag Goto121 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 12048, 7968
                hide_name = True
                size = 108, 20
            ]

            tag Goto122 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 12048, 8368
                hide_name = True
                size = 108, 20
            ]

            tag From113 {
                value = "IL1"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11680, 8104
                hide_name = True
                size = 108, 20
            ]

            tag From115 {
                value = "UV"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11680, 7976
                hide_name = True
                size = 108, 20
            ]

            tag From141 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11112, 7976
                hide_name = True
                size = 108, 20
            ]

            tag From108 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11112, 8168
                hide_name = True
                size = 108, 20
            ]

            tag From144 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11680, 8232
                hide_name = True
                size = 108, 20
            ]

            tag Goto14 {
                value = "P0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9792, 7512
                hide_name = True
                size = 60, 20
            ]

            tag Goto15 {
                value = "Q0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9792, 7584
                hide_name = True
                size = 60, 20
            ]

            tag Goto18 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9792, 7648
                hide_name = True
                size = 60, 20
            ]

            tag Goto132 {
                value = "VRMS_VPCC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9792, 7680
                hide_name = True
                size = 60, 20
            ]

            tag Goto140 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10352, 7976
                hide_name = True
                size = 108, 20
            ]

            tag Goto141 {
                value = "OMEGA_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10352, 8120
                hide_name = True
                size = 108, 20
            ]

            tag From153 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9984, 7968
                hide_name = True
                size = 108, 20
            ]

            tag From154 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9984, 8032
                hide_name = True
                size = 108, 20
            ]

            tag From155 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9984, 8096
                hide_name = True
                size = 108, 20
            ]

            tag From156 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9984, 8160
                hide_name = True
                size = 108, 20
            ]

            tag From157 {
                value = "Q0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9960, 8288
                hide_name = True
                size = 60, 20
            ]

            tag From158 {
                value = "P0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9960, 8224
                hide_name = True
                size = 60, 20
            ]

            tag From159 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9960, 8352
                hide_name = True
                size = 60, 20
            ]

            tag Goto142 {
                value = "IL2_PC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10944, 8072
                hide_name = True
                size = 108, 20
            ]

            tag From160 {
                value = "VL_DROP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11112, 8264
                hide_name = True
                size = 108, 20
            ]

            tag Goto143 {
                value = "VL_DROP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10944, 8264
                hide_name = True
                size = 108, 20
            ]

            tag From161 {
                value = "IL2_PC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8256
                hide_name = True
                size = 108, 20
            ]

            tag From143 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8064
                hide_name = True
                size = 108, 20
            ]

            tag Goto144 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10352, 8560
                hide_name = True
                size = 108, 20
            ]

            tag Goto145 {
                value = "OMEGA_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10352, 8800
                hide_name = True
                size = 108, 20
            ]

            tag From162 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9984, 8568
                hide_name = True
                size = 108, 20
            ]

            tag From163 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9984, 8632
                hide_name = True
                size = 108, 20
            ]

            tag From164 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9984, 8696
                hide_name = True
                size = 108, 20
            ]

            tag From165 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9984, 8760
                hide_name = True
                size = 108, 20
            ]

            tag From166 {
                value = "Q0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9960, 8888
                hide_name = True
                size = 60, 20
            ]

            tag From167 {
                value = "P0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9960, 8824
                hide_name = True
                size = 60, 20
            ]

            tag From168 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9960, 8952
                hide_name = True
                size = 60, 20
            ]

            tag Goto146 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10360, 9424
                hide_name = True
                size = 108, 20
            ]

            tag From169 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9992, 9424
                hide_name = True
                size = 108, 20
            ]

            tag From170 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9992, 9504
                hide_name = True
                size = 108, 20
            ]

            tag From171 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9992, 9584
                hide_name = True
                size = 108, 20
            ]

            tag From172 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9992, 9664
                hide_name = True
                size = 108, 20
            ]

            tag From173 {
                value = "Q0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9968, 9824
                hide_name = True
                size = 60, 20
            ]

            tag From174 {
                value = "P0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9968, 9744
                hide_name = True
                size = 60, 20
            ]

            tag From175 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9968, 10064
                hide_name = True
                size = 60, 20
            ]

            junction Junction82 sp
            [
                position = 9968, 7664
            ]

            junction Junction83 sp
            [
                position = 9984, 7536
            ]

            junction Junction84 sp
            [
                position = 10336, 7776
            ]

            junction Junction87 pe
            [
                position = 10232, 7056
            ]

            junction Junction88 pe
            [
                position = 10296, 7056
            ]

            junction Junction95 sp
            [
                position = 9824, 6944
            ]

            junction Junction96 sp
            [
                position = 9840, 6960
            ]

            junction Junction97 pe
            [
                position = 10232, 7248
            ]

            junction Junction100 sp
            [
                position = 9808, 6992
            ]

            junction Junction101 sp
            [
                position = 11408, 7968
            ]

            junction Junction104 pe
            [
                position = 10296, 7248
            ]

            junction Junction105 pe
            [
                position = 10568, 7248
            ]

            junction Junction107 sp
            [
                position = 11408, 8168
            ]

            junction Junction81 sp
            [
                position = 9640, 7504
            ]

            junction Junction109 sp
            [
                position = 10856, 8072
            ]

            junction Junction111 sp
            [
                position = 10856, 8264
            ]

            junction Junction112 sp
            [
                position = 10744, 8072
            ]

            junction Junction113 sp
            [
                position = 10288, 9424
            ]

            comment Comment25 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER</p></body></html> ENDCOMMENT 
            [
                position = 10152, 7440
            ]

            comment Comment26 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">INNER LOOPS</p></body></html> ENDCOMMENT 
            [
                position = 10736, 7440
            ]

            comment Comment27 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">CONTROL </span></p></body></html> ENDCOMMENT 
            [
                position = 9952, 7352
            ]

            comment Comment28 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">POWER SYSTEM</span> </p></body></html> ENDCOMMENT 
            [
                position = 9912, 6784
            ]

            comment Comment16 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">PHASE LOCKED LOOP</p></body></html> ENDCOMMENT 
            [
                position = 9584, 7904
            ]

            comment Comment29 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">INNER LOOPS</p></body></html> ENDCOMMENT 
            [
                position = 11248, 7440
            ]

            comment Comment19 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VOLTAGE CONTROLLER </p></body></html> ENDCOMMENT 
            [
                position = 11232, 7904
            ]

            comment Comment20 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">CURRENT CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 11784, 7896
            ]

            comment Comment23 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[0] = P0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[1] = Q0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[2] = STS_STATUS   </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[3] = VRMS_PCC   </p></body></html> ENDCOMMENT 
            [
                position = 9560, 7720
            ]

            comment Comment24 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">HANDLE INFO INPUT</p></body></html> ENDCOMMENT 
            [
                position = 9568, 7440
            ]

            comment Comment30 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">ALL PASS FILTER</p></body></html> ENDCOMMENT 
            [
                position = 10728, 8000
            ]

            comment Comment31 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 10104, 7904
            ]

            comment Comment32 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VIRTUAL IMPEDANCE</p></body></html> ENDCOMMENT 
            [
                position = 10712, 8184
            ]

            comment Comment33 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 10104, 8496
            ]

            comment Comment34 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 10112, 9360
            ]

            connect DROOP.OUT_V_RMS V_RMS_DROOP.in as Connection490
            connect DROOP.OUT_W W_DROOP.in as Connection489
            connect DROOP.OUT_PF PF2.in as Connection491
            connect R2.p_node C2.n_node as Connection553
            connect DROOP.OUT_QF QF2.in as Connection492
            connect From10 "INNER LOOPS.IN_IL1" as Connection376
            connect VC.out Goto13 as Connection499
            connect From9 "INNER LOOPS.IN_IL2" as Connection417
            connect From13 "INNER LOOPS.IN_VC" as Connection500
            connect Goto11 "INNER LOOPS.OUT_ENABLE" as Connection393
            connect Vdc.p_node R3.n_node as Connection569
            connect From14 "Signal switch1.in" as Connection687
            connect From15 "Signal switch3.in" as Connection688
            connect Constant4.out Junction82 as Connection690
            [
                breakpoints = 9944, 7664; 9968, 7664
            ]
            connect Junction82 "Signal switch1.in1" as Connection691
            [
                breakpoints = 9968, 7656; 9968, 7632
            ]
            connect "Signal switch3.in1" Junction82 as Connection692
            connect "Signal switch1.in2" Junction83 as Connection698
            connect Junction83 From19 as Connection699
            [
                breakpoints = 9984, 7536
            ]
            connect "Signal switch3.in2" Junction83 as Connection700
            [
                breakpoints = 10024, 7664; 9984, 7664
            ]
            connect "Signal switch1.out" DROOP.IN_P0 as Connection701
            connect "Signal switch3.out" DROOP.IN_Q0 as Connection702
            [
                breakpoints = 10072, 7720; 10072, 7680
            ]
            connect From2 DROOP.IN_V as Connection705
            connect From1 DROOP.IN_I as Connection706
            connect Goto12 Junction84 as Connection708
            connect Junction84 DROOP.OUT_V as Connection709
            connect V_DROOP.in Junction84 as Connection710
            connect IL1.out Goto10 as Connection713
            connect IL2.out Goto1 as Connection721
            connect IL1.n_node Junction87 as Connection726
            connect Junction87 C2.p_node as Connection727
            [
                breakpoints = 10232, 7056
            ]
            connect VC.p_node Junction88 as Connection729
            connect Junction88 Junction87 as Connection730
            connect IL2.p_node Junction88 as Connection731
            connect "Bus Join1.out" VSC1_COM.in as Connection749
            connect "GRID FORMING.neg_out" Vdc.n_node as Connection757
            connect R3.p_node "GRID FORMING.pos_out" as Connection758
            connect Goto6 "INNER LOOPS.OUT_PWM_B" as Connection766
            [
                breakpoints = 10880, 7640
            ]
            connect "INNER LOOPS.OUT_PWM_A" Goto9 as Connection767
            [
                breakpoints = 10888, 7576
            ]
            connect From8 Junction95 as Connection773
            [
                breakpoints = 9816, 6944; 9816, 6944
            ]
            connect Junction95 "Bus Join1.in1" as Connection775
            connect From11 Junction96 as Connection776
            [
                breakpoints = 9832, 6896; 9840, 6896
            ]
            connect "Bus Join1.in2" Junction96 as Connection778
            connect Constant10.out DROOP.IN_V0 as Connection779
            connect Constant11.out DROOP.IN_W0 as Connection780
            connect L6.p_node "GRID FORMING.a_in" as Connection788
            connect R2.n_node Junction97 as Connection789
            connect "GRID FORMING.b_in" Junction97 as Connection791
            connect Junction95 "GRID FORMING.InA" as Connection794
            connect Junction96 "GRID FORMING.InB" as Connection795
            connect Goto107 SOGI_QSG.OUT_V as Connection6532
            connect Goto108 SOGI_QSG.OUT_V_QUAD as Connection6533
            connect Goto109 SOGI_QSG.OUT_I as Connection6534
            connect SOGI_QSG.OUT_I_QUAD Goto110 as Connection6535
            connect Goto111 SOGI_QSG.OUT_OMEGA as Connection6536
            connect From136 "INNER LOOPS1.IN_IL2" as Connection6746
            connect Goto129 "INNER LOOPS1.OUT_ENABLE" as Connection6748
            connect From137 "INNER LOOPS1.IN_VC" as Connection6753
            connect From138 "INNER LOOPS1.IN_IL1" as Connection6754
            connect Goto130 "INNER LOOPS1.OUT_PWM_A" as Connection6756
            connect Goto131 "INNER LOOPS1.OUT_PWM_B" as Connection6757
            connect RT40.out "INNER LOOPS1.IN_V_DROOP" as Connection6760
            connect RT40.in From139 as Connection6761
            connect RT41.out "INNER LOOPS1.IN_W_DROOP" as Connection6762
            connect RT41.in From140 as Connection6763
            connect RT42.out SOGI_QSG.IN_IL2 as Connection6764
            connect RT42.in From96 as Connection6765
            connect From95 RT43.in as Connection6766
            connect RT43.out SOGI_QSG.IN_VGRID as Connection6767
            connect L6.n_node R4.p_node as Connection6768
            connect IL1.p_node R4.n_node as Connection6769
            connect RT19.out VOLTAGE_CONTROLLER.IN_VC as Connection6551
            connect Goto122 CURRENT_CONTROLLER.OUT_PWMB as Connection6568
            connect RT30.out CURRENT_CONTROLLER.IN_UV as Connection6585
            connect "Bus Join1.in" Junction100 as Connection6779
            connect Junction100 "GRID FORMING.En" as Connection6780
            [
                breakpoints = 9808, 6992
            ]
            connect Constant15.out Junction100 as Connection6781
            connect Constant14.out CURRENT_CONTROLLER.IN_ENABLE as Connection6784
            connect Goto117 Junction101 as Connection6785
            connect Junction101 VOLTAGE_CONTROLLER.OUT_V_CTRL as Connection6786
            connect UV.in Junction101 as Connection6787
            connect Constant13.out VOLTAGE_CONTROLLER.IN_ENABLE as Connection6798
            connect From108 RT19.in as Connection6807
            connect From113 CURRENT_CONTROLLER.IN_IL1 as Connection6808
            connect IL2.n_node Meter.in as Connection6811
            connect Junction97 Junction104 as Connection6812
            [
                breakpoints = 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248
            ]
            connect Junction104 VC.n_node as Connection6813
            [
                breakpoints = 10296, 7248; 10296, 7248; 10296, 7248; 10296, 7248; 10296, 7248
            ]
            connect Meter.N Junction105 as Connection6814
            connect Junction104 Junction105 as Connection6816
            connect From144 CURRENT_CONTROLLER.IN_MICROGRID_STATUS as Connection6817
            connect RT30.in From115 as Connection6818
            connect VOLTAGE_CONTROLLER.OUT_V_REF_CTRL Junction107 as Connection6824
            connect Junction107 Goto118 as Connection6825
            connect REF_VC.in Junction107 as Connection6826
            connect AAAA.in VOLTAGE_CONTROLLER.OUT_VL_DROP as Connection6827
            connect From18 "INNER LOOPS.IN_V_REF" as Connection6831
            connect Meter.out "Core Coupling 2.a_in" as Connection6832
            connect "Core Coupling 2.a_out" L as Connection6833
            connect Junction105 "Core Coupling 2.b_in" as Connection6834
            connect "Core Coupling 2.b_out" N as Connection6835
            connect Goto121 CURRENT_CONTROLLER.OUT_PWMA as Connection6836
            [
                breakpoints = 11976, 7968; 11976, 7968
            ]
            connect Goto18 "Bus Split1.out2" as Connection622
            [
                breakpoints = 9760, 7648; 9744, 7648; 9760, 7648; 9680, 7648; 9680, 7656; 9608, 7656
            ]
            connect Goto14 Product1.out as Connection632
            connect Product2.out Goto15 as Connection633
            connect Product1.in Junction81 as Connection684
            connect Junction81 Product2.in as Connection685
            [
                breakpoints = 9640, 7504; 9640, 7576
            ]
            connect Constant9.out Junction81 as Connection686
            connect "Bus Split1.out1" Product2.in1 as Connection6840
            [
                breakpoints = 9640, 7624; 9640, 7592
            ]
            connect "Bus Split1.out" Product1.in1 as Connection6841
            [
                breakpoints = 9624, 7608; 9624, 7520
            ]
            connect "Info in" "Bus Split1.in" as Connection6843
            connect Goto132 "Bus Split1.out3" as Connection6844
            [
                breakpoints = 9744, 7680; 9680, 7680; 9680, 7672
            ]
            connect Goto140 DROOP_CONTROLLER.OUT_V_REF as Connection6865
            connect Goto141 DROOP_CONTROLLER.OUT_OMEGA_REF as Connection6866
            connect RT53.out DROOP_CONTROLLER.IN_V_QUAD as Connection6867
            [
                hide_name = True
            ]
            connect RT54.out DROOP_CONTROLLER.IN_I_DIR as Connection6868
            [
                hide_name = True
            ]
            connect RT56.out DROOP_CONTROLLER.IN_V_DIR as Connection6869
            [
                hide_name = True
            ]
            connect From153 RT56.in as Connection6870
            [
                hide_name = True
            ]
            connect From154 RT53.in as Connection6871
            [
                hide_name = True
            ]
            connect RT57.out DROOP_CONTROLLER.IN_I_QUAD as Connection6872
            [
                hide_name = True
            ]
            connect From156 RT57.in as Connection6873
            [
                hide_name = True
            ]
            connect From155 RT54.in as Connection6874
            [
                hide_name = True
            ]
            connect Constant17.out RT58.in as Connection6875
            connect From157 RT60.in as Connection6876
            connect From158 RT59.in as Connection6877
            connect RT59.out DROOP_CONTROLLER.IN_P0 as Connection6878
            [
                hide_name = True
            ]
            connect RT60.out DROOP_CONTROLLER.IN_Q0 as Connection6879
            [
                hide_name = True
            ]
            connect RT58.out DROOP_CONTROLLER.IN_ENABLE as Connection6880
            [
                hide_name = True
            ]
            connect RT55.out DROOP_CONTROLLER.IN_MICROGRID_STATUS as Connection6881
            [
                hide_name = True
            ]
            connect From159 RT55.in as Connection6882
            connect APF.OUT_IL2_PC Junction109 as Connection6891
            connect Junction109 Goto142 as Connection6892
            connect IL2_PC.in Junction109 as Connection6893
            connect VIRTUAL_IMPEDANCE.OUT_VL_DROP Junction111 as Connection6899
            connect Junction111 Goto143 as Connection6900
            connect VL_DROP.in Junction111 as Connection6901
            connect From160 VOLTAGE_CONTROLLER.IN_VL_DROP as Connection6904
            connect From161 VIRTUAL_IMPEDANCE.IN_IL2_PC as Connection6905
            connect VZ.out VIRTUAL_IMPEDANCE.IN_VIRTUAL_INDUCTANCE as Connection6906
            [
                breakpoints = 10664, 8312; 10664, 8272
            ]
            connect RT61.out LPF.in as Connection6895
            connect RT61.in From143 as Connection6896
            connect APF.IN_IL2_F Junction112 as Connection6909
            connect Junction112 IL2_F.in as Connection6910
            [
                breakpoints = 10744, 8072
            ]
            connect LPF.out Junction112 as Connection6911
            connect FC.out LPF.fc_input as Connection6912
            connect Goto144 DROOP_CONTROLLER1.OUT_V_REF as Connection6913
            connect Goto145 DROOP_CONTROLLER1.OUT_OMEGA_REF as Connection6914
            connect RT62.out DROOP_CONTROLLER1.IN_V_QUAD as Connection6915
            [
                hide_name = True
            ]
            connect RT63.out DROOP_CONTROLLER1.IN_I_DIR as Connection6916
            [
                hide_name = True
            ]
            connect RT65.out DROOP_CONTROLLER1.IN_V_DIR as Connection6917
            [
                hide_name = True
            ]
            connect From162 RT65.in as Connection6918
            [
                hide_name = True
            ]
            connect From163 RT62.in as Connection6919
            [
                hide_name = True
            ]
            connect RT66.out DROOP_CONTROLLER1.IN_I_QUAD as Connection6920
            [
                hide_name = True
            ]
            connect From165 RT66.in as Connection6921
            [
                hide_name = True
            ]
            connect From164 RT63.in as Connection6922
            [
                hide_name = True
            ]
            connect Constant18.out RT67.in as Connection6923
            connect From166 RT69.in as Connection6924
            connect From167 RT68.in as Connection6925
            connect RT68.out DROOP_CONTROLLER1.IN_P0 as Connection6926
            [
                hide_name = True
            ]
            connect RT69.out DROOP_CONTROLLER1.IN_Q0 as Connection6927
            [
                hide_name = True
            ]
            connect RT67.out DROOP_CONTROLLER1.IN_ENABLE as Connection6928
            [
                hide_name = True
            ]
            connect RT64.out DROOP_CONTROLLER1.IN_MICROGRID_STATUS as Connection6929
            [
                hide_name = True
            ]
            connect From168 RT64.in as Connection6930
            connect VZERO.in DROOP_CONTROLLER1.OUT_V0 as Connection6931
            connect VRMS.in DROOP_CONTROLLER1.OUT_VRMS as Connection6932
            connect RT73.out DROOP_CONTROLLER1.IN_KI as Connection6940
            connect RT72.out DROOP_CONTROLLER1.IN_KP as Connection6941
            connect RT71.out DROOP_CONTROLLER1.IN_KV as Connection6942
            connect RT70.out DROOP_CONTROLLER1.IN_V_PCC as Connection6943
            connect From141 VOLTAGE_CONTROLLER.IN_V_REF as Connection6985
            connect Constant20.out VOLTAGE_CONTROLLER.IN_OMEGA_REF as Connection6995
            connect RT83.out DROOP_CONTROLLER2.IN_MICROGRID_STATUS as Connection6964
            connect RT83.in From175 as Connection6965
            connect RT81.out DROOP_CONTROLLER2.IN_Q0 as Connection6972
            connect RT81.in From173 as Connection6973
            connect RT80.out DROOP_CONTROLLER2.IN_P0 as Connection6974
            connect From174 RT80.in as Connection6975
            connect QF.in DROOP_CONTROLLER2.OUT_QF as Connection6980
            connect PF.in DROOP_CONTROLLER2.OUT_PF as Connection6981
            connect Goto146 Junction113 as Connection6982
            connect Junction113 DROOP_CONTROLLER2.OUT_V as Connection6983
            connect VDROOP.in Junction113 as Connection6984
            connect Constant19.out DROOP_CONTROLLER2.IN_ENABLE as Connection6988
            connect From169 DROOP_CONTROLLER2.IN_V_DIR as Connection6989
            connect From170 DROOP_CONTROLLER2.IN_V_QUAD as Connection6990
            connect From171 DROOP_CONTROLLER2.IN_I_DIR as Connection6991
            connect From172 DROOP_CONTROLLER2.IN_I_QUAD as Connection6992
            connect KV.out DROOP_CONTROLLER2.IN_KV as Connection6993
            connect KI.out DROOP_CONTROLLER2.IN_KI as Connection6994
            connect VDRMS.in DROOP_CONTROLLER2.OUT_VRMS as Connection6996
            connect THETA.in DROOP_CONTROLLER2.OUT_THETA as Connection6997
        }
        [
            position = 8448, 7768
            size = 72, 120
        ]

        component Subsystem VSC1 {
            layout = dynamic
            component "core/Resistor" R2 {
                resistance = "VSC1_RD"
            }
            [
                position = 10232, 7200
                rotation = right
                hide_name = True
            ]

            component "core/Voltage Measurement" VC {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10296, 7200
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" IL2 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10376, 7056
                size = 64, 32
            ]

            component "core/Inductor" L6 {
                inductance = "VSC1_LF"
                signal_access = "Inherit"
            }
            [
                position = 9960, 7056
                hide_name = True
            ]

            component "core/Voltage Source" Vdc {
                init_const_value = "VSC1_VDC"
            }
            [
                position = 9688, 7176
                rotation = right
            ]

            component "core/Capacitor" C2 {
                capacitance = "VSC1_C"
                signal_access = "Inherit"
            }
            [
                position = 10232, 7112
                rotation = right
                hide_name = True
            ]

            component "core/Current Measurement" IL1 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10160, 7056
                size = 64, 32
            ]

            component "core/Resistor" R3 {
                resistance = "1e-3"
            }
            [
                position = 9688, 7096
                rotation = right
                hide_name = True
            ]

            component "core/Single-phase Meter" Meter {
                enable_out = "False"
                execution_rate = "TS_20KHZ"
                fgrid = "60.0"
                n_cycles = "1"
            }
            [
                position = 10568, 7056
                size = 80, 80
            ]

            component "core/Probe" VSC1_COM {
            }
            [
                position = 9992, 6944
                rotation = down
                scale = -1, 1
            ]

            component "core/Bus Join" "Bus Join1" {
                inputs = "3"
            }
            [
                position = 9904, 6944
            ]

            component "core/Single Phase Inverter" "GRID FORMING" {
                carr_ph_offset = "[0.0, 0.0]"
                carrier_freq = "10e3"
                ctrl_src = "Internal modulator"
                execution_rate = "TS_01MHZ"
                fvd_def_method = "LUT"
                load_mode = "on either"
                signal_access = "Inherit"
            }
            [
                position = 9824, 7152
                size = 127, 256
            ]

            component "core/C function" SOGI_QSG {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;

// Current SOGI
struct SOGIqsg i_sogi;
float i_alpha = 0;
float i_beta = 0;
float i_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\1phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.2, 0.02);

// Current SOGI Variables
i_alpha = 0;
i_beta = 0;
i_freq = 60;
// Current SOGI Initialization
SOGIInit(&i_sogi, i_freq, 0.6, 0.02);
/*End code section*/"
                input_terminals = "real IN_VGRID;real IN_IL2;"
                input_terminals_dimensions = "1;1"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
//Execução da Rotina do SOGI para a Tensão
executeSOGI(&v_sogi, IN_VGRID, &v_alpha, &v_beta, &v_freq);
//Execução da Rotina do SOGI para a Corrente
executeSOGI(&i_sogi, IN_IL2, &i_alpha, &i_beta, &i_freq);
//Atribuição dos valores as saídas do bloco
OUT_V = v_alpha;
OUT_V_QUAD = v_beta;
OUT_I = i_alpha;
OUT_I_QUAD = i_beta;
OUT_OMEGA = v_freq;
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_V_QUAD;real OUT_I;real OUT_I_QUAD;real OUT_OMEGA;"
                output_terminals_dimensions = "1;1;1;1;1"
                output_terminals_feedthrough = "True;True;True;True;True"
                output_terminals_show_labels = "False;False;False;False;False"
            }
            [
                position = 9296, 7656
                size = 120, 312
            ]

            component "core/Rate Transition" RT42 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9176, 7792
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT43 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9176, 7520
                hide_name = True
                size = 32, 32
            ]

            component "core/Resistor" R4 {
                resistance = "VSC1_RF"
            }
            [
                position = 10056, 7056
                hide_name = True
            ]

            component "core/C function" VOLTAGE_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Ressonant Controller Struct redeclaration
struct ResonantController {
  float sampling_time;
  float kp;
  float zero_dumping;
  float pole_dumping;
  float omega0;
  float aux_4ts;
  float aux_a;
  float k1;
  float k2;
  float k3;
  float k4;
  float k5;
  float err_kminus1;
  float err_kminus2;
  float u_kminus1;
  float u_kminus2;
};

// RessonantController general variables
float u_bounded = 0;
float u = 0;
float ref0 = 0;

// ResonantController variables (1*60Hz)
struct ResonantController rc0;
float u0 = 0;
float err0 = 0;

// ResonantController variables (3*60Hz)
struct ResonantController rc3;
float u3 = 0;
float err3 = 0;

// ResonantController variables (5*60Hz)
struct ResonantController rc5;
float u5 = 0;
float err5 = 0;

// Constants declaration
float TWOPI = 0;
float omega0 = 0;
float TS_10KHZ = 0;
float SQRT2 = 0;
float U_BOUNDARY = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_resonant_control.dll"
                dll_file_path_full = "C:\projetos\single_phase_microgrid\output\VHIL\lib_resonant_control.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\resonant_control.h"
                h_file_path_full = "C:\projetos\single_phase_microgrid\src\resonant_control.h"
                init_fnc = "/*Begin code section*/
// Auxiliary variables
TWOPI = 6.2831;
omega0 = TWOPI * 60;
TS_10KHZ = 0.0001;
SQRT2 = 1.41421356237;
U_BOUNDARY = 200;

// RessonantController general variables
u_bounded = 0;
u = 0;
ref0 = 0;

// ResonantController variables (1*60 Hz)
u0 = 0;
err0 = 0;

// ResonantController variables (3*60 Hz)
u3 = 0;
err3 = 0;

// ResonantController variables (5*60 Hz)
u5 = 0;
err5 = 0;

// ResonantController initialization
resonantControlInitMatlab(&rc0, 4.753711597365024e-01, -7.994286999974808e-01, 3.246258254171082e-01, -1.998571749993702e+00, 9.999924628840264e-01);
///resonantControlInitMatlab(&rc0, 5.301484638946010e-01, -9.992858749968512e-01, 4.698477675474124e-01, -1.998571749993702e+00, 9.999924628840264e-01);
/*End code section*/"
                input_terminals = "real IN_V_REF;real IN_VC;real IN_VL_DROP;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True"
                input_terminals_show_labels = "False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // Voltage reference update
    ref0 = IN_V_REF - IN_VL_DROP;
    // Resonant controller execution
    executeResonant(&rc0, ref0, IN_VC, &u0, &err0);
    // Sum of control actions
    u = u0;
    // Output values
    OUT_V_CTRL = u;
    OUT_V_REF = ref0;
}else{
    // Output values
    OUT_V_CTRL = 0;
    OUT_V_REF = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V_CTRL;real OUT_V_REF;"
                output_terminals_dimensions = "inherit;inherit"
                output_terminals_feedthrough = "True;True"
                output_terminals_show_labels = "False;False"
            }
            [
                position = 10928, 7720
                size = 120, 440
            ]

            component "core/Rate Transition" RT19 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10816, 7656
                hide_name = True
                size = 32, 32
            ]

            component "core/C function" CURRENT_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Proportional Controller Variables
float err = 0;
float u = 0;
float u0 = 0;
float u_bounded = 0;

// Proportional Controller Constants
float KP = 0;
float U_BOUNDARY = 0;
/*End code section*/"
                execution_rate = "TS_20KHZ"
                init_fnc = "/*Begin code section*/
// Proportional Controller Variables
err = 0;
u = 0;
u0 = 0;
u_bounded = 0;

// Proportional Controller Constants
KP = 8;
U_BOUNDARY = 500;
/*End code section*/"
                input_terminals = "real IN_UV;real IN_IL1;real IN_MICROGRID_STATUS;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True"
                input_terminals_show_labels = "False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // Proportional Controller
    err = IN_UV - IN_IL1;
    u0 = KP * err + IN_MICROGRID_STATUS;
    // Control action
    u = u0;
    // Voltage control output limitation
    u_bounded = u;
    if( (u*u)/sqrt(u*u) >= U_BOUNDARY){
        u_bounded = U_BOUNDARY * u / sqrt(u*u);
    }
    // Output values
    OUT_PWMA = +u_bounded/U_BOUNDARY;
    OUT_PWMB = -u_bounded/U_BOUNDARY;
}else{
    // Output values
    OUT_PWMA = 0;
    OUT_PWMB = 0;
}
/*End code section*/"
                output_terminals = "real OUT_PWMA;real OUT_PWMB;"
                output_terminals_dimensions = "inherit;inherit"
                output_terminals_feedthrough = "True;True"
                output_terminals_show_labels = "False;False"
            }
            [
                position = 11472, 7720
                size = 120, 440
            ]

            component "core/Rate Transition" RT30 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11360, 7528
                hide_name = True
                size = 32, 32
            ]

            component "core/Constant" Constant13 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10672, 7912
                hide_name = True
            ]

            component "core/Constant" Constant14 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11216, 7912
                hide_name = True
            ]

            component "core/Constant" Constant15 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 9696, 6992
                hide_name = True
            ]

            component "core/Probe" REF_IL1 {
            }
            [
                position = 11120, 7592
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" REF_VC {
            }
            [
                position = 11120, 7848
                rotation = down
                scale = -1, -1
            ]

            component "core/Single Phase Core Coupling" "Core Coupling 2" {
                snb_type_i = "R1-C1"
            }
            [
                position = 10664, 7152
                hide_name = True
                size = 12, 256
            ]

            component "core/Bus Split" "Bus Split1" {
                outputs = "4"
            }
            [
                position = 8704, 7664
                hide_name = True
            ]

            component "core/Product" Product1 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 8824, 7528
            ]

            component "core/Product" Product2 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 8824, 7600
            ]

            component "core/Constant" Constant9 {
                execution_rate = "TS_20KHZ"
                value = "VSC1_S"
            }
            [
                position = 8632, 7528
                hide_name = True
            ]

            component "core/C function" APF {
                arb_defs = "/*Begin code section*/
// All Pass Filter Struct definition
struct AllPassFilter
{
    // general
    float sampling_time;
    float phase_shift;
    float omega;
    float tau;
    // recurrence equation gains
    float phi1;
    float phi2;
    float phi3;
    float phi4;
    float phi5;
    // previous interest variables
    float input_kminus1;
    float input_kminus2;
    float output_kminus1;
    float output_kminus2;
};

// All Pass Filter Constants
const float TS = 0.0001;
const float PHI = 2.192133540504878e-01;
const float OMEGA = 3.769911184307752e+02;
const float TAU = 8.333333333333334e-04;

// Struct declaration
struct AllPassFilter apf;

// All Pass Filter Variables
float output = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_all_pass_filter.dll"
                dll_file_path_full = "C:\projetos\single_phase_microgrid\output\VHIL\lib_all_pass_filter.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\all_pass_filter.h"
                h_file_path_full = "C:\projetos\single_phase_microgrid\src\all_pass_filter.h"
                init_fnc = "/*Begin code section*/
// Struct declaration
initAllPassFilter(&apf, TS, PHI, OMEGA, TAU);
// All Pass Filter Variables
output = 0;
/*End code section*/"
                input_terminals = "real IN_IL2_F;"
                input_terminals_dimensions = "inherit"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "False"
                output_fnc = "/*Begin code section*/
// All Pass Filter execution
executeAllPassFilter(&apf, IN_IL2_F, &output);

// Handle Output
OUT_IL2_PC = output;
/*End code section*/"
                output_terminals = "real OUT_IL2_PC;"
                output_terminals_dimensions = "inherit"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10424, 7528
                hide_name = True
                size = 48, 48
            ]

            component "core/Probe" IL2_F {
            }
            [
                position = 10368, 7592
                rotation = left
                scale = -1, -1
            ]

            component "core/Probe" IL2_PC {
            }
            [
                position = 10480, 7592
                rotation = left
                scale = -1, -1
            ]

            component "core/C function" VIRTUAL_IMPEDANCE {
                add_src_path = "..\src"
                add_src_path_full = "C:\projetos\1phase_microgrid\src"
                arb_defs = "/*Begin code section*/
// Virtual Impedance Struct definition
struct VirtualImpedance
{
  // general
  float sampling_time;
  float inductance;
  float zeta;
  float omega_pole;
  // recurrence equation gains
  float phi1;
  float phi2;
  float phi3;
  float phi4;
  // previous interest variables
  float current_kminus1;
  float current_kminus2;
  float voltage_kminus1;
  float voltage_kminus2;
};

// Virtual Impedance Constants
const float TS = 0.0001;
const float INDUCTANCE = 1.25e-3;
const float ZETA = 1.0;
const float POLE = 1.570796326794897e4;

// Struct declaration
struct VirtualImpedance vz;

// Virtual Impedance  Variables
float output = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_virtual_impedance.dll"
                dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_virtual_impedance.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\virtual_impedance.h"
                h_file_path_full = "C:\projetos\1phase_microgrid\src\virtual_impedance.h"
                init_fnc = "/*Begin code section*/
// Struct initialization
initVirtualImpedance(&vz, TS, INDUCTANCE, ZETA, POLE);
// Virtual Impedance Variables
output = 0;
/*End code section*/"
                input_terminals = "real IN_IL2_PC;real IN_VIRTUAL_INDUCTANCE;"
                input_terminals_dimensions = "inherit;inherit"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
// Set inductance according to SCADA input
setInductance(&vz, 1e-3*IN_VIRTUAL_INDUCTANCE);
// Virtual Impedance execution
executeVirtualImpedance(&vz, IN_IL2_PC, &output);
// Handle Output
OUT_VL_DROP = output;
/*End code section*/"
                output_terminals = "real OUT_VL_DROP;"
                output_terminals_dimensions = "inherit"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10424, 7720
                hide_name = True
                size = 48, 48
            ]

            component "core/Probe" VL_DROP {
            }
            [
                position = 10480, 7784
                rotation = left
                scale = -1, -1
            ]

            component "core/SCADA Input" VZ {
                def_value = "1.25"
                execution_rate = "TS_10KHZ"
                max = "3"
                min = "0"
                signal_access = "Inherit"
                unit = "mH"
            }
            [
                position = 10096, 7768
            ]

            component "core/Advanced Low-Pass Filter" LPF {
                N = "2"
                apb = "3"
                execution_rate = "TS_10KHZ"
                fc = "300"
                fc_combo = "External"
                type_combo = "Butterworth"
            }
            [
                position = 10312, 7528
                size = 48, 48
            ]

            component "core/Rate Transition" RT61 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10240, 7520
                hide_name = True
                size = 32, 32
            ]

            component "core/SCADA Input" FC {
                def_value = "300"
                execution_rate = "TS_10KHZ"
                max = "1000"
                min = "120"
                signal_access = "Inherit"
                unit = "Hz"
            }
            [
                position = 10096, 7576
            ]

            component "core/C function" DROOP_CONTROLLER2 {
                arb_defs = "/*Begin code section*/
// Constant definitions
const float VZERO = 220;
const float WZERO = 376.9911;
const float DELTA_V = 22;
const float DELTA_W = 18.8495559215;
const float TWOPI = 6.2831;
const float TS_10KHZ = 0.0001;
const float WC = 75.3982236862;
const int ISLANDED = 1;
const int TIED = 0;

// Structs redefinition
struct ImprovedDroop
{
    // general
    float sampling_time;

    // variables to implement first order low pass filter
    float cutoff_frequency;
    float phi1;
    float phi2;
    float phi3;
    // for active power
    float p_kminus1;
    float pf_kminus1;
    // for reactive power
    float q_kminus1;
    float qf_kminus1;

    // classical droop variables
    float p_max;
    float q_max;
    float p0;
    float q0;
    float v0;
    float w0;
    float m;
    float n;

    // improved droop variables
    float ki;
    float kv;
    int is_islanded;

    // integrator variables
    float phi_integral;
    // for voltage integration
    float vin_kminus1;
    float vout_kminus1;
    // for frequency integration
    float w_kminus1;
    float theta_kminus1;
};

// Structs declaration
struct ImprovedDroop droop;

// Droop Controller variables
float v = 0;
float p = 0;
float q = 0;
float p_ref = 0;
float q_ref = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_improved_droop.dll"
                dll_file_path_full = "C:\projetos\single_phase_microgrid\output\VHIL\lib_improved_droop.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\improved_droop.h"
                h_file_path_full = "C:\projetos\single_phase_microgrid\src\improved_droop.h"
                init_fnc = "/*Begin code section*/
// Droop variables
v = 0;
p = 0;
q = 0;
p_ref = 0;
q_ref = 0;
// Controllers initialization
initDroop(&droop, TS_10KHZ, VZERO, WZERO, 15000, 15000, DELTA_V, DELTA_W, WC, 25, 0.01);
/*End code section*/"
                input_terminals = "real IN_V_DIR;real IN_V_QUAD;real IN_I_DIR;real IN_I_QUAD;real IN_P0;real IN_Q0;real IN_KV;real IN_KI;real IN_MICROGRID_STATUS;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False;False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    if(IN_MICROGRID_STATUS == 1){
        // Set status to tied
        setStatus(&droop, TIED);
        // Active power ramp
        if(IN_P0 > p_ref) p_ref += 2;
        if(IN_P0 < p_ref) p_ref -= 2;
            
        // Reactive power ramp
        if(IN_Q0 > q_ref) q_ref += 2;
        if(IN_Q0 < q_ref) q_ref -= 2;
            
        // Set new power reference
        setP0(&droop, p_ref);
        setQ0(&droop, q_ref);
        
    }else{
        // Set status to islanded
        setStatus(&droop, ISLANDED);
        
        // Set power reference to zero
        setP0(&droop, 0);
        setQ0(&droop, 0);
    }
    
    // Droop controller execution
    executeDroop(&droop, IN_V_DIR, IN_V_QUAD, IN_I_DIR, IN_I_QUAD, &v, &p, &q);
    
    // Set Ki
    setKi(&droop, IN_KI);
    
    // Set Kv
    setKv(&droop, IN_KV);
    
    // Output values
    OUT_V = v;
    OUT_PF = p;
    OUT_QF = q;
}else{
    // Output values
    OUT_V = 0;
    OUT_PF = 0;
    OUT_QF = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_PF;real OUT_QF;"
                output_terminals_dimensions = "inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "False;False;False"
            }
            [
                position = 9824, 7880
                hide_name = True
                size = 120, 768
            ]

            component "core/Constant" Constant19 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9568, 8240
                hide_name = True
            ]

            component "core/Rate Transition" RT80 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9712, 7840
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT81 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9712, 7920
                hide_name = True
                size = 32, 32
            ]

            component "core/Probe" QF {
                signal_access = "Inherit"
                signal_type = "reactive power"
            }
            [
                position = 9968, 8240
                rotation = down
                scale = -1, 1
            ]

            component "core/SCADA Input" KV {
                unit = ""
            }
            [
                position = 9568, 8000
            ]

            component "core/Rate Transition" RT83 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9712, 8160
                hide_name = True
                size = 32, 32
            ]

            component "core/SCADA Input" KI {
                unit = ""
            }
            [
                position = 9568, 8080
            ]

            component "core/Probe" PF {
                signal_access = "Inherit"
                signal_type = "active power"
            }
            [
                position = 9968, 7880
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" V {
                signal_access = "Inherit"
                signal_type = "reactive power"
            }
            [
                position = 9968, 7592
                rotation = down
                scale = -1, 1
            ]

            component "core/C function" CURRENT_CONTROLLER1 {
                arb_defs = "/*Begin code section*/
// Proportional Controller Variables
float err = 0;
float u = 0;
float u0 = 0;
float u_bounded = 0;

// Proportional Controller Constants
float KP = 0;
float U_BOUNDARY = 0;

float K_IL1 = 0;
float K_IL2 = 0;
float K_VC = 0;
/*End code section*/"
                execution_rate = "TS_20KHZ"
                init_fnc = "/*Begin code section*/
// Proportional Controller Variables
err = 0;
u = 0;
u0 = 0;
u_bounded = 0;

// Proportional Controller Constants
KP = 8;
U_BOUNDARY = 500;

K_IL1 = 2.067713809462751e+00;
K_IL2 = 0;
K_VC = 1.074308920836938e-01;
/*End code section*/"
                input_terminals = "real IN_UV;real IN_IL1;real IN_VC;real IN_IO;real IN_KP;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // Proportional Controller
    err = IN_UV - IN_IL1;
    u0 = IN_KP * err;
    // Control action
    //u = u0 - 2.0937 * IN_IL1 - 0.4460 * IN_VC;
    u = u0 - K_IL1 * IN_IL1 - K_IL2 * IN_IO - K_VC * IN_VC; 
    // Voltage control output limitation
    u_bounded = u;
    if( (u*u)/sqrt(u*u) >= U_BOUNDARY){
        u_bounded = U_BOUNDARY * u / sqrt(u*u);
    }
    // Output values
    OUT_PWMA = +u_bounded/U_BOUNDARY;
    OUT_PWMB = -u_bounded/U_BOUNDARY;
}else{
    // Output values
    OUT_PWMA = 0;
    OUT_PWMB = 0;
}
/*End code section*/"
                output_terminals = "real OUT_PWMA;real OUT_PWMB;"
                output_terminals_dimensions = "inherit;inherit"
                output_terminals_feedthrough = "True;True"
                output_terminals_show_labels = "False;False"
            }
            [
                position = 11472, 8288
                size = 120, 440
            ]

            component "core/Rate Transition" RT84 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11360, 8088
                hide_name = True
                size = 32, 32
            ]

            component "core/Constant" Constant20 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11216, 8488
                hide_name = True
            ]

            component "core/SCADA Input" KP {
                execution_rate = "TS_20KHZ"
                max = "50"
                min = "0"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 11216, 8408
            ]

            port L {
                position = right:auto
                kind = pe
            }
            [
                position = 10720, 7056
                scale = -1, 1
            ]

            port N {
                position = right:auto
                kind = pe
            }
            [
                position = 10720, 7248
                scale = -1, 1
            ]

            port "Info in" {
                position = left:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 8632, 7672
            ]

            tag From11 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9712, 6896
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "IL2"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10376, 6984
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From8 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9712, 6944
                hide_name = True
                size = 60, 20
            ]

            tag Goto13 {
                value = "VC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10376, 7200
                hide_name = True
                size = 60, 20
            ]

            tag Goto10 {
                value = "IL1"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10160, 6984
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From95 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9064, 7520
                hide_name = True
                size = 108, 20
            ]

            tag From96 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9064, 7792
                hide_name = True
                size = 108, 20
            ]

            tag Goto107 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7528
                hide_name = True
                size = 108, 20
            ]

            tag Goto108 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7592
                hide_name = True
                size = 108, 20
            ]

            tag Goto109 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7656
                hide_name = True
                size = 108, 20
            ]

            tag Goto110 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7720
                hide_name = True
                size = 108, 20
            ]

            tag Goto111 {
                value = "OMEGA_VSC1"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7784
                hide_name = True
                size = 108, 20
            ]

            tag Goto117 {
                value = "UV"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11080, 7520
                hide_name = True
                size = 108, 20
            ]

            tag Goto118 {
                value = "VREF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11080, 7920
                hide_name = True
                size = 108, 20
            ]

            tag Goto121 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11624, 7520
                hide_name = True
                size = 108, 20
            ]

            tag Goto122 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11624, 7920
                hide_name = True
                size = 108, 20
            ]

            tag From113 {
                value = "IL1"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11256, 7656
                hide_name = True
                size = 108, 20
            ]

            tag From115 {
                value = "UV"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11256, 7528
                hide_name = True
                size = 108, 20
            ]

            tag From141 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10712, 7528
                hide_name = True
                size = 108, 20
            ]

            tag From108 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10712, 7656
                hide_name = True
                size = 108, 20
            ]

            tag From144 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11256, 7784
                hide_name = True
                size = 108, 20
            ]

            tag Goto14 {
                value = "P0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8928, 7528
                hide_name = True
                size = 60, 20
            ]

            tag Goto15 {
                value = "Q0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8928, 7600
                hide_name = True
                size = 60, 20
            ]

            tag Goto18 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8928, 7664
                hide_name = True
                size = 60, 20
            ]

            tag Goto132 {
                value = "VRMS_VPCC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8928, 7696
                hide_name = True
                size = 60, 20
            ]

            tag Goto142 {
                value = "IL2_PC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10568, 7528
                hide_name = True
                size = 108, 20
            ]

            tag From160 {
                value = "VL_DROP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10712, 7784
                hide_name = True
                size = 108, 20
            ]

            tag Goto143 {
                value = "VL_DROP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10568, 7720
                hide_name = True
                size = 108, 20
            ]

            tag From161 {
                value = "IL2_PC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10136, 7712
                hide_name = True
                size = 108, 20
            ]

            tag From143 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10136, 7520
                hide_name = True
                size = 108, 20
            ]

            tag Goto146 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9976, 7520
                hide_name = True
                size = 108, 20
            ]

            tag From169 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7520
                hide_name = True
                size = 108, 20
            ]

            tag From170 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7600
                hide_name = True
                size = 108, 20
            ]

            tag From171 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7680
                hide_name = True
                size = 108, 20
            ]

            tag From172 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7760
                hide_name = True
                size = 108, 20
            ]

            tag From173 {
                value = "Q0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9584, 7920
                hide_name = True
                size = 60, 20
            ]

            tag From174 {
                value = "P0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9584, 7840
                hide_name = True
                size = 60, 20
            ]

            tag From175 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9584, 8160
                hide_name = True
                size = 60, 20
            ]

            tag Goto147 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11624, 8088
                hide_name = True
                size = 108, 20
            ]

            tag Goto148 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11624, 8488
                hide_name = True
                size = 108, 20
            ]

            tag From176 {
                value = "IL1"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11256, 8168
                hide_name = True
                size = 108, 20
            ]

            tag From177 {
                value = "UV"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11256, 8088
                hide_name = True
                size = 108, 20
            ]

            tag From178 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11256, 8248
                hide_name = True
                size = 108, 20
            ]

            tag From179 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11256, 8328
                hide_name = True
                size = 108, 20
            ]

            junction Junction87 pe
            [
                position = 10232, 7056
            ]

            junction Junction88 pe
            [
                position = 10296, 7056
            ]

            junction Junction95 sp
            [
                position = 9824, 6944
            ]

            junction Junction96 sp
            [
                position = 9840, 6960
            ]

            junction Junction97 pe
            [
                position = 10232, 7248
            ]

            junction Junction100 sp
            [
                position = 9808, 6992
            ]

            junction Junction101 sp
            [
                position = 11008, 7520
            ]

            junction Junction104 pe
            [
                position = 10296, 7248
            ]

            junction Junction105 pe
            [
                position = 10568, 7248
            ]

            junction Junction81 sp
            [
                position = 8776, 7520
            ]

            junction Junction109 sp
            [
                position = 10480, 7528
            ]

            junction Junction111 sp
            [
                position = 10480, 7720
            ]

            junction Junction112 sp
            [
                position = 10368, 7528
            ]

            junction Junction113 sp
            [
                position = 9904, 7520
            ]

            junction Junction114 sp
            [
                position = 11008, 7920
            ]

            comment Comment27 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">CONTROL </span></p></body></html> ENDCOMMENT 
            [
                position = 9952, 7368
            ]

            comment Comment28 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">POWER SYSTEM</span> </p></body></html> ENDCOMMENT 
            [
                position = 9912, 6784
            ]

            comment Comment16 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">PHASE LOCKED LOOP</p></body></html> ENDCOMMENT 
            [
                position = 9200, 7456
            ]

            comment Comment19 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VOLTAGE CONTROLLER </p></body></html> ENDCOMMENT 
            [
                position = 10832, 7456
            ]

            comment Comment20 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">CURRENT CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 11360, 7456
            ]

            comment Comment23 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[0] = P0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[1] = Q0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[2] = STS_STATUS   </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[3] = VRMS_PCC</p></body></html> ENDCOMMENT 
            [
                position = 8696, 7736
            ]

            comment Comment24 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">HANDLE INFO INPUT</p></body></html> ENDCOMMENT 
            [
                position = 8704, 7456
            ]

            comment Comment30 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">ALL PASS FILTER</p></body></html> ENDCOMMENT 
            [
                position = 10352, 7456
            ]

            comment Comment32 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VIRTUAL IMPEDANCE</p></body></html> ENDCOMMENT 
            [
                position = 10336, 7640
            ]

            comment Comment34 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 9728, 7456
            ]

            comment Comment35 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">CURRENT CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 11360, 8024
            ]

            connect R2.p_node C2.n_node as Connection553
            connect VC.out Goto13 as Connection499
            connect Vdc.p_node R3.n_node as Connection569
            connect IL1.out Goto10 as Connection713
            connect IL2.out Goto1 as Connection721
            connect IL1.n_node Junction87 as Connection726
            connect Junction87 C2.p_node as Connection727
            [
                breakpoints = 10232, 7056
            ]
            connect VC.p_node Junction88 as Connection729
            connect Junction88 Junction87 as Connection730
            connect IL2.p_node Junction88 as Connection731
            connect "Bus Join1.out" VSC1_COM.in as Connection749
            connect "GRID FORMING.neg_out" Vdc.n_node as Connection757
            connect R3.p_node "GRID FORMING.pos_out" as Connection758
            connect From8 Junction95 as Connection773
            [
                breakpoints = 9816, 6944; 9816, 6944
            ]
            connect Junction95 "Bus Join1.in1" as Connection775
            connect From11 Junction96 as Connection776
            [
                breakpoints = 9832, 6896; 9840, 6896
            ]
            connect "Bus Join1.in2" Junction96 as Connection778
            connect L6.p_node "GRID FORMING.a_in" as Connection788
            connect R2.n_node Junction97 as Connection789
            connect "GRID FORMING.b_in" Junction97 as Connection791
            connect Junction95 "GRID FORMING.InA" as Connection794
            connect Junction96 "GRID FORMING.InB" as Connection795
            connect Goto107 SOGI_QSG.OUT_V as Connection6532
            connect Goto108 SOGI_QSG.OUT_V_QUAD as Connection6533
            connect Goto109 SOGI_QSG.OUT_I as Connection6534
            connect SOGI_QSG.OUT_I_QUAD Goto110 as Connection6535
            connect Goto111 SOGI_QSG.OUT_OMEGA as Connection6536
            connect RT42.out SOGI_QSG.IN_IL2 as Connection6764
            connect RT42.in From96 as Connection6765
            connect From95 RT43.in as Connection6766
            connect RT43.out SOGI_QSG.IN_VGRID as Connection6767
            connect L6.n_node R4.p_node as Connection6768
            connect IL1.p_node R4.n_node as Connection6769
            connect RT19.out VOLTAGE_CONTROLLER.IN_VC as Connection6551
            connect Goto122 CURRENT_CONTROLLER.OUT_PWMB as Connection6568
            connect RT30.out CURRENT_CONTROLLER.IN_UV as Connection6585
            connect "Bus Join1.in" Junction100 as Connection6779
            connect Junction100 "GRID FORMING.En" as Connection6780
            [
                breakpoints = 9808, 6992
            ]
            connect Constant15.out Junction100 as Connection6781
            connect Constant14.out CURRENT_CONTROLLER.IN_ENABLE as Connection6784
            connect Goto117 Junction101 as Connection6785
            connect Junction101 VOLTAGE_CONTROLLER.OUT_V_CTRL as Connection6786
            connect REF_IL1.in Junction101 as Connection6787
            connect Constant13.out VOLTAGE_CONTROLLER.IN_ENABLE as Connection6798
            connect From108 RT19.in as Connection6807
            connect From113 CURRENT_CONTROLLER.IN_IL1 as Connection6808
            connect IL2.n_node Meter.in as Connection6811
            connect Junction97 Junction104 as Connection6812
            [
                breakpoints = 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248
            ]
            connect Junction104 VC.n_node as Connection6813
            [
                breakpoints = 10296, 7248; 10296, 7248; 10296, 7248; 10296, 7248; 10296, 7248
            ]
            connect Meter.N Junction105 as Connection6814
            connect Junction104 Junction105 as Connection6816
            connect From144 CURRENT_CONTROLLER.IN_MICROGRID_STATUS as Connection6817
            connect RT30.in From115 as Connection6818
            connect Meter.out "Core Coupling 2.a_in" as Connection6832
            connect "Core Coupling 2.a_out" L as Connection6833
            connect Junction105 "Core Coupling 2.b_in" as Connection6834
            connect "Core Coupling 2.b_out" N as Connection6835
            connect Goto121 CURRENT_CONTROLLER.OUT_PWMA as Connection6836
            [
                breakpoints = 11552, 7520; 11552, 7520
            ]
            connect Goto18 "Bus Split1.out2" as Connection622
            [
                breakpoints = 8896, 7664; 8880, 7664; 8896, 7664; 8816, 7664; 8816, 7672; 8744, 7672
            ]
            connect Goto14 Product1.out as Connection632
            connect Product2.out Goto15 as Connection633
            connect Product1.in Junction81 as Connection684
            connect Junction81 Product2.in as Connection685
            [
                breakpoints = 8776, 7520; 8776, 7592
            ]
            connect Constant9.out Junction81 as Connection686
            connect "Bus Split1.out1" Product2.in1 as Connection6840
            [
                breakpoints = 8776, 7640; 8776, 7608
            ]
            connect "Bus Split1.out" Product1.in1 as Connection6841
            [
                breakpoints = 8760, 7624; 8760, 7536
            ]
            connect "Info in" "Bus Split1.in" as Connection6843
            connect Goto132 "Bus Split1.out3" as Connection6844
            [
                breakpoints = 8880, 7696; 8816, 7696; 8816, 7688
            ]
            connect APF.OUT_IL2_PC Junction109 as Connection6891
            connect Junction109 Goto142 as Connection6892
            connect IL2_PC.in Junction109 as Connection6893
            connect VIRTUAL_IMPEDANCE.OUT_VL_DROP Junction111 as Connection6899
            connect Junction111 Goto143 as Connection6900
            connect VL_DROP.in Junction111 as Connection6901
            connect From160 VOLTAGE_CONTROLLER.IN_VL_DROP as Connection6904
            connect From161 VIRTUAL_IMPEDANCE.IN_IL2_PC as Connection6905
            connect VZ.out VIRTUAL_IMPEDANCE.IN_VIRTUAL_INDUCTANCE as Connection6906
            [
                breakpoints = 10280, 7768; 10280, 7728
            ]
            connect RT61.out LPF.in as Connection6895
            connect RT61.in From143 as Connection6896
            connect APF.IN_IL2_F Junction112 as Connection6909
            connect Junction112 IL2_F.in as Connection6910
            [
                breakpoints = 10368, 7528
            ]
            connect LPF.out Junction112 as Connection6911
            connect FC.out LPF.fc_input as Connection6912
            connect From141 VOLTAGE_CONTROLLER.IN_V_REF as Connection6985
            connect RT83.out DROOP_CONTROLLER2.IN_MICROGRID_STATUS as Connection6964
            connect RT83.in From175 as Connection6965
            connect RT81.out DROOP_CONTROLLER2.IN_Q0 as Connection6972
            connect RT81.in From173 as Connection6973
            connect RT80.out DROOP_CONTROLLER2.IN_P0 as Connection6974
            connect From174 RT80.in as Connection6975
            connect Goto146 Junction113 as Connection6982
            connect Junction113 DROOP_CONTROLLER2.OUT_V as Connection6983
            connect V.in Junction113 as Connection6984
            connect Constant19.out DROOP_CONTROLLER2.IN_ENABLE as Connection6988
            connect From169 DROOP_CONTROLLER2.IN_V_DIR as Connection6989
            connect From170 DROOP_CONTROLLER2.IN_V_QUAD as Connection6990
            connect From171 DROOP_CONTROLLER2.IN_I_DIR as Connection6991
            connect From172 DROOP_CONTROLLER2.IN_I_QUAD as Connection6992
            connect KV.out DROOP_CONTROLLER2.IN_KV as Connection6993
            connect KI.out DROOP_CONTROLLER2.IN_KI as Connection6994
            connect QF.in DROOP_CONTROLLER2.OUT_QF as Connection6996
            connect PF.in DROOP_CONTROLLER2.OUT_PF as Connection6997
            connect VOLTAGE_CONTROLLER.OUT_V_REF Junction114 as Connection6999
            connect Junction114 Goto118 as Connection7000
            connect REF_VC.in Junction114 as Connection7001
            connect Goto148 CURRENT_CONTROLLER1.OUT_PWMB as Connection7002
            connect RT84.out CURRENT_CONTROLLER1.IN_UV as Connection7003
            connect Constant20.out CURRENT_CONTROLLER1.IN_ENABLE as Connection7004
            connect From176 CURRENT_CONTROLLER1.IN_IL1 as Connection7005
            connect From178 CURRENT_CONTROLLER1.IN_VC as Connection7006
            connect RT84.in From177 as Connection7007
            connect Goto147 CURRENT_CONTROLLER1.OUT_PWMA as Connection7008
            [
                breakpoints = 11552, 8088; 11552, 8088
            ]
            connect KP.out CURRENT_CONTROLLER1.IN_KP as Connection7009
            connect From179 CURRENT_CONTROLLER1.IN_IO as Connection7010
        }
        [
            position = 8224, 8032
            hide_name = True
            size = 72, 120
        ]

        component Subsystem VSC2 {
            layout = dynamic
            component "core/Resistor" R2 {
                resistance = "VSC1_RD"
            }
            [
                position = 10232, 7200
                rotation = right
                hide_name = True
            ]

            component "core/Voltage Measurement" VC {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10296, 7200
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" IL2 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10376, 7056
                size = 64, 32
            ]

            component "core/Inductor" L6 {
                inductance = "VSC1_LF"
                signal_access = "Inherit"
            }
            [
                position = 9960, 7056
                hide_name = True
            ]

            component "core/Voltage Source" Vdc {
                init_const_value = "VSC1_VDC"
            }
            [
                position = 9688, 7176
                rotation = right
            ]

            component "core/Capacitor" C2 {
                capacitance = "VSC1_C"
                signal_access = "Inherit"
            }
            [
                position = 10232, 7112
                rotation = right
                hide_name = True
            ]

            component "core/Current Measurement" IL1 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10160, 7056
                size = 64, 32
            ]

            component "core/Resistor" R3 {
                resistance = "1e-3"
            }
            [
                position = 9688, 7096
                rotation = right
                hide_name = True
            ]

            component "core/Single-phase Meter" Meter {
                enable_out = "False"
                execution_rate = "TS_20KHZ"
                fgrid = "60.0"
                n_cycles = "1"
            }
            [
                position = 10568, 7056
                size = 80, 80
            ]

            component "core/Probe" VSC1_COM {
            }
            [
                position = 9992, 6944
                rotation = down
                scale = -1, 1
            ]

            component "core/Bus Join" "Bus Join1" {
                inputs = "3"
            }
            [
                position = 9904, 6944
            ]

            component "core/Single Phase Inverter" "GRID FORMING" {
                carr_ph_offset = "[0.0, 0.0]"
                carrier_freq = "10e3"
                ctrl_src = "Internal modulator"
                execution_rate = "TS_01MHZ"
                fvd_def_method = "LUT"
                load_mode = "on either"
                signal_access = "Inherit"
            }
            [
                position = 9824, 7152
                size = 127, 256
            ]

            component "core/C function" SOGI_QSG {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;

// Current SOGI
struct SOGIqsg i_sogi;
float i_alpha = 0;
float i_beta = 0;
float i_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\1phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.2, 0.02);

// Current SOGI Variables
i_alpha = 0;
i_beta = 0;
i_freq = 60;
// Current SOGI Initialization
SOGIInit(&i_sogi, i_freq, 0.6, 0.02);
/*End code section*/"
                input_terminals = "real IN_VGRID;real IN_IL2;"
                input_terminals_dimensions = "1;1"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
//Execução da Rotina do SOGI para a Tensão
executeSOGI(&v_sogi, IN_VGRID, &v_alpha, &v_beta, &v_freq);
//Execução da Rotina do SOGI para a Corrente
executeSOGI(&i_sogi, IN_IL2, &i_alpha, &i_beta, &i_freq);
//Atribuição dos valores as saídas do bloco
OUT_V = v_alpha;
OUT_V_QUAD = v_beta;
OUT_I = i_alpha;
OUT_I_QUAD = i_beta;
OUT_OMEGA = v_freq;
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_V_QUAD;real OUT_I;real OUT_I_QUAD;real OUT_OMEGA;"
                output_terminals_dimensions = "1;1;1;1;1"
                output_terminals_feedthrough = "True;True;True;True;True"
                output_terminals_show_labels = "False;False;False;False;False"
            }
            [
                position = 9296, 7656
                size = 120, 312
            ]

            component "core/Rate Transition" RT42 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9176, 7792
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT43 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9176, 7520
                hide_name = True
                size = 32, 32
            ]

            component "core/Resistor" R4 {
                resistance = "VSC1_RF"
            }
            [
                position = 10056, 7056
                hide_name = True
            ]

            component "core/C function" VOLTAGE_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Ressonant Controller Struct redeclaration
struct ResonantController {
  float sampling_time;
  float kp;
  float zero_dumping;
  float pole_dumping;
  float omega0;
  float aux_4ts;
  float aux_a;
  float k1;
  float k2;
  float k3;
  float k4;
  float k5;
  float err_kminus1;
  float err_kminus2;
  float u_kminus1;
  float u_kminus2;
};

// RessonantController general variables
float u_bounded = 0;
float u = 0;
float ref0 = 0;

// ResonantController variables (1*60Hz)
struct ResonantController rc0;
float u0 = 0;
float err0 = 0;

// ResonantController variables (3*60Hz)
struct ResonantController rc3;
float u3 = 0;
float err3 = 0;

// ResonantController variables (5*60Hz)
struct ResonantController rc5;
float u5 = 0;
float err5 = 0;

// Constants declaration
float TWOPI = 0;
float omega0 = 0;
float TS_10KHZ = 0;
float SQRT2 = 0;
float U_BOUNDARY = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_resonant_control.dll"
                dll_file_path_full = "C:\projetos\single_phase_microgrid\output\VHIL\lib_resonant_control.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\resonant_control.h"
                h_file_path_full = "C:\projetos\single_phase_microgrid\src\resonant_control.h"
                init_fnc = "/*Begin code section*/
// Auxiliary variables
TWOPI = 6.2831;
omega0 = TWOPI * 60;
TS_10KHZ = 0.0001;
SQRT2 = 1.41421356237;
U_BOUNDARY = 200;

// RessonantController general variables
u_bounded = 0;
u = 0;
ref0 = 0;

// ResonantController variables (1*60 Hz)
u0 = 0;
err0 = 0;

// ResonantController variables (3*60 Hz)
u3 = 0;
err3 = 0;

// ResonantController variables (5*60 Hz)
u5 = 0;
err5 = 0;

// ResonantController initialization
resonantControlInitMatlab(&rc0, 4.753711597365024e-01, -7.994286999974808e-01, 3.246258254171082e-01, -1.998571749993702e+00, 9.999924628840264e-01);
///resonantControlInitMatlab(&rc0, 5.301484638946010e-01, -9.992858749968512e-01, 4.698477675474124e-01, -1.998571749993702e+00, 9.999924628840264e-01);
/*End code section*/"
                input_terminals = "real IN_V_REF;real IN_VC;real IN_VL_DROP;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True"
                input_terminals_show_labels = "False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // Voltage reference update
    ref0 = IN_V_REF - IN_VL_DROP;
    // Resonant controller execution
    executeResonant(&rc0, ref0, IN_VC, &u0, &err0);
    // Sum of control actions
    u = u0;
    // Output values
    OUT_V_CTRL = u;
    OUT_V_REF = ref0;
}else{
    // Output values
    OUT_V_CTRL = 0;
    OUT_V_REF = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V_CTRL;real OUT_V_REF;"
                output_terminals_dimensions = "inherit;inherit"
                output_terminals_feedthrough = "True;True"
                output_terminals_show_labels = "False;False"
            }
            [
                position = 10928, 7720
                size = 120, 440
            ]

            component "core/Rate Transition" RT19 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10816, 7656
                hide_name = True
                size = 32, 32
            ]

            component "core/C function" CURRENT_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Proportional Controller Variables
float err = 0;
float u = 0;
float u0 = 0;
float u_bounded = 0;

// Proportional Controller Constants
float KP = 0;
float U_BOUNDARY = 0;
/*End code section*/"
                execution_rate = "TS_20KHZ"
                init_fnc = "/*Begin code section*/
// Proportional Controller Variables
err = 0;
u = 0;
u0 = 0;
u_bounded = 0;

// Proportional Controller Constants
KP = 8;
U_BOUNDARY = 500;
/*End code section*/"
                input_terminals = "real IN_UV;real IN_IL1;real IN_MICROGRID_STATUS;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True"
                input_terminals_show_labels = "False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // Proportional Controller
    err = IN_UV - IN_IL1;
    u0 = KP * err + IN_MICROGRID_STATUS;
    // Control action
    u = u0;
    // Voltage control output limitation
    u_bounded = u;
    if( (u*u)/sqrt(u*u) >= U_BOUNDARY){
        u_bounded = U_BOUNDARY * u / sqrt(u*u);
    }
    // Output values
    OUT_PWMA = +u_bounded/U_BOUNDARY;
    OUT_PWMB = -u_bounded/U_BOUNDARY;
}else{
    // Output values
    OUT_PWMA = 0;
    OUT_PWMB = 0;
}
/*End code section*/"
                output_terminals = "real OUT_PWMA;real OUT_PWMB;"
                output_terminals_dimensions = "inherit;inherit"
                output_terminals_feedthrough = "True;True"
                output_terminals_show_labels = "False;False"
            }
            [
                position = 11472, 7720
                size = 120, 440
            ]

            component "core/Rate Transition" RT30 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11360, 7528
                hide_name = True
                size = 32, 32
            ]

            component "core/Constant" Constant13 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10672, 7912
                hide_name = True
            ]

            component "core/Constant" Constant14 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11216, 7912
                hide_name = True
            ]

            component "core/Constant" Constant15 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 9696, 6992
                hide_name = True
            ]

            component "core/Probe" REF_IL1 {
            }
            [
                position = 11120, 7592
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" REF_VC {
            }
            [
                position = 11120, 7848
                rotation = down
                scale = -1, -1
            ]

            component "core/Single Phase Core Coupling" "Core Coupling 2" {
                snb_type_i = "R1-C1"
            }
            [
                position = 10664, 7152
                hide_name = True
                size = 12, 256
            ]

            component "core/Bus Split" "Bus Split1" {
                outputs = "4"
            }
            [
                position = 8704, 7664
                hide_name = True
            ]

            component "core/Product" Product1 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 8824, 7528
            ]

            component "core/Product" Product2 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 8824, 7600
            ]

            component "core/Constant" Constant9 {
                execution_rate = "TS_20KHZ"
                value = "VSC1_S"
            }
            [
                position = 8632, 7528
                hide_name = True
            ]

            component "core/C function" APF {
                arb_defs = "/*Begin code section*/
// All Pass Filter Struct definition
struct AllPassFilter
{
    // general
    float sampling_time;
    float phase_shift;
    float omega;
    float tau;
    // recurrence equation gains
    float phi1;
    float phi2;
    float phi3;
    float phi4;
    float phi5;
    // previous interest variables
    float input_kminus1;
    float input_kminus2;
    float output_kminus1;
    float output_kminus2;
};

// All Pass Filter Constants
const float TS = 0.0001;
const float PHI = 2.192133540504878e-01;
const float OMEGA = 3.769911184307752e+02;
const float TAU = 8.333333333333334e-04;

// Struct declaration
struct AllPassFilter apf;

// All Pass Filter Variables
float output = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_all_pass_filter.dll"
                dll_file_path_full = "C:\projetos\single_phase_microgrid\output\VHIL\lib_all_pass_filter.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\all_pass_filter.h"
                h_file_path_full = "C:\projetos\single_phase_microgrid\src\all_pass_filter.h"
                init_fnc = "/*Begin code section*/
// Struct declaration
initAllPassFilter(&apf, TS, PHI, OMEGA, TAU);
// All Pass Filter Variables
output = 0;
/*End code section*/"
                input_terminals = "real IN_IL2_F;"
                input_terminals_dimensions = "inherit"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "False"
                output_fnc = "/*Begin code section*/
// All Pass Filter execution
executeAllPassFilter(&apf, IN_IL2_F, &output);

// Handle Output
OUT_IL2_PC = output;
/*End code section*/"
                output_terminals = "real OUT_IL2_PC;"
                output_terminals_dimensions = "inherit"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10424, 7528
                hide_name = True
                size = 48, 48
            ]

            component "core/Probe" IL2_F {
            }
            [
                position = 10368, 7592
                rotation = left
                scale = -1, -1
            ]

            component "core/Probe" IL2_PC {
            }
            [
                position = 10480, 7592
                rotation = left
                scale = -1, -1
            ]

            component "core/C function" VIRTUAL_IMPEDANCE {
                add_src_path = "..\src"
                add_src_path_full = "C:\projetos\1phase_microgrid\src"
                arb_defs = "/*Begin code section*/
// Virtual Impedance Struct definition
struct VirtualImpedance
{
  // general
  float sampling_time;
  float inductance;
  float zeta;
  float omega_pole;
  // recurrence equation gains
  float phi1;
  float phi2;
  float phi3;
  float phi4;
  // previous interest variables
  float current_kminus1;
  float current_kminus2;
  float voltage_kminus1;
  float voltage_kminus2;
};

// Virtual Impedance Constants
const float TS = 0.0001;
const float INDUCTANCE = 1.25e-3;
const float ZETA = 1.0;
const float POLE = 1.570796326794897e4;

// Struct declaration
struct VirtualImpedance vz;

// Virtual Impedance  Variables
float output = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_virtual_impedance.dll"
                dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_virtual_impedance.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\virtual_impedance.h"
                h_file_path_full = "C:\projetos\1phase_microgrid\src\virtual_impedance.h"
                init_fnc = "/*Begin code section*/
// Struct initialization
initVirtualImpedance(&vz, TS, INDUCTANCE, ZETA, POLE);
// Virtual Impedance Variables
output = 0;
/*End code section*/"
                input_terminals = "real IN_IL2_PC;real IN_VIRTUAL_INDUCTANCE;"
                input_terminals_dimensions = "inherit;inherit"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
// Set inductance according to SCADA input
setInductance(&vz, 1e-3*IN_VIRTUAL_INDUCTANCE);
// Virtual Impedance execution
executeVirtualImpedance(&vz, IN_IL2_PC, &output);
// Handle Output
OUT_VL_DROP = output;
/*End code section*/"
                output_terminals = "real OUT_VL_DROP;"
                output_terminals_dimensions = "inherit"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10424, 7720
                hide_name = True
                size = 48, 48
            ]

            component "core/Probe" VL_DROP {
            }
            [
                position = 10480, 7784
                rotation = left
                scale = -1, -1
            ]

            component "core/SCADA Input" VZ {
                def_value = "1.25"
                execution_rate = "TS_10KHZ"
                max = "3"
                min = "0"
                signal_access = "Inherit"
                unit = "mH"
            }
            [
                position = 10096, 7768
            ]

            component "core/Advanced Low-Pass Filter" LPF {
                N = "2"
                apb = "3"
                execution_rate = "TS_10KHZ"
                fc = "300"
                fc_combo = "External"
                type_combo = "Butterworth"
            }
            [
                position = 10312, 7528
                size = 48, 48
            ]

            component "core/Rate Transition" RT61 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10240, 7520
                hide_name = True
                size = 32, 32
            ]

            component "core/SCADA Input" FC {
                def_value = "300"
                execution_rate = "TS_10KHZ"
                max = "1000"
                min = "120"
                signal_access = "Inherit"
                unit = "Hz"
            }
            [
                position = 10096, 7576
            ]

            component "core/C function" DROOP_CONTROLLER2 {
                arb_defs = "/*Begin code section*/
// Constant definitions
const float VZERO = 220;
const float WZERO = 376.9911;
const float DELTA_V = 22;
const float DELTA_W = 18.8495559215;
const float TWOPI = 6.2831;
const float TS_10KHZ = 0.0001;
const float WC = 75.3982236862;
const int ISLANDED = 1;
const int TIED = 0;

// Structs redefinition
struct ImprovedDroop
{
    // general
    float sampling_time;

    // variables to implement first order low pass filter
    float cutoff_frequency;
    float phi1;
    float phi2;
    float phi3;
    // for active power
    float p_kminus1;
    float pf_kminus1;
    // for reactive power
    float q_kminus1;
    float qf_kminus1;

    // classical droop variables
    float p_max;
    float q_max;
    float p0;
    float q0;
    float v0;
    float w0;
    float m;
    float n;

    // improved droop variables
    float ki;
    float kv;
    int is_islanded;

    // integrator variables
    float phi_integral;
    // for voltage integration
    float vin_kminus1;
    float vout_kminus1;
    // for frequency integration
    float w_kminus1;
    float theta_kminus1;
};

// Structs declaration
struct ImprovedDroop droop;

// Droop Controller variables
float v = 0;
float p = 0;
float q = 0;
float p_ref = 0;
float q_ref = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_improved_droop.dll"
                dll_file_path_full = "C:\projetos\single_phase_microgrid\output\VHIL\lib_improved_droop.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\improved_droop.h"
                h_file_path_full = "C:\projetos\single_phase_microgrid\src\improved_droop.h"
                init_fnc = "/*Begin code section*/
// Droop variables
v = 0;
p = 0;
q = 0;
p_ref = 0;
q_ref = 0;
// Controllers initialization
initDroop(&droop, TS_10KHZ, VZERO, WZERO, 15000, 15000, DELTA_V, DELTA_W, WC, 25, 0.01);
/*End code section*/"
                input_terminals = "real IN_V_DIR;real IN_V_QUAD;real IN_I_DIR;real IN_I_QUAD;real IN_P0;real IN_Q0;real IN_KV;real IN_KI;real IN_MICROGRID_STATUS;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False;False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    if(IN_MICROGRID_STATUS == 1){
        // Set status to tied
        setStatus(&droop, TIED);
        // Active power ramp
        if(IN_P0 > p_ref) p_ref += 2;
        if(IN_P0 < p_ref) p_ref -= 2;
            
        // Reactive power ramp
        if(IN_Q0 > q_ref) q_ref += 2;
        if(IN_Q0 < q_ref) q_ref -= 2;
            
        // Set new power reference
        setP0(&droop, p_ref);
        setQ0(&droop, q_ref);
        
    }else{
        // Set status to islanded
        setStatus(&droop, ISLANDED);
        
        // Set power reference to zero
        setP0(&droop, 0);
        setQ0(&droop, 0);
    }
    
    // Droop controller execution
    executeDroop(&droop, IN_V_DIR, IN_V_QUAD, IN_I_DIR, IN_I_QUAD, &v, &p, &q);
    
    // Set Ki
    setKi(&droop, IN_KI);
    
    // Set Kv
    setKv(&droop, IN_KV);
    
    // Output values
    OUT_V = v;
    OUT_PF = p;
    OUT_QF = q;
}else{
    // Output values
    OUT_V = 0;
    OUT_PF = 0;
    OUT_QF = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_PF;real OUT_QF;"
                output_terminals_dimensions = "inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "False;False;False"
            }
            [
                position = 9824, 7880
                hide_name = True
                size = 120, 768
            ]

            component "core/Constant" Constant19 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9568, 8240
                hide_name = True
            ]

            component "core/Rate Transition" RT80 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9712, 7840
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT81 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9712, 7920
                hide_name = True
                size = 32, 32
            ]

            component "core/Probe" QF {
                signal_access = "Inherit"
                signal_type = "reactive power"
            }
            [
                position = 9968, 8240
                rotation = down
                scale = -1, 1
            ]

            component "core/SCADA Input" KV {
                unit = ""
            }
            [
                position = 9568, 8000
            ]

            component "core/Rate Transition" RT83 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9712, 8160
                hide_name = True
                size = 32, 32
            ]

            component "core/SCADA Input" KI {
                unit = ""
            }
            [
                position = 9568, 8080
            ]

            component "core/Probe" PF {
                signal_access = "Inherit"
                signal_type = "active power"
            }
            [
                position = 9968, 7880
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" V {
                signal_access = "Inherit"
                signal_type = "reactive power"
            }
            [
                position = 9968, 7592
                rotation = down
                scale = -1, 1
            ]

            component "core/C function" CURRENT_CONTROLLER1 {
                arb_defs = "/*Begin code section*/
// Proportional Controller Variables
float err = 0;
float u = 0;
float u0 = 0;
float u_bounded = 0;

// Proportional Controller Constants
float KP = 0;
float U_BOUNDARY = 0;

float K_IL1 = 0;
float K_IL2 = 0;
float K_VC = 0;
/*End code section*/"
                execution_rate = "TS_20KHZ"
                init_fnc = "/*Begin code section*/
// Proportional Controller Variables
err = 0;
u = 0;
u0 = 0;
u_bounded = 0;

// Proportional Controller Constants
KP = 8;
U_BOUNDARY = 500;

K_IL1 = 2.067713809462751e+00;
K_IL2 = 0;
K_VC = 1.074308920836938e-01;
/*End code section*/"
                input_terminals = "real IN_UV;real IN_IL1;real IN_VC;real IN_IO;real IN_KP;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // Proportional Controller
    err = IN_UV - IN_IL1;
    u0 = IN_KP * err;
    // Control action
    //u = u0 - 2.0937 * IN_IL1 - 0.4460 * IN_VC;
    u = u0 - K_IL1 * IN_IL1 - K_IL2 * IN_IO - K_VC * IN_VC;
    // Voltage control output limitation
    u_bounded = u;
    if( (u*u)/sqrt(u*u) >= U_BOUNDARY){
        u_bounded = U_BOUNDARY * u / sqrt(u*u);
    }
    // Output values
    OUT_PWMA = +u_bounded/U_BOUNDARY;
    OUT_PWMB = -u_bounded/U_BOUNDARY;
}else{
    // Output values
    OUT_PWMA = 0;
    OUT_PWMB = 0;
}
/*End code section*/"
                output_terminals = "real OUT_PWMA;real OUT_PWMB;"
                output_terminals_dimensions = "inherit;inherit"
                output_terminals_feedthrough = "True;True"
                output_terminals_show_labels = "False;False"
            }
            [
                position = 11472, 8288
                size = 120, 440
            ]

            component "core/Rate Transition" RT84 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11360, 8088
                hide_name = True
                size = 32, 32
            ]

            component "core/Constant" Constant20 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11216, 8488
                hide_name = True
            ]

            component "core/SCADA Input" KP {
                execution_rate = "TS_20KHZ"
                max = "50"
                min = "0"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 11216, 8408
            ]

            port L {
                position = right:auto
                kind = pe
            }
            [
                position = 10720, 7056
                scale = -1, 1
            ]

            port N {
                position = right:auto
                kind = pe
            }
            [
                position = 10720, 7248
                scale = -1, 1
            ]

            port "Info in" {
                position = left:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 8632, 7672
            ]

            tag From11 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9712, 6896
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "IL2"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10376, 6984
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From8 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9712, 6944
                hide_name = True
                size = 60, 20
            ]

            tag Goto13 {
                value = "VC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10376, 7200
                hide_name = True
                size = 60, 20
            ]

            tag Goto10 {
                value = "IL1"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10160, 6984
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From95 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9064, 7520
                hide_name = True
                size = 108, 20
            ]

            tag From96 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9064, 7792
                hide_name = True
                size = 108, 20
            ]

            tag Goto107 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7528
                hide_name = True
                size = 108, 20
            ]

            tag Goto108 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7592
                hide_name = True
                size = 108, 20
            ]

            tag Goto109 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7656
                hide_name = True
                size = 108, 20
            ]

            tag Goto110 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7720
                hide_name = True
                size = 108, 20
            ]

            tag Goto111 {
                value = "OMEGA_VSC1"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7784
                hide_name = True
                size = 108, 20
            ]

            tag Goto117 {
                value = "UV"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11080, 7520
                hide_name = True
                size = 108, 20
            ]

            tag Goto118 {
                value = "VREF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11080, 7920
                hide_name = True
                size = 108, 20
            ]

            tag Goto121 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11624, 7520
                hide_name = True
                size = 108, 20
            ]

            tag Goto122 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11624, 7920
                hide_name = True
                size = 108, 20
            ]

            tag From113 {
                value = "IL1"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11256, 7656
                hide_name = True
                size = 108, 20
            ]

            tag From115 {
                value = "UV"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11256, 7528
                hide_name = True
                size = 108, 20
            ]

            tag From141 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10712, 7528
                hide_name = True
                size = 108, 20
            ]

            tag From108 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10712, 7656
                hide_name = True
                size = 108, 20
            ]

            tag From144 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11256, 7784
                hide_name = True
                size = 108, 20
            ]

            tag Goto14 {
                value = "P0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8928, 7528
                hide_name = True
                size = 60, 20
            ]

            tag Goto15 {
                value = "Q0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8928, 7600
                hide_name = True
                size = 60, 20
            ]

            tag Goto18 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8928, 7664
                hide_name = True
                size = 60, 20
            ]

            tag Goto132 {
                value = "VRMS_VPCC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8928, 7696
                hide_name = True
                size = 60, 20
            ]

            tag Goto142 {
                value = "IL2_PC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10568, 7528
                hide_name = True
                size = 108, 20
            ]

            tag From160 {
                value = "VL_DROP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10712, 7784
                hide_name = True
                size = 108, 20
            ]

            tag Goto143 {
                value = "VL_DROP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10568, 7720
                hide_name = True
                size = 108, 20
            ]

            tag From161 {
                value = "IL2_PC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10136, 7712
                hide_name = True
                size = 108, 20
            ]

            tag From143 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10136, 7520
                hide_name = True
                size = 108, 20
            ]

            tag Goto146 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9976, 7520
                hide_name = True
                size = 108, 20
            ]

            tag From169 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7520
                hide_name = True
                size = 108, 20
            ]

            tag From170 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7600
                hide_name = True
                size = 108, 20
            ]

            tag From171 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7680
                hide_name = True
                size = 108, 20
            ]

            tag From172 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7760
                hide_name = True
                size = 108, 20
            ]

            tag From173 {
                value = "Q0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9584, 7920
                hide_name = True
                size = 60, 20
            ]

            tag From174 {
                value = "P0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9584, 7840
                hide_name = True
                size = 60, 20
            ]

            tag From175 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9584, 8160
                hide_name = True
                size = 60, 20
            ]

            tag Goto147 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11624, 8088
                hide_name = True
                size = 108, 20
            ]

            tag Goto148 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11624, 8488
                hide_name = True
                size = 108, 20
            ]

            tag From176 {
                value = "IL1"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11256, 8168
                hide_name = True
                size = 108, 20
            ]

            tag From177 {
                value = "UV"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11256, 8088
                hide_name = True
                size = 108, 20
            ]

            tag From178 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11256, 8248
                hide_name = True
                size = 108, 20
            ]

            tag From179 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11256, 8328
                hide_name = True
                size = 108, 20
            ]

            junction Junction87 pe
            [
                position = 10232, 7056
            ]

            junction Junction88 pe
            [
                position = 10296, 7056
            ]

            junction Junction95 sp
            [
                position = 9824, 6944
            ]

            junction Junction96 sp
            [
                position = 9840, 6960
            ]

            junction Junction97 pe
            [
                position = 10232, 7248
            ]

            junction Junction100 sp
            [
                position = 9808, 6992
            ]

            junction Junction101 sp
            [
                position = 11008, 7520
            ]

            junction Junction104 pe
            [
                position = 10296, 7248
            ]

            junction Junction105 pe
            [
                position = 10568, 7248
            ]

            junction Junction81 sp
            [
                position = 8776, 7520
            ]

            junction Junction109 sp
            [
                position = 10480, 7528
            ]

            junction Junction111 sp
            [
                position = 10480, 7720
            ]

            junction Junction112 sp
            [
                position = 10368, 7528
            ]

            junction Junction113 sp
            [
                position = 9904, 7520
            ]

            junction Junction114 sp
            [
                position = 11008, 7920
            ]

            comment Comment27 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">CONTROL </span></p></body></html> ENDCOMMENT 
            [
                position = 9952, 7368
            ]

            comment Comment28 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">POWER SYSTEM</span> </p></body></html> ENDCOMMENT 
            [
                position = 9912, 6784
            ]

            comment Comment16 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">PHASE LOCKED LOOP</p></body></html> ENDCOMMENT 
            [
                position = 9200, 7456
            ]

            comment Comment19 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VOLTAGE CONTROLLER </p></body></html> ENDCOMMENT 
            [
                position = 10832, 7456
            ]

            comment Comment20 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">CURRENT CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 11360, 7456
            ]

            comment Comment23 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[0] = P0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[1] = Q0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[2] = STS_STATUS   </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[3] = VRMS_PCC</p></body></html> ENDCOMMENT 
            [
                position = 8696, 7736
            ]

            comment Comment24 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">HANDLE INFO INPUT</p></body></html> ENDCOMMENT 
            [
                position = 8704, 7456
            ]

            comment Comment30 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">ALL PASS FILTER</p></body></html> ENDCOMMENT 
            [
                position = 10352, 7456
            ]

            comment Comment32 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VIRTUAL IMPEDANCE</p></body></html> ENDCOMMENT 
            [
                position = 10336, 7640
            ]

            comment Comment34 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 9728, 7456
            ]

            comment Comment35 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">CURRENT CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 11360, 8024
            ]

            connect R2.p_node C2.n_node as Connection553
            connect VC.out Goto13 as Connection499
            connect Vdc.p_node R3.n_node as Connection569
            connect IL1.out Goto10 as Connection713
            connect IL2.out Goto1 as Connection721
            connect IL1.n_node Junction87 as Connection726
            connect Junction87 C2.p_node as Connection727
            [
                breakpoints = 10232, 7056
            ]
            connect VC.p_node Junction88 as Connection729
            connect Junction88 Junction87 as Connection730
            connect IL2.p_node Junction88 as Connection731
            connect "Bus Join1.out" VSC1_COM.in as Connection749
            connect "GRID FORMING.neg_out" Vdc.n_node as Connection757
            connect R3.p_node "GRID FORMING.pos_out" as Connection758
            connect From8 Junction95 as Connection773
            [
                breakpoints = 9816, 6944; 9816, 6944
            ]
            connect Junction95 "Bus Join1.in1" as Connection775
            connect From11 Junction96 as Connection776
            [
                breakpoints = 9832, 6896; 9840, 6896
            ]
            connect "Bus Join1.in2" Junction96 as Connection778
            connect L6.p_node "GRID FORMING.a_in" as Connection788
            connect R2.n_node Junction97 as Connection789
            connect "GRID FORMING.b_in" Junction97 as Connection791
            connect Junction95 "GRID FORMING.InA" as Connection794
            connect Junction96 "GRID FORMING.InB" as Connection795
            connect Goto107 SOGI_QSG.OUT_V as Connection6532
            connect Goto108 SOGI_QSG.OUT_V_QUAD as Connection6533
            connect Goto109 SOGI_QSG.OUT_I as Connection6534
            connect SOGI_QSG.OUT_I_QUAD Goto110 as Connection6535
            connect Goto111 SOGI_QSG.OUT_OMEGA as Connection6536
            connect RT42.out SOGI_QSG.IN_IL2 as Connection6764
            connect RT42.in From96 as Connection6765
            connect From95 RT43.in as Connection6766
            connect RT43.out SOGI_QSG.IN_VGRID as Connection6767
            connect L6.n_node R4.p_node as Connection6768
            connect IL1.p_node R4.n_node as Connection6769
            connect RT19.out VOLTAGE_CONTROLLER.IN_VC as Connection6551
            connect Goto122 CURRENT_CONTROLLER.OUT_PWMB as Connection6568
            connect RT30.out CURRENT_CONTROLLER.IN_UV as Connection6585
            connect "Bus Join1.in" Junction100 as Connection6779
            connect Junction100 "GRID FORMING.En" as Connection6780
            [
                breakpoints = 9808, 6992
            ]
            connect Constant15.out Junction100 as Connection6781
            connect Constant14.out CURRENT_CONTROLLER.IN_ENABLE as Connection6784
            connect Goto117 Junction101 as Connection6785
            connect Junction101 VOLTAGE_CONTROLLER.OUT_V_CTRL as Connection6786
            connect REF_IL1.in Junction101 as Connection6787
            connect Constant13.out VOLTAGE_CONTROLLER.IN_ENABLE as Connection6798
            connect From108 RT19.in as Connection6807
            connect From113 CURRENT_CONTROLLER.IN_IL1 as Connection6808
            connect IL2.n_node Meter.in as Connection6811
            connect Junction97 Junction104 as Connection6812
            [
                breakpoints = 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248
            ]
            connect Junction104 VC.n_node as Connection6813
            [
                breakpoints = 10296, 7248; 10296, 7248; 10296, 7248; 10296, 7248; 10296, 7248
            ]
            connect Meter.N Junction105 as Connection6814
            connect Junction104 Junction105 as Connection6816
            connect From144 CURRENT_CONTROLLER.IN_MICROGRID_STATUS as Connection6817
            connect RT30.in From115 as Connection6818
            connect Meter.out "Core Coupling 2.a_in" as Connection6832
            connect "Core Coupling 2.a_out" L as Connection6833
            connect Junction105 "Core Coupling 2.b_in" as Connection6834
            connect "Core Coupling 2.b_out" N as Connection6835
            connect Goto121 CURRENT_CONTROLLER.OUT_PWMA as Connection6836
            [
                breakpoints = 11552, 7520; 11552, 7520
            ]
            connect Goto18 "Bus Split1.out2" as Connection622
            [
                breakpoints = 8896, 7664; 8880, 7664; 8896, 7664; 8816, 7664; 8816, 7672; 8744, 7672
            ]
            connect Goto14 Product1.out as Connection632
            connect Product2.out Goto15 as Connection633
            connect Product1.in Junction81 as Connection684
            connect Junction81 Product2.in as Connection685
            [
                breakpoints = 8776, 7520; 8776, 7592
            ]
            connect Constant9.out Junction81 as Connection686
            connect "Bus Split1.out1" Product2.in1 as Connection6840
            [
                breakpoints = 8776, 7640; 8776, 7608
            ]
            connect "Bus Split1.out" Product1.in1 as Connection6841
            [
                breakpoints = 8760, 7624; 8760, 7536
            ]
            connect "Info in" "Bus Split1.in" as Connection6843
            connect Goto132 "Bus Split1.out3" as Connection6844
            [
                breakpoints = 8880, 7696; 8816, 7696; 8816, 7688
            ]
            connect APF.OUT_IL2_PC Junction109 as Connection6891
            connect Junction109 Goto142 as Connection6892
            connect IL2_PC.in Junction109 as Connection6893
            connect VIRTUAL_IMPEDANCE.OUT_VL_DROP Junction111 as Connection6899
            connect Junction111 Goto143 as Connection6900
            connect VL_DROP.in Junction111 as Connection6901
            connect From160 VOLTAGE_CONTROLLER.IN_VL_DROP as Connection6904
            connect From161 VIRTUAL_IMPEDANCE.IN_IL2_PC as Connection6905
            connect VZ.out VIRTUAL_IMPEDANCE.IN_VIRTUAL_INDUCTANCE as Connection6906
            [
                breakpoints = 10280, 7768; 10280, 7728
            ]
            connect RT61.out LPF.in as Connection6895
            connect RT61.in From143 as Connection6896
            connect APF.IN_IL2_F Junction112 as Connection6909
            connect Junction112 IL2_F.in as Connection6910
            [
                breakpoints = 10368, 7528
            ]
            connect LPF.out Junction112 as Connection6911
            connect FC.out LPF.fc_input as Connection6912
            connect From141 VOLTAGE_CONTROLLER.IN_V_REF as Connection6985
            connect RT83.out DROOP_CONTROLLER2.IN_MICROGRID_STATUS as Connection6964
            connect RT83.in From175 as Connection6965
            connect RT81.out DROOP_CONTROLLER2.IN_Q0 as Connection6972
            connect RT81.in From173 as Connection6973
            connect RT80.out DROOP_CONTROLLER2.IN_P0 as Connection6974
            connect From174 RT80.in as Connection6975
            connect Goto146 Junction113 as Connection6982
            connect Junction113 DROOP_CONTROLLER2.OUT_V as Connection6983
            connect V.in Junction113 as Connection6984
            connect Constant19.out DROOP_CONTROLLER2.IN_ENABLE as Connection6988
            connect From169 DROOP_CONTROLLER2.IN_V_DIR as Connection6989
            connect From170 DROOP_CONTROLLER2.IN_V_QUAD as Connection6990
            connect From171 DROOP_CONTROLLER2.IN_I_DIR as Connection6991
            connect From172 DROOP_CONTROLLER2.IN_I_QUAD as Connection6992
            connect KV.out DROOP_CONTROLLER2.IN_KV as Connection6993
            connect KI.out DROOP_CONTROLLER2.IN_KI as Connection6994
            connect QF.in DROOP_CONTROLLER2.OUT_QF as Connection6996
            connect PF.in DROOP_CONTROLLER2.OUT_PF as Connection6997
            connect VOLTAGE_CONTROLLER.OUT_V_REF Junction114 as Connection6999
            connect Junction114 Goto118 as Connection7000
            connect REF_VC.in Junction114 as Connection7001
            connect Goto148 CURRENT_CONTROLLER1.OUT_PWMB as Connection7002
            connect RT84.out CURRENT_CONTROLLER1.IN_UV as Connection7003
            connect Constant20.out CURRENT_CONTROLLER1.IN_ENABLE as Connection7004
            connect From176 CURRENT_CONTROLLER1.IN_IL1 as Connection7005
            connect From178 CURRENT_CONTROLLER1.IN_VC as Connection7006
            connect RT84.in From177 as Connection7007
            connect Goto147 CURRENT_CONTROLLER1.OUT_PWMA as Connection7008
            [
                breakpoints = 11552, 8088; 11552, 8088
            ]
            connect KP.out CURRENT_CONTROLLER1.IN_KP as Connection7009
            connect From179 CURRENT_CONTROLLER1.IN_IO as Connection7010
        }
        [
            position = 8224, 8216
            hide_name = True
            size = 72, 120
        ]

        tag Goto5 {
            value = "MGCC_info_out"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8760, 7888
            rotation = left
            hide_name = True
            size = 107, 20
        ]

        tag From3 {
            value = "MGCC_info_out"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8096, 8216
            hide_name = True
            size = 108, 20
        ]

        tag From4 {
            value = "MGCC_info_out"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8096, 8032
            hide_name = True
            size = 108, 20
        ]

        junction Junction2 pe
        [
            position = 8488, 8176
        ]

        junction Junction3 pe
        [
            position = 8488, 7992
        ]

        comment Comment19 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">GRID</p></body></html> ENDCOMMENT 
        [
            position = 9048, 8104
        ]

        comment Comment20 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">MGCC</p></body></html> ENDCOMMENT 
        [
            position = 8728, 8104
        ]

        comment Comment24 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">LOAD</p></body></html> ENDCOMMENT 
        [
            position = 8736, 8288
        ]

        comment Comment25 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VSC2</p></body></html> ENDCOMMENT 
        [
            position = 8200, 8288
        ]

        comment Comment26 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VSC1</p></body></html> ENDCOMMENT 
        [
            position = 8200, 8104
        ]

        connect R_load.n_node L_load.p_node as Connection2
        connect Goto5 "MGCC.Info out" as Connection7
        connect R_grid.n_node L_grid.p_node as Connection32
        connect Load.N gnd3.node as Connection42
        connect Load.L L_load.n_node as Connection43
        connect L_grid.n_node Grid.L as Connection44
        connect MGCC.Nug gnd4.node as Connection46
        connect MGCC.Lg R_grid.p_node as Connection47
        connect MGCC.Ng Grid.N as Connection48
        connect R_VSC2.n_node L_VSC2.p_node as Connection49
        connect R_load.p_node Junction2 as Connection53
        connect L_VSC2.n_node Junction2 as Connection55
        connect R_VSC1.n_node L_VSC1.p_node as Connection57
        connect Junction2 Junction3 as Connection61
        [
            breakpoints = 8488, 8176; 8488, 8176
        ]
        connect Junction3 MGCC.Lug as Connection62
        [
            breakpoints = 8488, 7992
        ]
        connect L_VSC1.n_node Junction3 as Connection63
        connect VSC1.L R_VSC1.p_node as Connection76
        connect VSC1.N gnd8.node as Connection77
        connect From4 "VSC1.Info in" as Connection78
        connect VSC2.L R_VSC2.p_node as Connection79
        connect VSC2.N gnd7.node as Connection80
        connect From3 "VSC2.Info in" as Connection81
    }

    logically_deleted {
        "VSC_BACKUP0"
        "VSC_BACKUP1"
        "VSC_BACKUP2"
        "Comment24"
        "VSC1.From177"
        "VSC1.From178"
        "VSC1.Goto148"
        "VSC1.Goto147"
        "VSC1.From176"
        "VSC1.RT84"
        "VSC1.CURRENT_CONTROLLER1"
        "VSC1.KP"
        "VSC1.Constant20"
        "VSC1.Connection7006"
        "VSC1.Connection7005"
        "VSC1.Connection7007"
        "VSC1.Connection7003"
        "VSC1.Connection7004"
        "VSC1.Connection7009"
        "VSC1.Connection7008"
        "VSC1.Connection7002"
        "VSC1.Comment35"
        "VSC1.Comment30"
        "VSC1.Comment34"
        "VSC1.Comment32"
        "VSC1.From179"
        "VSC1.Connection7010"
        "VSC2.From177"
        "VSC2.From176"
        "VSC2.Goto147"
        "VSC2.From179"
        "VSC2.From178"
        "VSC2.Goto148"
        "VSC2.KP"
        "VSC2.RT84"
        "VSC2.Constant20"
        "VSC2.CURRENT_CONTROLLER1"
        "VSC2.Connection7007"
        "VSC2.Connection7008"
        "VSC2.Connection7010"
        "VSC2.Connection7004"
        "VSC2.Connection7009"
        "VSC2.Connection7006"
        "VSC2.Connection7005"
        "VSC2.Connection7002"
        "VSC2.Connection7003"
        "VSC2.Comment34"
        "VSC2.Comment35"
        "VSC2.Comment32"
        "VSC2.Comment30"
    }

    default {
        "core/Bus Join" {
            inputs = "2"
            execution_rate = "inherit"
        }

        "core/Bus Split" {
            outputs = "2"
            execution_rate = "inherit"
        }

        "core/C function" {
            input_terminals = "real in;"
            input_terminals_show_labels = "False;"
            input_terminals_feedthrough = "True;"
            input_terminals_dimensions = "inherit;"
            output_terminals = "real out;"
            output_terminals_show_labels = "False;"
            output_terminals_feedthrough = "True;"
            output_terminals_dimensions = "inherit;"
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            library_load_type = "Compile-time load"
            dll_file_path = ""
            dll_file_path_full = ""
            arm_a9_file_path = ""
            arm_a9_file_path_full = ""
            arm_a53_file_path = ""
            arm_a53_file_path_full = ""
            h_file_path = ""
            h_file_path_full = ""
            add_src_path = ""
            add_src_path_full = ""
            convert_to_relative_dll = "True"
            convert_to_relative_a = "True"
            convert_to_relative_src = "True"
            arb_defs = ""
            add_macros = ""
            skip_pre_cmpl_check = "False"
            generate_for_hil = "True"
            execution_rate = "inherit"
            _supported_platforms = "[\'generic\']"
            refresh = "refresh"
        }

        "core/Capacitor" {
            signal_access = "inherit"
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        "core/Constant" {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
            _tunable = "False"
        }

        "core/Inductor" {
            signal_access = "inherit"
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        "core/Probe" {
            signal_access = "inherit"
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        "core/Product" {
            signs = "2"
            execution_rate = "inherit"
        }

        "core/RMS value" {
            op_mode = "PLL based"
            frequency = "50"
            period_timeout = "0.5"
            period_deadband = "0"
            filter_en = "False"
            lpf_cutoff = "500"
            frequency_src = "Internal"
            execution_rate = "inherit"
        }

        "core/Resistor" {
            resistance = "1"
            param_set = ""
        }

        "core/SCADA Input" {
            signal_access = "inherit"
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        "core/Signal switch" {
            criterion = "ctrl > threshold"
            threshold = "0.5"
            execution_rate = "inherit"
        }

        "core/Termination" {
            execution_rate = "inherit"
        }

        "core/Voltage Source" {
            sig_input = "False"
            type = "signal generator"
            param_set = "1phase"
            parent_label = ""
            addr = "0"
            spc_nb = "0"
            execution_rate = "100e-6"
            cpd_visible = "True"
            enable_snb = "False"
            snb_type = "R2"
            R2 = "0.0"
            L1 = "0.1"
            override_signal_name = "False"
            signal_name = ""
            init_source_nature = "Constant"
            init_const_value = "0.0"
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        "core/Advanced Low-Pass Filter" {
            type_combo = "Chebyshev1"
            N = "5"
            fc_combo = "Internal"
            fc = "500"
            apb = "fc"
            asb = "40"
            ch_1 = "0"
            ch_2 = "0"
            ch_3 = "0"
            ep = "0"
            es = "0"
            Ke = "0"
            d0e = "0"
            Ne = "0"
            execution_rate = "10e-6"
            bode_plot = "Bode plot"
        }

        "core/Current Measurement" {
            signal_access = "inherit"
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Double Pole Single Throw Contactor" {
            signal_access = "inherit"
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/Rate Transition" {
            init_value = "0.0"
            execution_rate = "100e-6"
            _supported_platforms = "[\'generic\']"
        }

        "core/Signal Controlled Sinusoidal Voltage Source" {
            phase_number = "1"
            execution_rate = "inherit"
        }

        "core/Single Phase Core Coupling" {
            snb_type_i = "none"
            R1 = "100000.0"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "false"
            snb_type_u = "none"
            R2 = "0.1"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "false"
        }

        "core/Single Phase Inverter" {
            signal_access = "inherit"
            ctrl_src = "Digital input per switch"
            op_mode = "Fixed carrier frequency"
            carrier_freq = "10000.0"
            phase_op_mode = "Fixed carrier phase offset"
            carr_ph_offset = "[0.0, 180.0]"
            d_time = "5e-6"
            ref_sig_min_max = "[-1.0, 1.0]"
            load_mode = "on min"
            execution_rate = "inherit"
            Sa_top = "1"
            Sa_top_logic = "active high"
            Sa_bot = "2"
            Sa_bot_logic = "active high"
            Sb_top = "3"
            Sb_top_logic = "active high"
            Sb_bot = "4"
            Sb_bot_logic = "active high"
            Sa_top_I = "False"
            Sa_bot_I = "False"
            Sb_top_I = "False"
            Sb_bot_I = "False"
            losses_estimation = "False"
            fvd_def_method = "Voltage and Resistance"
            Import_igbt_xml = "not selected"
            Import_diode_xml = "not selected"
            Switch_type = "IGBT"
            Vce = "1.3"
            Rce = "0"
            Vd = "1.2"
            Rd = "0"
            i_sw = "[0.0, 6.0, 12.0, 18.0, 24.0]"
            v_sw = "[0.0, 600.0]"
            temp_sw = "[25.0, 50.0, 75.0, 100.0, 125.0]"
            vce_table_out = "[1.3, 1.3, 1.3, 1.3, 1.3]"
            vd_table_out = "[1.2, 1.2, 1.2, 1.2, 1.2]"
            et_on_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*3.8e-3, 0.4*3.8e-3, 0.8*3.8e-3, 0.68*3.8e-3, 0.9*3.8e-3], [0.65*3.8e-3, 0.9*3.8e-3, 1.2*3.8e-3, 1.5*3.8e-3, 1.7*3.8e-3], [0.9*3.8e-3, 1.3*3.8e-3, 1.7*3.8e-3, 1.9*3.8e-3, 2.25*3.8e-3], [1.1*3.8e-3, 1.7*3.8e-3, 2.1*3.8e-3, 2.3*3.8e-3, 2.5*3.8e-3]]"
            et_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.1e-3, 0.4*2.1e-3, 0.8*2.1e-3, 0.68*2.1e-3, 0.9*2.1e-3], [0.65*2.1e-3, 0.9*2.1e-3, 1.2*2.1e-3, 1.5*2.1e-3, 1.7*2.1e-3], [0.9*2.1e-3, 1.3*2.1e-3, 1.7*2.1e-3, 1.9*2.1e-3, 2.25*2.1e-3], [1.1*2.1e-3, 1.7*2.1e-3, 2.1*2.1e-3, 2.3*2.1e-3, 2.5*2.1e-3]]"
            ed_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.2e-3, 0.4*2.2e-3, 0.8*2.2e-3, 0.68*2.2e-3, 0.9*2.2e-3], [0.65*2.2e-3, 0.9*2.2e-3, 1.2*2.2e-3, 1.5*2.2e-3, 1.7*2.2e-3], [0.9*2.2e-3, 1.3*2.2e-3, 1.7*2.2e-3, 1.9*2.2e-3, 2.25*2.2e-3], [1.1*2.2e-3, 1.7*2.2e-3, 2.1*2.2e-3, 2.3*2.2e-3, 2.5*2.2e-3]]"
            temp_estimation = "False"
            thermal_networks_type = "Foster"
            switch_Rth = "[0.159, 0.133, 0.120, 0.038]"
            switch_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            switch_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            diode_Rth = "[0.159, 0.133, 0.120, 0.038]"
            diode_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            diode_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            loss_exec_rate = "100e-6"
            visualize_luts = "Visualize Lookup Tables"
            show_monitoring = "False"
            FSM_select = "converter"
            _control_property = "all high"
            switches_names_at_mask = "[]"
            pwm_enabling = "False"
            pwm_enable_di = "13"
            pwm_enable_inv = "active high"
            dtv_flag_en = "True"
            PESB_Optimization = "True"
            dynamic_ac_voltage = "False"
        }

        "core/Single phase PLL" {
            scheduling_mode = "Enable"
            offset_Hz = "55"
            delta_Hz_max = "10"
            vd_init = "200"
            angle_init = "0"
            k_SOGI = "0.4"
            kp_PLL_LOW = "4.81e3"
            kp_PLL_HIGH = "527"
            ki_PLL_LOW = "1.84e4"
            ki_PLL_HIGH = "2.22e3"
            kd_PLL_LOW = "-5.19"
            kd_PLL_HIGH = "-0.519"
            Tf_kd_PLL = "0.00108"
            fc_LPF_vd = "20"
            fc_LPF_wPLL = "100"
            fc_LPF_fPLL = "10"
            execution_rate = "inherit"
        }

        "core/Single-phase Meter" {
            fgrid = "0"
            n_cycles = "0"
            execution_rate = "100e-6"
            enable_out = "True"
        }

        "core/Single-phase Variable Load" {
            core_type = "Series"
            Vnom_rms = "230"
            fnom = "50"
            Snom = "1e3"
            pf_nom = "0.9"
            include_harmonic = "False"
            harmonic_list = "[1,3,5,7,9]"
            enable_ext_ref = "False"
            enable_outputs = "False"
            execution_rate = "100e-6"
            Z_ind_pu = "0.05"
            pf_snubber = "0.4"
        }

        "core/Voltage Measurement" {
            signal_access = "inherit"
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        # The Schematic API is imported as 'mdl'
        # To get the model file path, use 'mdl.get_model_file_path()'
        # To print information to the console, use info()
        
        # GENERAL
        V_RMS = 220;
        F_GRID = 60;
        OMEGA0 = 376.991118431;
        S_NOMINAL = 30000;
        
        # SAMPLING TIMES
        TS_01KHZ = 0.00100;
        TS_02KHZ = 0.00050;
        TS_05KHZ = 0.00020;
        TS_10KHZ = 0.00010;
        TS_20KHZ = 0.00005;
        TS_200KHZ = 0.000005;
        TS_01MHZ = 0.000001;
        
        # CONST VSC1
        VSC1_VDC = 500;
        VSC1_LF = 1e-3;
        VSC1_RF = 0.1;
        VSC1_C = 44e-6;
        VSC1_RD = 1.5;
        VSC1_S = 15000;
        VSC1_LINE_RESISTANCE = 10e-2;
        VSC1_LINE_INDUCTANCE = 20e-6;
        
        # CONST VSC2
        VSC2_LINE_RESISTANCE = 10e-2;
        VSC2_LINE_INDUCTANCE = 20e-6;
        
        # CONST LOAD
        LOAD_LINE_RESISTANCE = 10e-2;
        LOAD_LINE_INDUCTANCE = 20e-6;
        
        # CONST GRID
        GRID_LINE_RESISTANCE = 10e-2; #0.6420 * 0.2; # por km * %
        GRID_LINE_INDUCTANCE = 20e-6; #222e-6 * 0.2; # por km * %
    ENDCODE
}
